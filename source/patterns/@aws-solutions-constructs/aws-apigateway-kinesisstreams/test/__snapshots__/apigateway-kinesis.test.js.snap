// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test deployment w/ existing stream 1`] = `
Object {
  "Conditions": Object {
    "AwsCdkKinesisEncryptedStreamsUnsupportedRegions": Object {
      "Fn::Or": Array [
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "AWS::Region",
            },
            "cn-north-1",
          ],
        },
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "AWS::Region",
            },
            "cn-northwest-1",
          ],
        },
      ],
    },
  },
  "Outputs": Object {
    "apigatewaykinesisRestApiEndpoint0C8E406E": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "apigatewaykinesisRestApi0DCC9877",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "apigatewaykinesisRestApiDeploymentStageprod015090BD",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Resources": Object {
    "ExistingStreamE527A562": Object {
      "Properties": Object {
        "RetentionPeriodHours": 96,
        "ShardCount": 5,
        "StreamEncryption": Object {
          "Fn::If": Array [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            Object {
              "Ref": "AWS::NoValue",
            },
            Object {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis",
            },
          ],
        },
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "apigatewaykinesisApiAccessLogGroup65465AAF": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "apigatewaykinesisLambdaRestApiAccount3F075103": Object {
      "DependsOn": Array [
        "apigatewaykinesisRestApi0DCC9877",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "apigatewaykinesisLambdaRestApiCloudWatchRoleB7706361",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "apigatewaykinesisLambdaRestApiCloudWatchRoleB7706361": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "apigatewaykinesisRestApi0DCC9877": Object {
      "Properties": Object {
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "Name": "RestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "apigatewaykinesisRestApiDeployment10E9BBA500f91055d8a8b2b3fed1250a8f7422a0": Object {
      "DependsOn": Array [
        "apigatewaykinesisRestApirecordPOST833DA459",
        "apigatewaykinesisRestApirecord3F4EC064",
        "apigatewaykinesisRestApirecordsPOST08A9BEAD",
        "apigatewaykinesisRestApirecordsE5337BB6",
        "apigatewaykinesisRestApiPutRecordModel55C7723E",
        "apigatewaykinesisRestApiPutRecordsModel217E2E73",
        "apigatewaykinesisRestApirequestvalidator4482E7FC",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "apigatewaykinesisRestApiDeploymentStageprod015090BD": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "apigatewaykinesisApiAccessLogGroup65465AAF",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"user\\":\\"$context.identity.user\\",\\"caller\\":\\"$context.identity.caller\\",\\"requestTime\\":\\"$context.requestTime\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}",
        },
        "DeploymentId": Object {
          "Ref": "apigatewaykinesisRestApiDeployment10E9BBA500f91055d8a8b2b3fed1250a8f7422a0",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "apigatewaykinesisRestApiPutRecordModel55C7723E": Object {
      "Properties": Object {
        "ContentType": "application/json",
        "Description": "PutRecord proxy single-record payload",
        "Name": "PutRecordModel",
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
        "Schema": Object {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": Object {
            "data": Object {
              "type": "string",
            },
            "partitionKey": Object {
              "type": "string",
            },
          },
          "required": Array [
            "data",
            "partitionKey",
          ],
          "title": "PutRecord proxy single-record payload",
          "type": "object",
        },
      },
      "Type": "AWS::ApiGateway::Model",
    },
    "apigatewaykinesisRestApiPutRecordsModel217E2E73": Object {
      "Properties": Object {
        "ContentType": "application/json",
        "Description": "PutRecords proxy payload data",
        "Name": "PutRecordsModel",
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
        "Schema": Object {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": Object {
            "records": Object {
              "items": Object {
                "properties": Object {
                  "data": Object {
                    "type": "string",
                  },
                  "partitionKey": Object {
                    "type": "string",
                  },
                },
                "required": Array [
                  "data",
                  "partitionKey",
                ],
                "type": "object",
              },
              "type": "array",
            },
          },
          "required": Array [
            "records",
          ],
          "title": "PutRecords proxy payload data",
          "type": "object",
        },
      },
      "Type": "AWS::ApiGateway::Model",
    },
    "apigatewaykinesisRestApiUsagePlan40457E86": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "apigatewaykinesisRestApi0DCC9877",
            },
            "Stage": Object {
              "Ref": "apigatewaykinesisRestApiDeploymentStageprod015090BD",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "apigatewaykinesisRestApirecord3F4EC064": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "apigatewaykinesisRestApi0DCC9877",
            "RootResourceId",
          ],
        },
        "PathPart": "record",
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "apigatewaykinesisRestApirecordPOST833DA459": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewaykinesisapigatewayrole9271A0CE",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "text/html": "Error",
              },
              "SelectionPattern": "500",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'x-amz-json-1.1'",
          },
          "RequestTemplates": Object {
            "application/json": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{ \\"StreamName\\": \\"",
                  Object {
                    "Ref": "ExistingStreamE527A562",
                  },
                  "\\", \\"Data\\": \\"$util.base64Encode($input.json('$.data'))\\", \\"PartitionKey\\": \\"$input.path('$.partitionKey')\\" }",
                ],
              ],
            },
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":kinesis:action/PutRecord",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "500",
          },
        ],
        "RequestModels": Object {
          "application/json": Object {
            "Ref": "apigatewaykinesisRestApiPutRecordModel55C7723E",
          },
        },
        "RequestValidatorId": Object {
          "Ref": "apigatewaykinesisRestApirequestvalidator4482E7FC",
        },
        "ResourceId": Object {
          "Ref": "apigatewaykinesisRestApirecord3F4EC064",
        },
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "apigatewaykinesisRestApirecordsE5337BB6": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "apigatewaykinesisRestApi0DCC9877",
            "RootResourceId",
          ],
        },
        "PathPart": "records",
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "apigatewaykinesisRestApirecordsPOST08A9BEAD": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewaykinesisapigatewayrole9271A0CE",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "text/html": "Error",
              },
              "SelectionPattern": "500",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'x-amz-json-1.1'",
          },
          "RequestTemplates": Object {
            "application/json": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{ \\"StreamName\\": \\"",
                  Object {
                    "Ref": "ExistingStreamE527A562",
                  },
                  "\\", \\"Records\\": [ #foreach($elem in $input.path('$.records')) { \\"Data\\": \\"$util.base64Encode($elem.data)\\", \\"PartitionKey\\": \\"$elem.partitionKey\\"}#if($foreach.hasNext),#end #end ] }",
                ],
              ],
            },
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":kinesis:action/PutRecords",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "500",
          },
        ],
        "RequestModels": Object {
          "application/json": Object {
            "Ref": "apigatewaykinesisRestApiPutRecordsModel217E2E73",
          },
        },
        "RequestValidatorId": Object {
          "Ref": "apigatewaykinesisRestApirequestvalidator4482E7FC",
        },
        "ResourceId": Object {
          "Ref": "apigatewaykinesisRestApirecordsE5337BB6",
        },
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "apigatewaykinesisRestApirequestvalidator4482E7FC": Object {
      "Properties": Object {
        "Name": "request-body-validator",
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
        "ValidateRequestBody": true,
      },
      "Type": "AWS::ApiGateway::RequestValidator",
    },
    "apigatewaykinesisapigatewayrole9271A0CE": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "apigatewaykinesisapigatewayroleDefaultPolicy6E8D093B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ExistingStreamE527A562",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "apigatewaykinesisapigatewayroleDefaultPolicy6E8D093B",
        "Roles": Array [
          Object {
            "Ref": "apigatewaykinesisapigatewayrole9271A0CE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;

exports[`Test deployment w/ overwritten properties 1`] = `
Object {
  "Outputs": Object {
    "apigatewaykinesisRestApiEndpoint0C8E406E": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "apigatewaykinesisRestApi0DCC9877",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "apigatewaykinesisRestApiDeploymentStageprod015090BD",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Resources": Object {
    "KinesisStream46752A3E": Object {
      "Properties": Object {
        "Name": "my-stream",
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "apigatewaykinesisApiAccessLogGroup65465AAF": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "apigatewaykinesisLambdaRestApiAccount3F075103": Object {
      "DependsOn": Array [
        "apigatewaykinesisRestApi0DCC9877",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "apigatewaykinesisLambdaRestApiCloudWatchRoleB7706361",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "apigatewaykinesisLambdaRestApiCloudWatchRoleB7706361": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "apigatewaykinesisRestApi0DCC9877": Object {
      "Properties": Object {
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "Name": "my-api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "apigatewaykinesisRestApiDeployment10E9BBA592f6dffe73c609db3a34add9add8b26e": Object {
      "DependsOn": Array [
        "apigatewaykinesisRestApirecordPOST833DA459",
        "apigatewaykinesisRestApirecord3F4EC064",
        "apigatewaykinesisRestApirecordsPOST08A9BEAD",
        "apigatewaykinesisRestApirecordsE5337BB6",
        "apigatewaykinesisRestApiPutRecordModel55C7723E",
        "apigatewaykinesisRestApiPutRecordsModel217E2E73",
        "apigatewaykinesisRestApirequestvalidator4482E7FC",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "apigatewaykinesisRestApiDeploymentStageprod015090BD": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "apigatewaykinesisApiAccessLogGroup65465AAF",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"user\\":\\"$context.identity.user\\",\\"caller\\":\\"$context.identity.caller\\",\\"requestTime\\":\\"$context.requestTime\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}",
        },
        "DeploymentId": Object {
          "Ref": "apigatewaykinesisRestApiDeployment10E9BBA592f6dffe73c609db3a34add9add8b26e",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
          Object {
            "HttpMethod": "*",
            "ResourcePath": "/*",
            "ThrottlingBurstLimit": 25,
            "ThrottlingRateLimit": 100,
          },
        ],
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "apigatewaykinesisRestApiPutRecordModel55C7723E": Object {
      "Properties": Object {
        "ContentType": "application/json",
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
        "Schema": Object {
          "$schema": "http://json-schema.org/draft-04/schema#",
        },
      },
      "Type": "AWS::ApiGateway::Model",
    },
    "apigatewaykinesisRestApiPutRecordsModel217E2E73": Object {
      "Properties": Object {
        "ContentType": "application/json",
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
        "Schema": Object {
          "$schema": "http://json-schema.org/draft-04/schema#",
        },
      },
      "Type": "AWS::ApiGateway::Model",
    },
    "apigatewaykinesisRestApiUsagePlan40457E86": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "apigatewaykinesisRestApi0DCC9877",
            },
            "Stage": Object {
              "Ref": "apigatewaykinesisRestApiDeploymentStageprod015090BD",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "apigatewaykinesisRestApirecord3F4EC064": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "apigatewaykinesisRestApi0DCC9877",
            "RootResourceId",
          ],
        },
        "PathPart": "record",
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "apigatewaykinesisRestApirecordPOST833DA459": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewaykinesisapigatewayrole9271A0CE",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "text/html": "Error",
              },
              "SelectionPattern": "500",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'x-amz-json-1.1'",
          },
          "RequestTemplates": Object {
            "application/json": "{ \\"Data\\": \\"$util.base64Encode($input.json('$.foo'))\\", \\"PartitionKey\\": \\"$input.path('$.bar')\\" }",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":kinesis:action/PutRecord",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "500",
          },
        ],
        "RequestModels": Object {
          "application/json": Object {
            "Ref": "apigatewaykinesisRestApiPutRecordModel55C7723E",
          },
        },
        "RequestValidatorId": Object {
          "Ref": "apigatewaykinesisRestApirequestvalidator4482E7FC",
        },
        "ResourceId": Object {
          "Ref": "apigatewaykinesisRestApirecord3F4EC064",
        },
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "apigatewaykinesisRestApirecordsE5337BB6": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "apigatewaykinesisRestApi0DCC9877",
            "RootResourceId",
          ],
        },
        "PathPart": "records",
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "apigatewaykinesisRestApirecordsPOST08A9BEAD": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewaykinesisapigatewayrole9271A0CE",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "text/html": "Error",
              },
              "SelectionPattern": "500",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'x-amz-json-1.1'",
          },
          "RequestTemplates": Object {
            "application/json": "{ \\"Records\\": [ #foreach($elem in $input.path('$.records')) { \\"Data\\": \\"$util.base64Encode($elem.foo)\\", \\"PartitionKey\\": \\"$elem.bar\\"}#if($foreach.hasNext),#end #end ] }",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":kinesis:action/PutRecords",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "500",
          },
        ],
        "RequestModels": Object {
          "application/json": Object {
            "Ref": "apigatewaykinesisRestApiPutRecordsModel217E2E73",
          },
        },
        "RequestValidatorId": Object {
          "Ref": "apigatewaykinesisRestApirequestvalidator4482E7FC",
        },
        "ResourceId": Object {
          "Ref": "apigatewaykinesisRestApirecordsE5337BB6",
        },
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "apigatewaykinesisRestApirequestvalidator4482E7FC": Object {
      "Properties": Object {
        "Name": "request-body-validator",
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
        "ValidateRequestBody": true,
      },
      "Type": "AWS::ApiGateway::RequestValidator",
    },
    "apigatewaykinesisapigatewayrole9271A0CE": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "apigatewaykinesisapigatewayroleDefaultPolicy6E8D093B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "KinesisStream46752A3E",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "apigatewaykinesisapigatewayroleDefaultPolicy6E8D093B",
        "Roles": Array [
          Object {
            "Ref": "apigatewaykinesisapigatewayrole9271A0CE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;

exports[`Test minimal deployment snapshot 1`] = `
Object {
  "Outputs": Object {
    "apigatewaykinesisRestApiEndpoint0C8E406E": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "apigatewaykinesisRestApi0DCC9877",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "apigatewaykinesisRestApiDeploymentStageprod015090BD",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Resources": Object {
    "KinesisStream46752A3E": Object {
      "Properties": Object {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "apigatewaykinesisApiAccessLogGroup65465AAF": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "apigatewaykinesisLambdaRestApiAccount3F075103": Object {
      "DependsOn": Array [
        "apigatewaykinesisRestApi0DCC9877",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "apigatewaykinesisLambdaRestApiCloudWatchRoleB7706361",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "apigatewaykinesisLambdaRestApiCloudWatchRoleB7706361": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "apigatewaykinesisRestApi0DCC9877": Object {
      "Properties": Object {
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "Name": "RestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "apigatewaykinesisRestApiDeployment10E9BBA50145d52c9739e1665f76481cf8f4c3ef": Object {
      "DependsOn": Array [
        "apigatewaykinesisRestApirecordPOST833DA459",
        "apigatewaykinesisRestApirecord3F4EC064",
        "apigatewaykinesisRestApirecordsPOST08A9BEAD",
        "apigatewaykinesisRestApirecordsE5337BB6",
        "apigatewaykinesisRestApiPutRecordModel55C7723E",
        "apigatewaykinesisRestApiPutRecordsModel217E2E73",
        "apigatewaykinesisRestApirequestvalidator4482E7FC",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "apigatewaykinesisRestApiDeploymentStageprod015090BD": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "apigatewaykinesisApiAccessLogGroup65465AAF",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"user\\":\\"$context.identity.user\\",\\"caller\\":\\"$context.identity.caller\\",\\"requestTime\\":\\"$context.requestTime\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}",
        },
        "DeploymentId": Object {
          "Ref": "apigatewaykinesisRestApiDeployment10E9BBA50145d52c9739e1665f76481cf8f4c3ef",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "apigatewaykinesisRestApiPutRecordModel55C7723E": Object {
      "Properties": Object {
        "ContentType": "application/json",
        "Description": "PutRecord proxy single-record payload",
        "Name": "PutRecordModel",
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
        "Schema": Object {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": Object {
            "data": Object {
              "type": "string",
            },
            "partitionKey": Object {
              "type": "string",
            },
          },
          "required": Array [
            "data",
            "partitionKey",
          ],
          "title": "PutRecord proxy single-record payload",
          "type": "object",
        },
      },
      "Type": "AWS::ApiGateway::Model",
    },
    "apigatewaykinesisRestApiPutRecordsModel217E2E73": Object {
      "Properties": Object {
        "ContentType": "application/json",
        "Description": "PutRecords proxy payload data",
        "Name": "PutRecordsModel",
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
        "Schema": Object {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": Object {
            "records": Object {
              "items": Object {
                "properties": Object {
                  "data": Object {
                    "type": "string",
                  },
                  "partitionKey": Object {
                    "type": "string",
                  },
                },
                "required": Array [
                  "data",
                  "partitionKey",
                ],
                "type": "object",
              },
              "type": "array",
            },
          },
          "required": Array [
            "records",
          ],
          "title": "PutRecords proxy payload data",
          "type": "object",
        },
      },
      "Type": "AWS::ApiGateway::Model",
    },
    "apigatewaykinesisRestApiUsagePlan40457E86": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "apigatewaykinesisRestApi0DCC9877",
            },
            "Stage": Object {
              "Ref": "apigatewaykinesisRestApiDeploymentStageprod015090BD",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "apigatewaykinesisRestApirecord3F4EC064": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "apigatewaykinesisRestApi0DCC9877",
            "RootResourceId",
          ],
        },
        "PathPart": "record",
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "apigatewaykinesisRestApirecordPOST833DA459": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewaykinesisapigatewayrole9271A0CE",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "text/html": "Error",
              },
              "SelectionPattern": "500",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'x-amz-json-1.1'",
          },
          "RequestTemplates": Object {
            "application/json": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{ \\"StreamName\\": \\"",
                  Object {
                    "Ref": "KinesisStream46752A3E",
                  },
                  "\\", \\"Data\\": \\"$util.base64Encode($input.json('$.data'))\\", \\"PartitionKey\\": \\"$input.path('$.partitionKey')\\" }",
                ],
              ],
            },
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":kinesis:action/PutRecord",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "500",
          },
        ],
        "RequestModels": Object {
          "application/json": Object {
            "Ref": "apigatewaykinesisRestApiPutRecordModel55C7723E",
          },
        },
        "RequestValidatorId": Object {
          "Ref": "apigatewaykinesisRestApirequestvalidator4482E7FC",
        },
        "ResourceId": Object {
          "Ref": "apigatewaykinesisRestApirecord3F4EC064",
        },
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "apigatewaykinesisRestApirecordsE5337BB6": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "apigatewaykinesisRestApi0DCC9877",
            "RootResourceId",
          ],
        },
        "PathPart": "records",
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "apigatewaykinesisRestApirecordsPOST08A9BEAD": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewaykinesisapigatewayrole9271A0CE",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "text/html": "Error",
              },
              "SelectionPattern": "500",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'x-amz-json-1.1'",
          },
          "RequestTemplates": Object {
            "application/json": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{ \\"StreamName\\": \\"",
                  Object {
                    "Ref": "KinesisStream46752A3E",
                  },
                  "\\", \\"Records\\": [ #foreach($elem in $input.path('$.records')) { \\"Data\\": \\"$util.base64Encode($elem.data)\\", \\"PartitionKey\\": \\"$elem.partitionKey\\"}#if($foreach.hasNext),#end #end ] }",
                ],
              ],
            },
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":kinesis:action/PutRecords",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "500",
          },
        ],
        "RequestModels": Object {
          "application/json": Object {
            "Ref": "apigatewaykinesisRestApiPutRecordsModel217E2E73",
          },
        },
        "RequestValidatorId": Object {
          "Ref": "apigatewaykinesisRestApirequestvalidator4482E7FC",
        },
        "ResourceId": Object {
          "Ref": "apigatewaykinesisRestApirecordsE5337BB6",
        },
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "apigatewaykinesisRestApirequestvalidator4482E7FC": Object {
      "Properties": Object {
        "Name": "request-body-validator",
        "RestApiId": Object {
          "Ref": "apigatewaykinesisRestApi0DCC9877",
        },
        "ValidateRequestBody": true,
      },
      "Type": "AWS::ApiGateway::RequestValidator",
    },
    "apigatewaykinesisapigatewayrole9271A0CE": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "apigatewaykinesisapigatewayroleDefaultPolicy6E8D093B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "KinesisStream46752A3E",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "apigatewaykinesisapigatewayroleDefaultPolicy6E8D093B",
        "Roles": Array [
          Object {
            "Ref": "apigatewaykinesisapigatewayrole9271A0CE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
