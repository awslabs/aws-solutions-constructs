{
 "Description": "Integration Test for aws-apigateway-kinesis",
 "Resources": {
  "testapigatewaykinesisadditionalrequesttemplatesApiAccessLogGroup9C079B68": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "cfn_nag": {
     "rules_to_suppress": [
      {
       "id": "W86",
       "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
      },
      {
       "id": "W84",
       "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
      }
     ]
    }
   }
  },
  "testapigatewaykinesisadditionalrequesttemplatesRestApiCCD096E7": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "EndpointConfiguration": {
     "Types": [
      "EDGE"
     ]
    },
    "Name": "RestApi"
   }
  },
  "testapigatewaykinesisadditionalrequesttemplatesRestApiDeployment5A447E3D68efb2650de4064374902887dee80c33": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "testapigatewaykinesisadditionalrequesttemplatesRestApiCCD096E7"
    }
   },
   "DependsOn": [
    "testapigatewaykinesisadditionalrequesttemplatesRestApirecordPOST307FC87D",
    "testapigatewaykinesisadditionalrequesttemplatesRestApirecord01520200",
    "testapigatewaykinesisadditionalrequesttemplatesRestApirecordsPOST5F6260A2",
    "testapigatewaykinesisadditionalrequesttemplatesRestApirecords37B412D1",
    "testapigatewaykinesisadditionalrequesttemplatesRestApiPutRecordModel1A75CC15",
    "testapigatewaykinesisadditionalrequesttemplatesRestApiPutRecordsModel49E0CAB9",
    "testapigatewaykinesisadditionalrequesttemplatesRestApirequestvalidator69E589CE"
   ],
   "Metadata": {
    "cfn_nag": {
     "rules_to_suppress": [
      {
       "id": "W45",
       "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checks for it in AWS::ApiGateway::Deployment resource"
      }
     ]
    }
   }
  },
  "testapigatewaykinesisadditionalrequesttemplatesRestApiDeploymentStageprodD274025B": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "AccessLogSetting": {
     "DestinationArn": {
      "Fn::GetAtt": [
       "testapigatewaykinesisadditionalrequesttemplatesApiAccessLogGroup9C079B68",
       "Arn"
      ]
     },
     "Format": "{\"requestId\":\"$context.requestId\",\"ip\":\"$context.identity.sourceIp\",\"user\":\"$context.identity.user\",\"caller\":\"$context.identity.caller\",\"requestTime\":\"$context.requestTime\",\"httpMethod\":\"$context.httpMethod\",\"resourcePath\":\"$context.resourcePath\",\"status\":\"$context.status\",\"protocol\":\"$context.protocol\",\"responseLength\":\"$context.responseLength\"}"
    },
    "DeploymentId": {
     "Ref": "testapigatewaykinesisadditionalrequesttemplatesRestApiDeployment5A447E3D68efb2650de4064374902887dee80c33"
    },
    "MethodSettings": [
     {
      "DataTraceEnabled": false,
      "HttpMethod": "*",
      "LoggingLevel": "INFO",
      "ResourcePath": "/*"
     }
    ],
    "RestApiId": {
     "Ref": "testapigatewaykinesisadditionalrequesttemplatesRestApiCCD096E7"
    },
    "StageName": "prod",
    "TracingEnabled": true
   }
  },
  "testapigatewaykinesisadditionalrequesttemplatesRestApirecord01520200": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "testapigatewaykinesisadditionalrequesttemplatesRestApiCCD096E7",
      "RootResourceId"
     ]
    },
    "PathPart": "record",
    "RestApiId": {
     "Ref": "testapigatewaykinesisadditionalrequesttemplatesRestApiCCD096E7"
    }
   }
  },
  "testapigatewaykinesisadditionalrequesttemplatesRestApirecordPOST307FC87D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "AWS_IAM",
    "HttpMethod": "POST",
    "Integration": {
     "Credentials": {
      "Fn::GetAtt": [
       "testapigatewaykinesisadditionalrequesttemplatesapigatewayroleAC79617D",
       "Arn"
      ]
     },
     "IntegrationHttpMethod": "POST",
     "IntegrationResponses": [
      {
       "ResponseTemplates": {
        "text/html": "OK"
       },
       "StatusCode": "200"
      }
     ],
     "PassthroughBehavior": "NEVER",
     "RequestParameters": {
      "integration.request.header.Content-Type": "'x-amz-json-1.1'"
     },
     "RequestTemplates": {
      "application/json": {
       "Fn::Join": [
        "",
        [
         "{ \"StreamName\": \"",
         {
          "Ref": "KinesisStream46752A3E"
         },
         "\", \"Data\": \"$util.base64Encode($input.json('$.data'))\", \"PartitionKey\": \"$input.path('$.partitionKey')\" }"
        ]
       ]
      }
     },
     "Type": "AWS",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":kinesis:action/PutRecord"
       ]
      ]
     }
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Content-Type": true
      },
      "StatusCode": "200"
     },
     {
      "ResponseParameters": {
       "method.response.header.Content-Type": true
      },
      "StatusCode": "500"
     }
    ],
    "RequestModels": {
     "application/json": {
      "Ref": "testapigatewaykinesisadditionalrequesttemplatesRestApiPutRecordModel1A75CC15"
     }
    },
    "RequestValidatorId": {
     "Ref": "testapigatewaykinesisadditionalrequesttemplatesRestApirequestvalidator69E589CE"
    },
    "ResourceId": {
     "Ref": "testapigatewaykinesisadditionalrequesttemplatesRestApirecord01520200"
    },
    "RestApiId": {
     "Ref": "testapigatewaykinesisadditionalrequesttemplatesRestApiCCD096E7"
    }
   }
  },
  "testapigatewaykinesisadditionalrequesttemplatesRestApirecords37B412D1": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "testapigatewaykinesisadditionalrequesttemplatesRestApiCCD096E7",
      "RootResourceId"
     ]
    },
    "PathPart": "records",
    "RestApiId": {
     "Ref": "testapigatewaykinesisadditionalrequesttemplatesRestApiCCD096E7"
    }
   }
  },
  "testapigatewaykinesisadditionalrequesttemplatesRestApirecordsPOST5F6260A2": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "AWS_IAM",
    "HttpMethod": "POST",
    "Integration": {
     "Credentials": {
      "Fn::GetAtt": [
       "testapigatewaykinesisadditionalrequesttemplatesapigatewayroleAC79617D",
       "Arn"
      ]
     },
     "IntegrationHttpMethod": "POST",
     "IntegrationResponses": [
      {
       "StatusCode": "200"
      },
      {
       "ResponseTemplates": {
        "text/html": "Error"
       },
       "SelectionPattern": "500",
       "StatusCode": "500"
      }
     ],
     "PassthroughBehavior": "NEVER",
     "RequestParameters": {
      "integration.request.header.Content-Type": "'x-amz-json-1.1'"
     },
     "RequestTemplates": {
      "application/json": {
       "Fn::Join": [
        "",
        [
         "{ \"StreamName\": \"",
         {
          "Ref": "KinesisStream46752A3E"
         },
         "\", \"Records\": [ #foreach($elem in $input.path('$.records')) { \"Data\": \"$util.base64Encode($elem.data)\", \"PartitionKey\": \"$elem.partitionKey\"}#if($foreach.hasNext),#end #end ] }"
        ]
       ]
      }
     },
     "Type": "AWS",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":kinesis:action/PutRecords"
       ]
      ]
     }
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Content-Type": true
      },
      "StatusCode": "200"
     },
     {
      "ResponseParameters": {
       "method.response.header.Content-Type": true
      },
      "StatusCode": "500"
     }
    ],
    "RequestModels": {
     "application/json": {
      "Ref": "testapigatewaykinesisadditionalrequesttemplatesRestApiPutRecordsModel49E0CAB9"
     }
    },
    "RequestValidatorId": {
     "Ref": "testapigatewaykinesisadditionalrequesttemplatesRestApirequestvalidator69E589CE"
    },
    "ResourceId": {
     "Ref": "testapigatewaykinesisadditionalrequesttemplatesRestApirecords37B412D1"
    },
    "RestApiId": {
     "Ref": "testapigatewaykinesisadditionalrequesttemplatesRestApiCCD096E7"
    }
   }
  },
  "testapigatewaykinesisadditionalrequesttemplatesRestApiUsagePlan68D85E30": {
   "Type": "AWS::ApiGateway::UsagePlan",
   "Properties": {
    "ApiStages": [
     {
      "ApiId": {
       "Ref": "testapigatewaykinesisadditionalrequesttemplatesRestApiCCD096E7"
      },
      "Stage": {
       "Ref": "testapigatewaykinesisadditionalrequesttemplatesRestApiDeploymentStageprodD274025B"
      },
      "Throttle": {}
     }
    ]
   }
  },
  "testapigatewaykinesisadditionalrequesttemplatesRestApirequestvalidator69E589CE": {
   "Type": "AWS::ApiGateway::RequestValidator",
   "Properties": {
    "Name": "request-body-validator",
    "RestApiId": {
     "Ref": "testapigatewaykinesisadditionalrequesttemplatesRestApiCCD096E7"
    },
    "ValidateRequestBody": true
   }
  },
  "testapigatewaykinesisadditionalrequesttemplatesRestApiPutRecordModel1A75CC15": {
   "Type": "AWS::ApiGateway::Model",
   "Properties": {
    "ContentType": "application/json",
    "Description": "PutRecord proxy single-record payload",
    "Name": "PutRecordModel",
    "RestApiId": {
     "Ref": "testapigatewaykinesisadditionalrequesttemplatesRestApiCCD096E7"
    },
    "Schema": {
     "$schema": "http://json-schema.org/draft-04/schema#",
     "title": "PutRecord proxy single-record payload",
     "type": "object",
     "required": [
      "data",
      "partitionKey"
     ],
     "properties": {
      "data": {
       "type": "string"
      },
      "partitionKey": {
       "type": "string"
      }
     }
    }
   }
  },
  "testapigatewaykinesisadditionalrequesttemplatesRestApiPutRecordsModel49E0CAB9": {
   "Type": "AWS::ApiGateway::Model",
   "Properties": {
    "ContentType": "application/json",
    "Description": "PutRecords proxy payload data",
    "Name": "PutRecordsModel",
    "RestApiId": {
     "Ref": "testapigatewaykinesisadditionalrequesttemplatesRestApiCCD096E7"
    },
    "Schema": {
     "$schema": "http://json-schema.org/draft-04/schema#",
     "title": "PutRecords proxy payload data",
     "type": "object",
     "required": [
      "records"
     ],
     "properties": {
      "records": {
       "type": "array",
       "items": {
        "type": "object",
        "required": [
         "data",
         "partitionKey"
        ],
        "properties": {
         "data": {
          "type": "string"
         },
         "partitionKey": {
          "type": "string"
         }
        }
       }
      }
     }
    }
   }
  },
  "testapigatewaykinesisadditionalrequesttemplatesLambdaRestApiCloudWatchRole4FA3BA8A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:DescribeLogGroups",
          "logs:DescribeLogStreams",
          "logs:FilterLogEvents",
          "logs:GetLogEvents",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":logs:",
            {
             "Ref": "AWS::Region"
            },
            ":",
            {
             "Ref": "AWS::AccountId"
            },
            ":*"
           ]
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "LambdaRestApiCloudWatchRolePolicy"
     }
    ]
   }
  },
  "testapigatewaykinesisadditionalrequesttemplatesLambdaRestApiAccount9A5A772A": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "testapigatewaykinesisadditionalrequesttemplatesLambdaRestApiCloudWatchRole4FA3BA8A",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "testapigatewaykinesisadditionalrequesttemplatesRestApiCCD096E7"
   ]
  },
  "testapigatewaykinesisadditionalrequesttemplatesapigatewayroleAC79617D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "testapigatewaykinesisadditionalrequesttemplatesapigatewayroleDefaultPolicy5D60DBDF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "kinesis:ListShards",
        "kinesis:PutRecord",
        "kinesis:PutRecords"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "KinesisStream46752A3E",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "testapigatewaykinesisadditionalrequesttemplatesapigatewayroleDefaultPolicy5D60DBDF",
    "Roles": [
     {
      "Ref": "testapigatewaykinesisadditionalrequesttemplatesapigatewayroleAC79617D"
     }
    ]
   }
  },
  "testapigatewaykinesisadditionalrequesttemplatesKinesisStreamGetRecordsIteratorAgeAlarm05247CB0": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmDescription": "Consumer Record Processing Falling Behind, there is risk for data loss due to record expiration.",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 1,
    "MetricName": "GetRecords.IteratorAgeMilliseconds",
    "Namespace": "AWS/Kinesis",
    "Period": 300,
    "Statistic": "Maximum",
    "Threshold": 43200000
   }
  },
  "testapigatewaykinesisadditionalrequesttemplatesKinesisStreamReadProvisionedThroughputExceededAlarmE49197EC": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmDescription": "Consumer Application is Reading at a Slower Rate Than Expected.",
    "ComparisonOperator": "GreaterThanThreshold",
    "EvaluationPeriods": 1,
    "MetricName": "ReadProvisionedThroughputExceeded",
    "Namespace": "AWS/Kinesis",
    "Period": 300,
    "Statistic": "Average",
    "Threshold": 0
   }
  },
  "KinesisStream46752A3E": {
   "Type": "AWS::Kinesis::Stream",
   "Properties": {
    "RetentionPeriodHours": 24,
    "ShardCount": 1,
    "StreamEncryption": {
     "EncryptionType": "KMS",
     "KeyId": "alias/aws/kinesis"
    }
   }
  }
 },
 "Outputs": {
  "testapigatewaykinesisadditionalrequesttemplatesRestApiEndpointE192AA9B": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "testapigatewaykinesisadditionalrequesttemplatesRestApiCCD096E7"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "testapigatewaykinesisadditionalrequesttemplatesRestApiDeploymentStageprodD274025B"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}