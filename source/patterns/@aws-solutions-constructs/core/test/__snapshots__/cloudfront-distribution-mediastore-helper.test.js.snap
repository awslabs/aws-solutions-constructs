// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CloudFront distribution for MediaStore with default params 1`] = `
Object {
  "Resources": Object {
    "CloudFrontDistributionBA64CE3A": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W70",
              "reason": "Since the distribution uses the CloudFront domain name, CloudFront automatically sets the security policy to TLSv1 regardless of the value of MinimumProtocolVersion",
            },
          ],
        },
      },
      "Properties": Object {
        "DistributionConfig": Object {
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
              "OPTIONS",
            ],
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "CachedMethods": Array [
              "GET",
              "HEAD",
              "OPTIONS",
            ],
            "Compress": true,
            "FunctionAssociations": Array [
              Object {
                "EventType": "viewer-response",
                "FunctionARN": Object {
                  "Fn::GetAtt": Array [
                    "SetHttpSecurityHeadersEE936115",
                    "FunctionARN",
                  ],
                },
              },
            ],
            "OriginRequestPolicyId": Object {
              "Ref": "CloudfrontOriginRequestPolicy299A10DB",
            },
            "TargetOriginId": "CloudFrontDistributionOrigin176EC3A12",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Logging": Object {
            "Bucket": Object {
              "Fn::GetAtt": Array [
                "CloudfrontLoggingBucket3C3EFAA7",
                "RegionalDomainName",
              ],
            },
          },
          "Origins": Array [
            Object {
              "CustomOriginConfig": Object {
                "OriginProtocolPolicy": "https-only",
                "OriginSSLProtocols": Array [
                  "TLSv1.2",
                ],
              },
              "DomainName": Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Fn::Select": Array [
                          1,
                          Object {
                            "Fn::Split": Array [
                              "://",
                              Object {
                                "Fn::GetAtt": Array [
                                  "MediaStoreContainer",
                                  "Endpoint",
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
              "Id": "CloudFrontDistributionOrigin176EC3A12",
            },
          ],
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "CloudfrontLoggingBucket3C3EFAA7": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W35",
              "reason": "This S3 bucket is used as the access logging bucket for CloudFront Distribution",
            },
          ],
        },
      },
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudfrontLoggingBucketPolicy8FC0956D": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CloudfrontLoggingBucket3C3EFAA7",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CloudfrontLoggingBucket3C3EFAA7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "CloudfrontLoggingBucket3C3EFAA7",
                    "Arn",
                  ],
                },
              ],
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CloudfrontOriginRequestPolicy299A10DB": Object {
      "Properties": Object {
        "OriginRequestPolicyConfig": Object {
          "Comment": "Policy for Constructs CloudFrontDistributionForMediaStore",
          "CookiesConfig": Object {
            "CookieBehavior": "none",
          },
          "HeadersConfig": Object {
            "HeaderBehavior": "whitelist",
            "Headers": Array [
              "Access-Control-Allow-Origin",
              "Access-Control-Request-Method",
              "Access-Control-Request-Header",
              "Origin",
            ],
          },
          "Name": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "AWS::StackName",
                },
                "-",
                Object {
                  "Ref": "AWS::Region",
                },
                "-CloudFrontDistributionForMediaStore",
              ],
            ],
          },
          "QueryStringsConfig": Object {
            "QueryStringBehavior": "all",
          },
        },
      },
      "Type": "AWS::CloudFront::OriginRequestPolicy",
    },
    "MediaStoreContainer": Object {
      "Properties": Object {
        "ContainerName": "TestContainer",
      },
      "Type": "AWS::MediaStore::Container",
    },
    "SetHttpSecurityHeadersEE936115": Object {
      "Properties": Object {
        "AutoPublish": true,
        "FunctionCode": "function handler(event) { var response = event.response;       var headers = response.headers;       headers['strict-transport-security'] = { value: 'max-age=63072000; includeSubdomains; preload'};       headers['content-security-policy'] = { value: \\"default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self'; object-src 'none'\\"};       headers['x-content-type-options'] = { value: 'nosniff'};       headers['x-frame-options'] = {value: 'DENY'};       headers['x-xss-protection'] = {value: '1; mode=block'};       return response;     }",
        "FunctionConfig": Object {
          "Comment": "SetHttpSecurityHeadersc8adc83b19e793491b1c6ea0fd8b46cd9f32e592fc",
          "Runtime": "cloudfront-js-1.0",
        },
        "Name": "SetHttpSecurityHeadersc8adc83b19e793491b1c6ea0fd8b46cd9f32e592fc",
      },
      "Type": "AWS::CloudFront::Function",
    },
  },
}
`;
