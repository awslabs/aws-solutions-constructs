// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test addMethodToApiResource with action 1`] = `
Object {
  "Outputs": Object {
    "RestApiEndpoint0551178A": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "RestApi0C43BF4B",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "RestApiDeploymentStageprod3855DE66",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Resources": Object {
    "ApiAccessLogGroupCEA70788": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "LambdaRestApiAccount": Object {
      "DependsOn": Array [
        "RestApi0C43BF4B",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "LambdaRestApiCloudWatchRoleF339D4E6",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "LambdaRestApiCloudWatchRoleF339D4E6": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RestApi0C43BF4B": Object {
      "Properties": Object {
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "Name": "RestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "RestApiDeployment180EC503d679a55f3e81b32d52afab47c5cfbe0b": Object {
      "DependsOn": Array [
        "RestApiapigatewayresourceGET3FA98628",
        "RestApiapigatewayresourcePUT15FB0206",
        "RestApiapigatewayresource242D19A1",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "RestApiDeploymentStageprod3855DE66": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "ApiAccessLogGroupCEA70788",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"user\\":\\"$context.identity.user\\",\\"caller\\":\\"$context.identity.caller\\",\\"requestTime\\":\\"$context.requestTime\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}",
        },
        "DeploymentId": Object {
          "Ref": "RestApiDeployment180EC503d679a55f3e81b32d52afab47c5cfbe0b",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "RestApiUsagePlan6E1C537A": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "RestApi0C43BF4B",
            },
            "Stage": Object {
              "Ref": "RestApiDeploymentStageprod3855DE66",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "RestApiapigatewayresource242D19A1": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "RestApi0C43BF4B",
            "RootResourceId",
          ],
        },
        "PathPart": "api-gateway-resource",
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RestApiapigatewayresourceGET3FA98628": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewayroleE6D48DBD",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "text/html": "Error",
              },
              "SelectionPattern": "500",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
          },
          "RequestTemplates": Object {
            "application/json": "{}",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":dynamodb:action/Query",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "500",
          },
        ],
        "ResourceId": Object {
          "Ref": "RestApiapigatewayresource242D19A1",
        },
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApiapigatewayresourcePUT15FB0206": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "PUT",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewayroleE6D48DBD",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "text/html": "Error",
              },
              "SelectionPattern": "500",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
          },
          "RequestTemplates": Object {
            "application/json": "{}",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":sqs:path/11112222/thisqueuequeueName",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "500",
          },
        ],
        "ResourceId": Object {
          "Ref": "RestApiapigatewayresource242D19A1",
        },
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "apigatewayroleE6D48DBD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;

exports[`Test default RestApi deployment w/ ApiGatewayProps 1`] = `
Object {
  "Outputs": Object {
    "RestApiEndpoint0551178A": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "RestApi0C43BF4B",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "RestApiDeploymentStageprod3855DE66",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Resources": Object {
    "ApiAccessLogGroupCEA70788": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "LambdaRestApiAccount": Object {
      "DependsOn": Array [
        "RestApi0C43BF4B",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "LambdaRestApiCloudWatchRoleF339D4E6",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "LambdaRestApiCloudWatchRoleF339D4E6": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RestApi0C43BF4B": Object {
      "Properties": Object {
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "Name": "customRestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "RestApiDeployment180EC5035dc263e471f85ee42d6a531c41635aa8": Object {
      "DependsOn": Array [
        "RestApiapigatewayresourcePOST2678115A",
        "RestApiapigatewayresource242D19A1",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "RestApiDeploymentStageprod3855DE66": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "ApiAccessLogGroupCEA70788",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"user\\":\\"$context.identity.user\\",\\"caller\\":\\"$context.identity.caller\\",\\"requestTime\\":\\"$context.requestTime\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}",
        },
        "DeploymentId": Object {
          "Ref": "RestApiDeployment180EC5035dc263e471f85ee42d6a531c41635aa8",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "RestApiUsagePlan6E1C537A": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "RestApi0C43BF4B",
            },
            "Stage": Object {
              "Ref": "RestApiDeploymentStageprod3855DE66",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "RestApiapigatewayresource242D19A1": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "RestApi0C43BF4B",
            "RootResourceId",
          ],
        },
        "PathPart": "api-gateway-resource",
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RestApiapigatewayresourcePOST2678115A": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "text/html": "Success",
              },
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "text/html": "Error",
              },
              "SelectionPattern": "500",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/x-www-form-urlencoded'",
          },
          "RequestTemplates": Object {
            "application/x-www-form-urlencoded": "Action=SendMessage&MessageBody=$util.urlEncode(\\"$input.body\\")&MessageAttribute.1.Name=queryParam1&MessageAttribute.1.Value.StringValue=$input.params(\\"query_param_1\\")&MessageAttribute.1.Value.DataType=String",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":sqs:path/11112222/thisqueuequeueName",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "500",
          },
        ],
        "RequestParameters": Object {
          "method.request.querystring.query_param_1": true,
        },
        "ResourceId": Object {
          "Ref": "RestApiapigatewayresource242D19A1",
        },
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
  },
}
`;

exports[`Test default RestApi deployment w/o ApiGatewayProps 1`] = `
Object {
  "Outputs": Object {
    "RestApiEndpoint0551178A": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "RestApi0C43BF4B",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "RestApiDeploymentStageprod3855DE66",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Resources": Object {
    "ApiAccessLogGroupCEA70788": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "LambdaRestApiAccount": Object {
      "DependsOn": Array [
        "RestApi0C43BF4B",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "LambdaRestApiCloudWatchRoleF339D4E6",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "LambdaRestApiCloudWatchRoleF339D4E6": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RestApi0C43BF4B": Object {
      "Properties": Object {
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "Name": "RestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "RestApiDeployment180EC50384cfe003d392d0389584019196bfb581": Object {
      "DependsOn": Array [
        "RestApiapigatewayresourcePOST2678115A",
        "RestApiapigatewayresource242D19A1",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "RestApiDeploymentStageprod3855DE66": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "ApiAccessLogGroupCEA70788",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"user\\":\\"$context.identity.user\\",\\"caller\\":\\"$context.identity.caller\\",\\"requestTime\\":\\"$context.requestTime\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}",
        },
        "DeploymentId": Object {
          "Ref": "RestApiDeployment180EC50384cfe003d392d0389584019196bfb581",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "RestApiUsagePlan6E1C537A": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "RestApi0C43BF4B",
            },
            "Stage": Object {
              "Ref": "RestApiDeploymentStageprod3855DE66",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "RestApiapigatewayresource242D19A1": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "RestApi0C43BF4B",
            "RootResourceId",
          ],
        },
        "PathPart": "api-gateway-resource",
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RestApiapigatewayresourcePOST2678115A": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "text/html": "Success",
              },
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "text/html": "Error",
              },
              "SelectionPattern": "500",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/x-www-form-urlencoded'",
          },
          "RequestTemplates": Object {
            "application/x-www-form-urlencoded": "Action=SendMessage&MessageBody=$util.urlEncode(\\"$input.body\\")&MessageAttribute.1.Name=queryParam1&MessageAttribute.1.Value.StringValue=$input.params(\\"query_param_1\\")&MessageAttribute.1.Value.DataType=String",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":sqs:path/11112222/thisqueuequeueName",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "500",
          },
        ],
        "RequestParameters": Object {
          "method.request.querystring.query_param_1": true,
        },
        "ResourceId": Object {
          "Ref": "RestApiapigatewayresource242D19A1",
        },
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
  },
}
`;

exports[`Test default RestApi w/ request model and validator 1`] = `
Object {
  "Outputs": Object {
    "RestApiEndpoint0551178A": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "RestApi0C43BF4B",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "RestApiDeploymentStageprod3855DE66",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Resources": Object {
    "ApiAccessLogGroupCEA70788": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "LambdaRestApiAccount": Object {
      "DependsOn": Array [
        "RestApi0C43BF4B",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "LambdaRestApiCloudWatchRoleF339D4E6",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "LambdaRestApiCloudWatchRoleF339D4E6": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RestApi0C43BF4B": Object {
      "Properties": Object {
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "Name": "RestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "RestApiDeployment180EC503c3421c8cc4653e532d16905760ab6e22": Object {
      "DependsOn": Array [
        "RestApidefaultvalidator78DAE008",
        "RestApiapigatewayresourcePOST2678115A",
        "RestApiapigatewayresource242D19A1",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "RestApiDeploymentStageprod3855DE66": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "ApiAccessLogGroupCEA70788",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"user\\":\\"$context.identity.user\\",\\"caller\\":\\"$context.identity.caller\\",\\"requestTime\\":\\"$context.requestTime\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}",
        },
        "DeploymentId": Object {
          "Ref": "RestApiDeployment180EC503c3421c8cc4653e532d16905760ab6e22",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "RestApiUsagePlan6E1C537A": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "RestApi0C43BF4B",
            },
            "Stage": Object {
              "Ref": "RestApiDeploymentStageprod3855DE66",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "RestApiapigatewayresource242D19A1": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "RestApi0C43BF4B",
            "RootResourceId",
          ],
        },
        "PathPart": "api-gateway-resource",
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RestApiapigatewayresourcePOST2678115A": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewayroleE6D48DBD",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "text/html": "Error",
              },
              "SelectionPattern": "500",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'x-amz-json-1.1'",
          },
          "RequestTemplates": Object {
            "application/json": "{}",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":kinesis:action/PutRecord",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "500",
          },
        ],
        "RequestModels": Object {
          "application/json": "Empty",
        },
        "RequestValidatorId": Object {
          "Ref": "RestApidefaultvalidator78DAE008",
        },
        "ResourceId": Object {
          "Ref": "RestApiapigatewayresource242D19A1",
        },
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApidefaultvalidator78DAE008": Object {
      "Properties": Object {
        "Name": "default-validator",
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
        "ValidateRequestBody": true,
      },
      "Type": "AWS::ApiGateway::RequestValidator",
    },
    "apigatewayroleE6D48DBD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;

exports[`snapshot test RegionalApiGateway default params 1`] = `
Object {
  "Outputs": Object {
    "LambdaRestApiEndpointCCECE4C1": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "LambdaRestApi95870433",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "LambdaRestApiDeploymentStageprodB1F3862A",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters42a35bbf0dec9ef0ac5b0dde87e71a1b8929e8d2d178dd09ccfb2c928ec0198cArtifactHash00A70A91": Object {
      "Description": "Artifact hash for asset \\"42a35bbf0dec9ef0ac5b0dde87e71a1b8929e8d2d178dd09ccfb2c928ec0198c\\"",
      "Type": "String",
    },
    "AssetParameters42a35bbf0dec9ef0ac5b0dde87e71a1b8929e8d2d178dd09ccfb2c928ec0198cS3Bucket1F467BCC": Object {
      "Description": "S3 bucket for asset \\"42a35bbf0dec9ef0ac5b0dde87e71a1b8929e8d2d178dd09ccfb2c928ec0198c\\"",
      "Type": "String",
    },
    "AssetParameters42a35bbf0dec9ef0ac5b0dde87e71a1b8929e8d2d178dd09ccfb2c928ec0198cS3VersionKey9E4F7872": Object {
      "Description": "S3 key for asset version \\"42a35bbf0dec9ef0ac5b0dde87e71a1b8929e8d2d178dd09ccfb2c928ec0198c\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "ApiAccessLogGroupCEA70788": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "LambdaFunctionBF21E41F": Object {
      "DependsOn": Array [
        "LambdaFunctionServiceRoleDefaultPolicy126C8897",
        "LambdaFunctionServiceRole0C4CDE0B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters42a35bbf0dec9ef0ac5b0dde87e71a1b8929e8d2d178dd09ccfb2c928ec0198cS3Bucket1F467BCC",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters42a35bbf0dec9ef0ac5b0dde87e71a1b8929e8d2d178dd09ccfb2c928ec0198cS3VersionKey9E4F7872",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters42a35bbf0dec9ef0ac5b0dde87e71a1b8929e8d2d178dd09ccfb2c928ec0198cS3VersionKey9E4F7872",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LambdaFunctionServiceRole0C4CDE0B",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "LambdaFunctionServiceRole0C4CDE0B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaFunctionServiceRoleDefaultPolicy126C8897": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LambdaFunctionServiceRoleDefaultPolicy126C8897",
        "Roles": Array [
          Object {
            "Ref": "LambdaFunctionServiceRole0C4CDE0B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LambdaRestApi95870433": Object {
      "Properties": Object {
        "EndpointConfiguration": Object {
          "Types": Array [
            "REGIONAL",
          ],
        },
        "Name": "LambdaRestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "LambdaRestApiANYA831AD87": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdaFunctionBF21E41F",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "LambdaRestApi95870433",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "LambdaRestApi95870433",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "LambdaRestApiANYApiPermissionLambdaRestApiANYD56C5914": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaFunctionBF21E41F",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "LambdaRestApi95870433",
              },
              "/",
              Object {
                "Ref": "LambdaRestApiDeploymentStageprodB1F3862A",
              },
              "/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaRestApiANYApiPermissionTestLambdaRestApiANY9B2403A7": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaFunctionBF21E41F",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "LambdaRestApi95870433",
              },
              "/test-invoke-stage/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaRestApiAccount": Object {
      "DependsOn": Array [
        "LambdaRestApi95870433",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "LambdaRestApiCloudWatchRoleF339D4E6",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "LambdaRestApiCloudWatchRoleF339D4E6": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaRestApiDeploymentBA640578812946cff1910fe2b8b339ee3a8d51c7": Object {
      "DependsOn": Array [
        "LambdaRestApiproxyANY93D43CC0",
        "LambdaRestApiproxy9F99E187",
        "LambdaRestApiANYA831AD87",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "LambdaRestApi95870433",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "LambdaRestApiDeploymentStageprodB1F3862A": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "ApiAccessLogGroupCEA70788",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"user\\":\\"$context.identity.user\\",\\"caller\\":\\"$context.identity.caller\\",\\"requestTime\\":\\"$context.requestTime\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}",
        },
        "DeploymentId": Object {
          "Ref": "LambdaRestApiDeploymentBA640578812946cff1910fe2b8b339ee3a8d51c7",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "LambdaRestApi95870433",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "LambdaRestApiUsagePlanB4DF55D0": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "LambdaRestApi95870433",
            },
            "Stage": Object {
              "Ref": "LambdaRestApiDeploymentStageprodB1F3862A",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "LambdaRestApiproxy9F99E187": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "LambdaRestApi95870433",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "LambdaRestApi95870433",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "LambdaRestApiproxyANY93D43CC0": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdaFunctionBF21E41F",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "LambdaRestApiproxy9F99E187",
        },
        "RestApiId": Object {
          "Ref": "LambdaRestApi95870433",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "LambdaRestApiproxyANYApiPermissionLambdaRestApiANYproxy208F31EB": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaFunctionBF21E41F",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "LambdaRestApi95870433",
              },
              "/",
              Object {
                "Ref": "LambdaRestApiDeploymentStageprodB1F3862A",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaRestApiproxyANYApiPermissionTestLambdaRestApiANYproxyDBA3E731": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaFunctionBF21E41F",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "LambdaRestApi95870433",
              },
              "/test-invoke-stage/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
}
`;
