// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test deployment w/ DLQ and purging enabled 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913ArtifactHash452EF11C": Object {
      "Description": "Artifact hash for asset \\"0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913\\"",
      "Type": "String",
    },
    "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3Bucket642A6F72": Object {
      "Description": "S3 bucket for asset \\"0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913\\"",
      "Type": "String",
    },
    "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3VersionKeyDBE0BAD3": Object {
      "Description": "S3 key for asset version \\"0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "lambdatosqsstackLambdaFunctionDAB62CB1": Object {
      "DependsOn": Array [
        "lambdatosqsstackLambdaFunctionServiceRoleDefaultPolicy467E145A",
        "lambdatosqsstackLambdaFunctionServiceRole0AD9DDDF",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3Bucket642A6F72",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3VersionKeyDBE0BAD3",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3VersionKeyDBE0BAD3",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SQS_QUEUE_URL": Object {
              "Ref": "lambdatosqsstackqueueFDDEE3DB",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdatosqsstackLambdaFunctionServiceRole0AD9DDDF",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdatosqsstackLambdaFunctionServiceRole0AD9DDDF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdatosqsstackLambdaFunctionServiceRoleDefaultPolicy467E145A": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:PurgeQueue",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosqsstackqueueFDDEE3DB",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosqsstackqueueFDDEE3DB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdatosqsstackLambdaFunctionServiceRoleDefaultPolicy467E145A",
        "Roles": Array [
          Object {
            "Ref": "lambdatosqsstackLambdaFunctionServiceRole0AD9DDDF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdatosqsstackdeadLetterQueueEAF9B078": Object {
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
    },
    "lambdatosqsstackdeadLetterQueuePolicyF7307F40": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosqsstackdeadLetterQueueEAF9B078",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosqsstackdeadLetterQueueEAF9B078",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "lambdatosqsstackdeadLetterQueueEAF9B078",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "lambdatosqsstackqueueFDDEE3DB": Object {
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
        "RedrivePolicy": Object {
          "deadLetterTargetArn": Object {
            "Fn::GetAtt": Array [
              "lambdatosqsstackdeadLetterQueueEAF9B078",
              "Arn",
            ],
          },
          "maxReceiveCount": 15,
        },
      },
      "Type": "AWS::SQS::Queue",
    },
    "lambdatosqsstackqueuePolicy4B9B1605": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosqsstackqueueFDDEE3DB",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosqsstackqueueFDDEE3DB",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "lambdatosqsstackqueueFDDEE3DB",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
  },
}
`;

exports[`Test deployment w/ DLQ disabled 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913ArtifactHash452EF11C": Object {
      "Description": "Artifact hash for asset \\"0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913\\"",
      "Type": "String",
    },
    "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3Bucket642A6F72": Object {
      "Description": "S3 bucket for asset \\"0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913\\"",
      "Type": "String",
    },
    "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3VersionKeyDBE0BAD3": Object {
      "Description": "S3 key for asset version \\"0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "lambdatosqsstackLambdaFunctionDAB62CB1": Object {
      "DependsOn": Array [
        "lambdatosqsstackLambdaFunctionServiceRoleDefaultPolicy467E145A",
        "lambdatosqsstackLambdaFunctionServiceRole0AD9DDDF",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3Bucket642A6F72",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3VersionKeyDBE0BAD3",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3VersionKeyDBE0BAD3",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SQS_QUEUE_URL": Object {
              "Ref": "lambdatosqsstackqueueFDDEE3DB",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdatosqsstackLambdaFunctionServiceRole0AD9DDDF",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdatosqsstackLambdaFunctionServiceRole0AD9DDDF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdatosqsstackLambdaFunctionServiceRoleDefaultPolicy467E145A": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:PurgeQueue",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosqsstackqueueFDDEE3DB",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosqsstackqueueFDDEE3DB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdatosqsstackLambdaFunctionServiceRoleDefaultPolicy467E145A",
        "Roles": Array [
          Object {
            "Ref": "lambdatosqsstackLambdaFunctionServiceRole0AD9DDDF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdatosqsstackqueueFDDEE3DB": Object {
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
        "QueueName": "queue-with-dlq-disabled",
      },
      "Type": "AWS::SQS::Queue",
    },
    "lambdatosqsstackqueuePolicy4B9B1605": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosqsstackqueueFDDEE3DB",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosqsstackqueueFDDEE3DB",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "lambdatosqsstackqueueFDDEE3DB",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
  },
}
`;

exports[`Test deployment w/ existing queue 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913ArtifactHash452EF11C": Object {
      "Description": "Artifact hash for asset \\"0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913\\"",
      "Type": "String",
    },
    "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3Bucket642A6F72": Object {
      "Description": "S3 bucket for asset \\"0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913\\"",
      "Type": "String",
    },
    "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3VersionKeyDBE0BAD3": Object {
      "Description": "S3 key for asset version \\"0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "existingqueueobjF8AF0ED1": Object {
      "Properties": Object {
        "QueueName": "existing-queue-obj",
      },
      "Type": "AWS::SQS::Queue",
    },
    "lambdatosqsstackLambdaFunctionDAB62CB1": Object {
      "DependsOn": Array [
        "lambdatosqsstackLambdaFunctionServiceRoleDefaultPolicy467E145A",
        "lambdatosqsstackLambdaFunctionServiceRole0AD9DDDF",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3Bucket642A6F72",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3VersionKeyDBE0BAD3",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3VersionKeyDBE0BAD3",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SQS_QUEUE_URL": Object {
              "Ref": "existingqueueobjF8AF0ED1",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdatosqsstackLambdaFunctionServiceRole0AD9DDDF",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdatosqsstackLambdaFunctionServiceRole0AD9DDDF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdatosqsstackLambdaFunctionServiceRoleDefaultPolicy467E145A": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:PurgeQueue",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "existingqueueobjF8AF0ED1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "existingqueueobjF8AF0ED1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdatosqsstackLambdaFunctionServiceRoleDefaultPolicy467E145A",
        "Roles": Array [
          Object {
            "Ref": "lambdatosqsstackLambdaFunctionServiceRole0AD9DDDF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;

exports[`Test deployment w/ purging disabled 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913ArtifactHash452EF11C": Object {
      "Description": "Artifact hash for asset \\"0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913\\"",
      "Type": "String",
    },
    "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3Bucket642A6F72": Object {
      "Description": "S3 bucket for asset \\"0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913\\"",
      "Type": "String",
    },
    "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3VersionKeyDBE0BAD3": Object {
      "Description": "S3 key for asset version \\"0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "lambdatosqsstackLambdaFunctionDAB62CB1": Object {
      "DependsOn": Array [
        "lambdatosqsstackLambdaFunctionServiceRoleDefaultPolicy467E145A",
        "lambdatosqsstackLambdaFunctionServiceRole0AD9DDDF",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3Bucket642A6F72",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3VersionKeyDBE0BAD3",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3VersionKeyDBE0BAD3",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SQS_QUEUE_URL": Object {
              "Ref": "lambdatosqsstackqueueFDDEE3DB",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdatosqsstackLambdaFunctionServiceRole0AD9DDDF",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdatosqsstackLambdaFunctionServiceRole0AD9DDDF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdatosqsstackLambdaFunctionServiceRoleDefaultPolicy467E145A": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosqsstackqueueFDDEE3DB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdatosqsstackLambdaFunctionServiceRoleDefaultPolicy467E145A",
        "Roles": Array [
          Object {
            "Ref": "lambdatosqsstackLambdaFunctionServiceRole0AD9DDDF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdatosqsstackdeadLetterQueueEAF9B078": Object {
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
    },
    "lambdatosqsstackdeadLetterQueuePolicyF7307F40": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosqsstackdeadLetterQueueEAF9B078",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosqsstackdeadLetterQueueEAF9B078",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "lambdatosqsstackdeadLetterQueueEAF9B078",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "lambdatosqsstackqueueFDDEE3DB": Object {
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
        "RedrivePolicy": Object {
          "deadLetterTargetArn": Object {
            "Fn::GetAtt": Array [
              "lambdatosqsstackdeadLetterQueueEAF9B078",
              "Arn",
            ],
          },
          "maxReceiveCount": 15,
        },
      },
      "Type": "AWS::SQS::Queue",
    },
    "lambdatosqsstackqueuePolicy4B9B1605": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosqsstackqueueFDDEE3DB",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosqsstackqueueFDDEE3DB",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "lambdatosqsstackqueueFDDEE3DB",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
  },
}
`;

exports[`Test minimal deployment with new Lambda function 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913ArtifactHash452EF11C": Object {
      "Description": "Artifact hash for asset \\"0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913\\"",
      "Type": "String",
    },
    "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3Bucket642A6F72": Object {
      "Description": "S3 bucket for asset \\"0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913\\"",
      "Type": "String",
    },
    "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3VersionKeyDBE0BAD3": Object {
      "Description": "S3 key for asset version \\"0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "lambdatosqsstackLambdaFunctionDAB62CB1": Object {
      "DependsOn": Array [
        "lambdatosqsstackLambdaFunctionServiceRoleDefaultPolicy467E145A",
        "lambdatosqsstackLambdaFunctionServiceRole0AD9DDDF",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3Bucket642A6F72",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3VersionKeyDBE0BAD3",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0a8a28cfd21b2481ab3395199806266e35521d7d2bd264025d6c9b7198460913S3VersionKeyDBE0BAD3",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SQS_QUEUE_URL": Object {
              "Ref": "lambdatosqsstackqueueFDDEE3DB",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdatosqsstackLambdaFunctionServiceRole0AD9DDDF",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdatosqsstackLambdaFunctionServiceRole0AD9DDDF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdatosqsstackLambdaFunctionServiceRoleDefaultPolicy467E145A": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosqsstackqueueFDDEE3DB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdatosqsstackLambdaFunctionServiceRoleDefaultPolicy467E145A",
        "Roles": Array [
          Object {
            "Ref": "lambdatosqsstackLambdaFunctionServiceRole0AD9DDDF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdatosqsstackdeadLetterQueueEAF9B078": Object {
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
    },
    "lambdatosqsstackdeadLetterQueuePolicyF7307F40": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosqsstackdeadLetterQueueEAF9B078",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosqsstackdeadLetterQueueEAF9B078",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "lambdatosqsstackdeadLetterQueueEAF9B078",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "lambdatosqsstackqueueFDDEE3DB": Object {
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
        "RedrivePolicy": Object {
          "deadLetterTargetArn": Object {
            "Fn::GetAtt": Array [
              "lambdatosqsstackdeadLetterQueueEAF9B078",
              "Arn",
            ],
          },
          "maxReceiveCount": 15,
        },
      },
      "Type": "AWS::SQS::Queue",
    },
    "lambdatosqsstackqueuePolicy4B9B1605": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosqsstackqueueFDDEE3DB",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosqsstackqueueFDDEE3DB",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "lambdatosqsstackqueueFDDEE3DB",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
  },
}
`;
