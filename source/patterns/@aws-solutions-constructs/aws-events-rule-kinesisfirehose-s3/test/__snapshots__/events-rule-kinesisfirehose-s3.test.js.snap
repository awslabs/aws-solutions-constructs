// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test snapshot match with default parameters 1`] = `
Object {
  "Resources": Object {
    "testeventsrulekinesisfirehoses3defaultparametersEventsRule7C3C24DD": Object {
      "Properties": Object {
        "Description": "event rule props",
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3KinesisFirehose5062AB01",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "testeventsrulekinesisfirehoses3defaultparametersEventsRuleInvokeKinesisFirehoseRole62BBAEA9",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "testeventsrulekinesisfirehoses3defaultparametersEventsRuleInvokeKinesisFirehosePolicy66344F2E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "firehose:PutRecord",
                "firehose:PutRecordBatch",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3KinesisFirehose5062AB01",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testeventsrulekinesisfirehoses3defaultparametersEventsRuleInvokeKinesisFirehosePolicy66344F2E",
        "Roles": Array [
          Object {
            "Ref": "testeventsrulekinesisfirehoses3defaultparametersEventsRuleInvokeKinesisFirehoseRole62BBAEA9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testeventsrulekinesisfirehoses3defaultparametersEventsRuleInvokeKinesisFirehoseRole62BBAEA9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Events Rule To Kinesis Firehose Role",
      },
      "Type": "AWS::IAM::Role",
    },
    "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3KinesisFirehose5062AB01": Object {
      "Properties": Object {
        "DeliveryStreamEncryptionConfigurationInput": Object {
          "KeyType": "AWS_OWNED_CMK",
        },
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3S3Bucket6EC968FC",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 300,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3firehoseloggroup6BC7E438",
            },
            "LogStreamName": Object {
              "Ref": "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3firehoseloggroupfirehoselogstream158BBACB",
            },
          },
          "CompressionFormat": "GZIP",
          "EncryptionConfiguration": Object {
            "KMSEncryptionConfig": Object {
              "AWSKMSKeyARN": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":alias/aws/s3",
                  ],
                ],
              },
            },
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3KinesisFirehoseRole9A570638",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3KinesisFirehosePolicyC8A844AA": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3S3Bucket6EC968FC",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3S3Bucket6EC968FC",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:",
                    Object {
                      "Ref": "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3firehoseloggroup6BC7E438",
                    },
                    ":log-stream:",
                    Object {
                      "Ref": "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3firehoseloggroupfirehoselogstream158BBACB",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3KinesisFirehosePolicyC8A844AA",
        "Roles": Array [
          Object {
            "Ref": "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3KinesisFirehoseRole9A570638",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3KinesisFirehoseRole9A570638": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3S3Bucket6EC968FC": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "NoncurrentVersionTransitions": Array [
                Object {
                  "StorageClass": "GLACIER",
                  "TransitionInDays": 90,
                },
              ],
              "Status": "Enabled",
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3S3LoggingBucket4233ECBF",
          },
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3S3BucketPolicyB9432F88": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3S3Bucket6EC968FC",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3S3Bucket6EC968FC",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3S3Bucket6EC968FC",
                    "Arn",
                  ],
                },
              ],
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3S3LoggingBucket4233ECBF": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W35",
              "reason": "This S3 bucket is used as the access logging bucket for another bucket",
            },
          ],
        },
      },
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3S3LoggingBucketPolicy8FE1A9E5": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3S3LoggingBucket4233ECBF",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3S3LoggingBucket4233ECBF",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3S3LoggingBucket4233ECBF",
                    "Arn",
                  ],
                },
              ],
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3firehoseloggroup6BC7E438": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            Object {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3firehoseloggroupfirehoselogstream158BBACB": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "testeventsrulekinesisfirehoses3defaultparametersKinesisFirehoseToS3firehoseloggroup6BC7E438",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;
