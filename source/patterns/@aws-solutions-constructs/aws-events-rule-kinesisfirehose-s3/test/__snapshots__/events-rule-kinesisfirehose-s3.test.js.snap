// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test snapshot match with default parameters 1`] = `
Object {
  "Resources": Object {
    "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWEventsRule231C9A1C": Object {
      "Properties": Object {
        "Description": "event rule props",
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3KinesisFirehoseE1E70A8A",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWEventsRuleInvokeKinesisFirehoseRole31E4422A",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWEventsRuleInvokeKinesisFirehosePolicy0A5464DF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "firehose:PutRecord",
                "firehose:PutRecordBatch",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3KinesisFirehoseE1E70A8A",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "kinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWEventsRuleInvokeKinesisFirehosePolicy0A5464DF",
        "Roles": Array [
          Object {
            "Ref": "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWEventsRuleInvokeKinesisFirehoseRole31E4422A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWEventsRuleInvokeKinesisFirehoseRole31E4422A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Events Rule To Kinesis Firehose Role",
      },
      "Type": "AWS::IAM::Role",
    },
    "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3KinesisFirehoseE1E70A8A": Object {
      "Properties": Object {
        "DeliveryStreamEncryptionConfigurationInput": Object {
          "KeyType": "AWS_OWNED_CMK",
        },
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3S3Bucket84D286D2",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 300,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3firehoseloggroupEFEFBB43",
            },
            "LogStreamName": Object {
              "Ref": "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3firehoseloggroupfirehoselogstream7EEC31E1",
            },
          },
          "CompressionFormat": "GZIP",
          "EncryptionConfiguration": Object {
            "KMSEncryptionConfig": Object {
              "AWSKMSKeyARN": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":alias/aws/s3",
                  ],
                ],
              },
            },
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3KinesisFirehoseRole7BCEFD7F",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3KinesisFirehosePolicy59C959E0": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3S3Bucket84D286D2",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3S3Bucket84D286D2",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:",
                    Object {
                      "Ref": "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3firehoseloggroupEFEFBB43",
                    },
                    ":log-stream:",
                    Object {
                      "Ref": "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3firehoseloggroupfirehoselogstream7EEC31E1",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "esisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3KinesisFirehosePolicy59C959E0",
        "Roles": Array [
          Object {
            "Ref": "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3KinesisFirehoseRole7BCEFD7F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3KinesisFirehoseRole7BCEFD7F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3S3Bucket84D286D2": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "NoncurrentVersionTransitions": Array [
                Object {
                  "StorageClass": "GLACIER",
                  "TransitionInDays": 90,
                },
              ],
              "Status": "Enabled",
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3S3LoggingBucket598555FD",
          },
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3S3BucketPolicyA1D61C49": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3S3Bucket84D286D2",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3S3Bucket84D286D2",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3S3Bucket84D286D2",
                    "Arn",
                  ],
                },
              ],
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3S3LoggingBucket598555FD": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W35",
              "reason": "This S3 bucket is used as the access logging bucket for another bucket",
            },
          ],
        },
      },
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3S3LoggingBucketPolicyBBDC87C8": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3S3LoggingBucket598555FD",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3S3LoggingBucket598555FD",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3S3LoggingBucket598555FD",
                    "Arn",
                  ],
                },
              ],
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3firehoseloggroupEFEFBB43": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            Object {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3firehoseloggroupfirehoselogstream7EEC31E1": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "testeventsrulekinesisfirehoses3defaultparameterstesteventsrulekinesisfirehoses3defaultparametersWKinesisFirehoseToS3firehoseloggroupEFEFBB43",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;

exports[`check eventbus property, snapshot & eventbus exists 1`] = `
Object {
  "Resources": Object {
    "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWCustomEventBusDC0B1528": Object {
      "Properties": Object {
        "Name": "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWCustomEventBus733832E5",
      },
      "Type": "AWS::Events::EventBus",
    },
    "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWEventsRule6405B59E": Object {
      "Properties": Object {
        "EventBusName": Object {
          "Ref": "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWCustomEventBusDC0B1528",
        },
        "EventPattern": Object {
          "source": Array [
            "solutionsconstructs",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3KinesisFirehose359E5CB2",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWEventsRuleInvokeKinesisFirehoseRole4A78641F",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWEventsRuleInvokeKinesisFirehosePolicyED42C0A7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "firehose:PutRecord",
                "firehose:PutRecordBatch",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3KinesisFirehose359E5CB2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWEventsRuleInvokeKinesisFirehosePolicyED42C0A7",
        "Roles": Array [
          Object {
            "Ref": "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWEventsRuleInvokeKinesisFirehoseRole4A78641F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWEventsRuleInvokeKinesisFirehoseRole4A78641F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Events Rule To Kinesis Firehose Role",
      },
      "Type": "AWS::IAM::Role",
    },
    "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3KinesisFirehose359E5CB2": Object {
      "Properties": Object {
        "DeliveryStreamEncryptionConfigurationInput": Object {
          "KeyType": "AWS_OWNED_CMK",
        },
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3S3Bucket23F44FFE",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 300,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3firehoseloggroup714598F2",
            },
            "LogStreamName": Object {
              "Ref": "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3firehoseloggroupfirehoselogstream42B0168A",
            },
          },
          "CompressionFormat": "GZIP",
          "EncryptionConfiguration": Object {
            "KMSEncryptionConfig": Object {
              "AWSKMSKeyARN": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":alias/aws/s3",
                  ],
                ],
              },
            },
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3KinesisFirehoseRole03B14AF1",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3KinesisFirehosePolicy01068871": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3S3Bucket23F44FFE",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3S3Bucket23F44FFE",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:",
                    Object {
                      "Ref": "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3firehoseloggroup714598F2",
                    },
                    ":log-stream:",
                    Object {
                      "Ref": "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3firehoseloggroupfirehoselogstream42B0168A",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3KinesisFirehosePolicy01068871",
        "Roles": Array [
          Object {
            "Ref": "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3KinesisFirehoseRole03B14AF1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3KinesisFirehoseRole03B14AF1": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3S3Bucket23F44FFE": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "NoncurrentVersionTransitions": Array [
                Object {
                  "StorageClass": "GLACIER",
                  "TransitionInDays": 90,
                },
              ],
              "Status": "Enabled",
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3S3LoggingBucketA996F4EA",
          },
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3S3BucketPolicy42227E47": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3S3Bucket23F44FFE",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3S3Bucket23F44FFE",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3S3Bucket23F44FFE",
                    "Arn",
                  ],
                },
              ],
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3S3LoggingBucketA996F4EA": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W35",
              "reason": "This S3 bucket is used as the access logging bucket for another bucket",
            },
          ],
        },
      },
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3S3LoggingBucketPolicyAE23D8B9": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3S3LoggingBucketA996F4EA",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3S3LoggingBucketA996F4EA",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3S3LoggingBucketA996F4EA",
                    "Arn",
                  ],
                },
              ],
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3firehoseloggroup714598F2": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            Object {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3firehoseloggroupfirehoselogstream42B0168A": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "testeventsrulekinesisfirehosedefaultparameterstesteventsrulekinesisfirehosedefaultparametersWKinesisFirehoseToS3firehoseloggroup714598F2",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;

exports[`check multiple constructs in a single stack 1`] = `
Object {
  "Resources": Object {
    "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WCustomEventBus5B5E4452": Object {
      "Properties": Object {
        "Name": "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WCustomEventBus4EEAAC29",
      },
      "Type": "AWS::Events::EventBus",
    },
    "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WEventsRuleE79A7687": Object {
      "Properties": Object {
        "EventBusName": Object {
          "Ref": "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WCustomEventBus5B5E4452",
        },
        "EventPattern": Object {
          "source": Array [
            "solutionsconstructs",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3KinesisFirehoseA95F57ED",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WEventsRuleInvokeKinesisFirehoseRole2D9787E0",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WEventsRuleInvokeKinesisFirehosePolicy70C58056": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "firehose:PutRecord",
                "firehose:PutRecordBatch",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3KinesisFirehoseA95F57ED",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WEventsRuleInvokeKinesisFirehosePolicy70C58056",
        "Roles": Array [
          Object {
            "Ref": "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WEventsRuleInvokeKinesisFirehoseRole2D9787E0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WEventsRuleInvokeKinesisFirehoseRole2D9787E0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Events Rule To Kinesis Firehose Role",
      },
      "Type": "AWS::IAM::Role",
    },
    "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3KinesisFirehoseA95F57ED": Object {
      "Properties": Object {
        "DeliveryStreamEncryptionConfigurationInput": Object {
          "KeyType": "AWS_OWNED_CMK",
        },
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3S3Bucket53A32F6A",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 300,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3firehoseloggroupB080DEC3",
            },
            "LogStreamName": Object {
              "Ref": "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3firehoseloggroupfirehoselogstream42131EDC",
            },
          },
          "CompressionFormat": "GZIP",
          "EncryptionConfiguration": Object {
            "KMSEncryptionConfig": Object {
              "AWSKMSKeyARN": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":alias/aws/s3",
                  ],
                ],
              },
            },
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3KinesisFirehoseRole48DDB6F3",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3KinesisFirehosePolicy0520BA1E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3S3Bucket53A32F6A",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3S3Bucket53A32F6A",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:",
                    Object {
                      "Ref": "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3firehoseloggroupB080DEC3",
                    },
                    ":log-stream:",
                    Object {
                      "Ref": "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3firehoseloggroupfirehoselogstream42131EDC",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3KinesisFirehosePolicy0520BA1E",
        "Roles": Array [
          Object {
            "Ref": "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3KinesisFirehoseRole48DDB6F3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3KinesisFirehoseRole48DDB6F3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3S3Bucket53A32F6A": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "NoncurrentVersionTransitions": Array [
                Object {
                  "StorageClass": "GLACIER",
                  "TransitionInDays": 90,
                },
              ],
              "Status": "Enabled",
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3S3LoggingBucket95C77672",
          },
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3S3BucketPolicy9DCFF8E9": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3S3Bucket53A32F6A",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3S3Bucket53A32F6A",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3S3Bucket53A32F6A",
                    "Arn",
                  ],
                },
              ],
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3S3LoggingBucket95C77672": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W35",
              "reason": "This S3 bucket is used as the access logging bucket for another bucket",
            },
          ],
        },
      },
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3S3LoggingBucketPolicy36080103": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3S3LoggingBucket95C77672",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3S3LoggingBucket95C77672",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3S3LoggingBucket95C77672",
                    "Arn",
                  ],
                },
              ],
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3firehoseloggroupB080DEC3": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            Object {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3firehoseloggroupfirehoselogstream42131EDC": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "testneweventsrulekinesisfirehose1testneweventsrulekinesisfirehose1WKinesisFirehoseToS3firehoseloggroupB080DEC3",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WCustomEventBusC5F2EC35": Object {
      "Properties": Object {
        "Name": "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WCustomEventBus874FF828",
      },
      "Type": "AWS::Events::EventBus",
    },
    "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WEventsRuleD8710394": Object {
      "Properties": Object {
        "EventBusName": Object {
          "Ref": "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WCustomEventBusC5F2EC35",
        },
        "EventPattern": Object {
          "source": Array [
            "solutionsconstructs",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3KinesisFirehoseA7686855",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WEventsRuleInvokeKinesisFirehoseRoleEB85507E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WEventsRuleInvokeKinesisFirehosePolicyB19D8441": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "firehose:PutRecord",
                "firehose:PutRecordBatch",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3KinesisFirehoseA7686855",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WEventsRuleInvokeKinesisFirehosePolicyB19D8441",
        "Roles": Array [
          Object {
            "Ref": "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WEventsRuleInvokeKinesisFirehoseRoleEB85507E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WEventsRuleInvokeKinesisFirehoseRoleEB85507E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Events Rule To Kinesis Firehose Role",
      },
      "Type": "AWS::IAM::Role",
    },
    "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3KinesisFirehoseA7686855": Object {
      "Properties": Object {
        "DeliveryStreamEncryptionConfigurationInput": Object {
          "KeyType": "AWS_OWNED_CMK",
        },
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3S3Bucket01018DDF",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 300,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3firehoseloggroupA88358AB",
            },
            "LogStreamName": Object {
              "Ref": "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3firehoseloggroupfirehoselogstreamA84741AB",
            },
          },
          "CompressionFormat": "GZIP",
          "EncryptionConfiguration": Object {
            "KMSEncryptionConfig": Object {
              "AWSKMSKeyARN": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":alias/aws/s3",
                  ],
                ],
              },
            },
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3KinesisFirehoseRoleEA8A162C",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3KinesisFirehosePolicy8BF521E7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3S3Bucket01018DDF",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3S3Bucket01018DDF",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:",
                    Object {
                      "Ref": "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3firehoseloggroupA88358AB",
                    },
                    ":log-stream:",
                    Object {
                      "Ref": "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3firehoseloggroupfirehoselogstreamA84741AB",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3KinesisFirehosePolicy8BF521E7",
        "Roles": Array [
          Object {
            "Ref": "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3KinesisFirehoseRoleEA8A162C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3KinesisFirehoseRoleEA8A162C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3S3Bucket01018DDF": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "NoncurrentVersionTransitions": Array [
                Object {
                  "StorageClass": "GLACIER",
                  "TransitionInDays": 90,
                },
              ],
              "Status": "Enabled",
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3S3LoggingBucket1125F06F",
          },
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3S3BucketPolicy68147434": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3S3Bucket01018DDF",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3S3Bucket01018DDF",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3S3Bucket01018DDF",
                    "Arn",
                  ],
                },
              ],
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3S3LoggingBucket1125F06F": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W35",
              "reason": "This S3 bucket is used as the access logging bucket for another bucket",
            },
          ],
        },
      },
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3S3LoggingBucketPolicyA4163089": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3S3LoggingBucket1125F06F",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3S3LoggingBucket1125F06F",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3S3LoggingBucket1125F06F",
                    "Arn",
                  ],
                },
              ],
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3firehoseloggroupA88358AB": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            Object {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3firehoseloggroupfirehoselogstreamA84741AB": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "testneweventsrulekinesisfirehose2testneweventsrulekinesisfirehose2WKinesisFirehoseToS3firehoseloggroupA88358AB",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;

exports[`snapshot test EventsRuleToKinesisFirehose existing event bus params 1`] = `
Object {
  "Resources": Object {
    "testexistingeventbusC6E4A2D0": Object {
      "Properties": Object {
        "Name": "testexistingeventbus",
      },
      "Type": "AWS::Events::EventBus",
    },
    "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWEventsRule199C6397": Object {
      "Properties": Object {
        "EventBusName": Object {
          "Ref": "testexistingeventbusC6E4A2D0",
        },
        "EventPattern": Object {
          "source": Array [
            "solutionsconstructs",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3KinesisFirehose5BD3CDC8",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWEventsRuleInvokeKinesisFirehoseRole6538EF44",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWEventsRuleInvokeKinesisFirehosePolicy72F0E72E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "firehose:PutRecord",
                "firehose:PutRecordBatch",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3KinesisFirehose5BD3CDC8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWEventsRuleInvokeKinesisFirehosePolicy72F0E72E",
        "Roles": Array [
          Object {
            "Ref": "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWEventsRuleInvokeKinesisFirehoseRole6538EF44",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWEventsRuleInvokeKinesisFirehoseRole6538EF44": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Events Rule To Kinesis Firehose Role",
      },
      "Type": "AWS::IAM::Role",
    },
    "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3KinesisFirehose5BD3CDC8": Object {
      "Properties": Object {
        "DeliveryStreamEncryptionConfigurationInput": Object {
          "KeyType": "AWS_OWNED_CMK",
        },
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3S3Bucket7FC695A6",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 300,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3firehoseloggroup14BECCD5",
            },
            "LogStreamName": Object {
              "Ref": "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3firehoseloggroupfirehoselogstreamC6D12661",
            },
          },
          "CompressionFormat": "GZIP",
          "EncryptionConfiguration": Object {
            "KMSEncryptionConfig": Object {
              "AWSKMSKeyARN": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":alias/aws/s3",
                  ],
                ],
              },
            },
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3KinesisFirehoseRole64EF3B2D",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3KinesisFirehosePolicyE81FE550": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3S3Bucket7FC695A6",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3S3Bucket7FC695A6",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:",
                    Object {
                      "Ref": "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3firehoseloggroup14BECCD5",
                    },
                    ":log-stream:",
                    Object {
                      "Ref": "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3firehoseloggroupfirehoselogstreamC6D12661",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3KinesisFirehosePolicyE81FE550",
        "Roles": Array [
          Object {
            "Ref": "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3KinesisFirehoseRole64EF3B2D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3KinesisFirehoseRole64EF3B2D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3S3Bucket7FC695A6": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "NoncurrentVersionTransitions": Array [
                Object {
                  "StorageClass": "GLACIER",
                  "TransitionInDays": 90,
                },
              ],
              "Status": "Enabled",
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3S3LoggingBucket7D1A0A6C",
          },
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3S3BucketPolicyB93D78A6": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3S3Bucket7FC695A6",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3S3Bucket7FC695A6",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3S3Bucket7FC695A6",
                    "Arn",
                  ],
                },
              ],
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3S3LoggingBucket7D1A0A6C": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W35",
              "reason": "This S3 bucket is used as the access logging bucket for another bucket",
            },
          ],
        },
      },
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3S3LoggingBucketPolicy6DD495DA": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3S3LoggingBucket7D1A0A6C",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3S3LoggingBucket7D1A0A6C",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3S3LoggingBucket7D1A0A6C",
                    "Arn",
                  ],
                },
              ],
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3firehoseloggroup14BECCD5": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            Object {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3firehoseloggroupfirehoselogstreamC6D12661": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "testexistingeventsrulekinesisfirehosetestexistingeventsrulekinesisfirehoseWKinesisFirehoseToS3firehoseloggroup14BECCD5",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;
