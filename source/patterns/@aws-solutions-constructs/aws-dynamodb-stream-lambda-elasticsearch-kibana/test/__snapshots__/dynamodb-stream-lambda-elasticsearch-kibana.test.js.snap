// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot test default params 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters92927de5fcc3aea277bddecb845bee318fb502f7375daedbdafb72c0400bc197ArtifactHash052E3F31": Object {
      "Description": "Artifact hash for asset \\"92927de5fcc3aea277bddecb845bee318fb502f7375daedbdafb72c0400bc197\\"",
      "Type": "String",
    },
    "AssetParameters92927de5fcc3aea277bddecb845bee318fb502f7375daedbdafb72c0400bc197S3Bucket87AE2D86": Object {
      "Description": "S3 bucket for asset \\"92927de5fcc3aea277bddecb845bee318fb502f7375daedbdafb72c0400bc197\\"",
      "Type": "String",
    },
    "AssetParameters92927de5fcc3aea277bddecb845bee318fb502f7375daedbdafb72c0400bc197S3VersionKey6EF53907": Object {
      "Description": "S3 key for asset version \\"92927de5fcc3aea277bddecb845bee318fb502f7375daedbdafb72c0400bc197\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "teststackteststackwrappedDynamoDBStreamsToLambdaDynamoTable285FB6C5": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "id",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "id",
            "KeyType": "HASH",
          },
        ],
        "PointInTimeRecoverySpecification": Object {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": Object {
          "SSEEnabled": true,
        },
        "StreamSpecification": Object {
          "StreamViewType": "NEW_AND_OLD_IMAGES",
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "teststackteststackwrappedDynamoDBStreamsToLambdaLambdaFunctionDF5A3CF8": Object {
      "DependsOn": Array [
        "teststackteststackwrappedDynamoDBStreamsToLambdaLambdaFunctionServiceRoleDefaultPolicy74D14AAA",
        "teststackteststackwrappedDynamoDBStreamsToLambdaLambdaFunctionServiceRoleDFC00776",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            Object {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            Object {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters92927de5fcc3aea277bddecb845bee318fb502f7375daedbdafb72c0400bc197S3Bucket87AE2D86",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters92927de5fcc3aea277bddecb845bee318fb502f7375daedbdafb72c0400bc197S3VersionKey6EF53907",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters92927de5fcc3aea277bddecb845bee318fb502f7375daedbdafb72c0400bc197S3VersionKey6EF53907",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DOMAIN_ENDPOINT": Object {
              "Fn::GetAtt": Array [
                "teststackteststackwrappedLambdaToElasticSearchElasticsearchDomain7582D2E3",
                "DomainEndpoint",
              ],
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "teststackteststackwrappedDynamoDBStreamsToLambdaLambdaFunctionServiceRoleDFC00776",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "teststackteststackwrappedDynamoDBStreamsToLambdaLambdaFunctionDynamoDBEventSourceteststackteststackwrappedDynamoDBStreamsToLambdaDynamoTableE5F505A30EC154BA": Object {
      "Properties": Object {
        "BatchSize": 100,
        "BisectBatchOnFunctionError": true,
        "DestinationConfig": Object {
          "OnFailure": Object {
            "Destination": Object {
              "Fn::GetAtt": Array [
                "teststackteststackwrappedDynamoDBStreamsToLambdaSqsDlqQueue5B5A4F47",
                "Arn",
              ],
            },
          },
        },
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "teststackteststackwrappedDynamoDBStreamsToLambdaDynamoTable285FB6C5",
            "StreamArn",
          ],
        },
        "FunctionName": Object {
          "Ref": "teststackteststackwrappedDynamoDBStreamsToLambdaLambdaFunctionDF5A3CF8",
        },
        "MaximumRecordAgeInSeconds": 86400,
        "MaximumRetryAttempts": 500,
        "StartingPosition": "TRIM_HORIZON",
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "teststackteststackwrappedDynamoDBStreamsToLambdaLambdaFunctionServiceRoleDFC00776": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "teststackteststackwrappedDynamoDBStreamsToLambdaLambdaFunctionServiceRoleDefaultPolicy74D14AAA": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "dynamodb:ListStreams",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "teststackteststackwrappedDynamoDBStreamsToLambdaDynamoTable285FB6C5",
                  "StreamArn",
                ],
              },
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "teststackteststackwrappedDynamoDBStreamsToLambdaSqsDlqQueue5B5A4F47",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "teststackteststackwrappedDynamoDBStreamsToLambdaLambdaFunctionServiceRoleDefaultPolicy74D14AAA",
        "Roles": Array [
          Object {
            "Ref": "teststackteststackwrappedDynamoDBStreamsToLambdaLambdaFunctionServiceRoleDFC00776",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "teststackteststackwrappedDynamoDBStreamsToLambdaSqsDlqQueue5B5A4F47": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "teststackteststackwrappedDynamoDBStreamsToLambdaSqsDlqQueuePolicyE03A7292": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "teststackteststackwrappedDynamoDBStreamsToLambdaSqsDlqQueue5B5A4F47",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "teststackteststackwrappedDynamoDBStreamsToLambdaSqsDlqQueue5B5A4F47",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "teststackteststackwrappedDynamoDBStreamsToLambdaSqsDlqQueue5B5A4F47",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "teststackteststackwrappedLambdaToElasticSearchAutomatedSnapshotFailureTooHighAlarm7CC2CA20": Object {
      "Properties": Object {
        "AlarmDescription": "An automated snapshot failed. This failure is often the result of a red cluster health status.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "AutomatedSnapshotFailure",
        "Namespace": "AWS/ES",
        "Period": 60,
        "Statistic": "Maximum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "teststackteststackwrappedLambdaToElasticSearchCPUUtilizationTooHighAlarm98B1C537": Object {
      "Properties": Object {
        "AlarmDescription": "100% CPU utilization is not uncommon, but sustained high usage is problematic. Consider using larger instance types or adding instances.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 3,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/ES",
        "Period": 900,
        "Statistic": "Average",
        "Threshold": 80,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "teststackteststackwrappedLambdaToElasticSearchCognitoAuthorizedRole15BFD8EB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "ForAnyValue:StringLike": Object {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": Object {
                  "cognito-identity.amazonaws.com:aud": Object {
                    "Ref": "teststackteststackwrappedLambdaToElasticSearchCognitoIdentityPoolF92B1D06",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "es:ESHttp*",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":es:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":domain/test-domain/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "CognitoAccessPolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "teststackteststackwrappedLambdaToElasticSearchCognitoIdentityPoolF92B1D06": Object {
      "Properties": Object {
        "AllowUnauthenticatedIdentities": false,
        "CognitoIdentityProviders": Array [
          Object {
            "ClientId": Object {
              "Ref": "teststackteststackwrappedLambdaToElasticSearchCognitoUserPoolClient14E0ADEE",
            },
            "ProviderName": Object {
              "Fn::GetAtt": Array [
                "teststackteststackwrappedLambdaToElasticSearchCognitoUserPoolBA16EA97",
                "ProviderName",
              ],
            },
            "ServerSideTokenCheck": true,
          },
        ],
      },
      "Type": "AWS::Cognito::IdentityPool",
    },
    "teststackteststackwrappedLambdaToElasticSearchCognitoKibanaConfigureRoleD014A932": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "es.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "teststackteststackwrappedLambdaToElasticSearchCognitoKibanaConfigureRolePolicy5276FFBA": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "cognito-idp:DescribeUserPool",
                "cognito-idp:CreateUserPoolClient",
                "cognito-idp:DeleteUserPoolClient",
                "cognito-idp:DescribeUserPoolClient",
                "cognito-idp:AdminInitiateAuth",
                "cognito-idp:AdminUserGlobalSignOut",
                "cognito-idp:ListUserPoolClients",
                "cognito-identity:DescribeIdentityPool",
                "cognito-identity:UpdateIdentityPool",
                "cognito-identity:SetIdentityPoolRoles",
                "cognito-identity:GetIdentityPoolRoles",
                "es:UpdateElasticsearchDomainConfig",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "teststackteststackwrappedLambdaToElasticSearchCognitoUserPoolBA16EA97",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:aws:cognito-identity:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":identitypool/",
                      Object {
                        "Ref": "teststackteststackwrappedLambdaToElasticSearchCognitoIdentityPoolF92B1D06",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:aws:es:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":domain/test-domain",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "iam:PassRole",
              "Condition": Object {
                "StringLike": Object {
                  "iam:PassedToService": "cognito-identity.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "teststackteststackwrappedLambdaToElasticSearchCognitoKibanaConfigureRoleD014A932",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "teststackteststackwrappedLambdaToElasticSearchCognitoKibanaConfigureRolePolicy5276FFBA",
        "Roles": Array [
          Object {
            "Ref": "teststackteststackwrappedLambdaToElasticSearchCognitoKibanaConfigureRoleD014A932",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "teststackteststackwrappedLambdaToElasticSearchCognitoUserPoolBA16EA97": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccountRecoverySetting": Object {
          "RecoveryMechanisms": Array [
            Object {
              "Name": "verified_phone_number",
              "Priority": 1,
            },
            Object {
              "Name": "verified_email",
              "Priority": 2,
            },
          ],
        },
        "AdminCreateUserConfig": Object {
          "AllowAdminCreateUserOnly": true,
        },
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UserPoolAddOns": Object {
          "AdvancedSecurityMode": "ENFORCED",
        },
        "VerificationMessageTemplate": Object {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Retain",
    },
    "teststackteststackwrappedLambdaToElasticSearchCognitoUserPoolClient14E0ADEE": Object {
      "Properties": Object {
        "AllowedOAuthFlows": Array [
          "implicit",
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": Array [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin",
        ],
        "CallbackURLs": Array [
          "https://example.com",
        ],
        "SupportedIdentityProviders": Array [
          "COGNITO",
        ],
        "UserPoolId": Object {
          "Ref": "teststackteststackwrappedLambdaToElasticSearchCognitoUserPoolBA16EA97",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "teststackteststackwrappedLambdaToElasticSearchElasticsearchDomain7582D2E3": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W28",
              "reason": "The ES Domain is passed dynamically as as parameter and explicitly specified to ensure that IAM policies are configured to lockdown access to this specific ES instance only",
            },
            Object {
              "id": "W90",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
          ],
        },
      },
      "Properties": Object {
        "AccessPolicies": Object {
          "Statement": Array [
            Object {
              "Action": "es:ESHttp*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  Object {
                    "Fn::GetAtt": Array [
                      "teststackteststackwrappedLambdaToElasticSearchCognitoAuthorizedRole15BFD8EB",
                      "Arn",
                    ],
                  },
                  Object {
                    "Fn::GetAtt": Array [
                      "teststackteststackwrappedDynamoDBStreamsToLambdaLambdaFunctionServiceRoleDFC00776",
                      "Arn",
                    ],
                  },
                ],
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:es:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":domain/test-domain/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "CognitoOptions": Object {
          "Enabled": true,
          "IdentityPoolId": Object {
            "Ref": "teststackteststackwrappedLambdaToElasticSearchCognitoIdentityPoolF92B1D06",
          },
          "RoleArn": Object {
            "Fn::GetAtt": Array [
              "teststackteststackwrappedLambdaToElasticSearchCognitoKibanaConfigureRoleD014A932",
              "Arn",
            ],
          },
          "UserPoolId": Object {
            "Ref": "teststackteststackwrappedLambdaToElasticSearchCognitoUserPoolBA16EA97",
          },
        },
        "DomainName": "test-domain",
        "EBSOptions": Object {
          "EBSEnabled": true,
          "VolumeSize": 10,
        },
        "ElasticsearchClusterConfig": Object {
          "DedicatedMasterCount": 3,
          "DedicatedMasterEnabled": true,
          "InstanceCount": 3,
          "ZoneAwarenessConfig": Object {
            "AvailabilityZoneCount": 3,
          },
          "ZoneAwarenessEnabled": true,
        },
        "ElasticsearchVersion": "6.3",
        "EncryptionAtRestOptions": Object {
          "Enabled": true,
        },
        "NodeToNodeEncryptionOptions": Object {
          "Enabled": true,
        },
        "SnapshotOptions": Object {
          "AutomatedSnapshotStartHour": 1,
        },
      },
      "Type": "AWS::Elasticsearch::Domain",
    },
    "teststackteststackwrappedLambdaToElasticSearchFreeStorageSpaceTooLowAlarm03262807": Object {
      "Properties": Object {
        "AlarmDescription": "A node in your cluster is down to 20 GiB of free storage space.",
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/ES",
        "Period": 60,
        "Statistic": "Minimum",
        "Threshold": 20000,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "teststackteststackwrappedLambdaToElasticSearchIdentityPoolRoleMapping529E4FD4": Object {
      "Properties": Object {
        "IdentityPoolId": Object {
          "Ref": "teststackteststackwrappedLambdaToElasticSearchCognitoIdentityPoolF92B1D06",
        },
        "Roles": Object {
          "authenticated": Object {
            "Fn::GetAtt": Array [
              "teststackteststackwrappedLambdaToElasticSearchCognitoAuthorizedRole15BFD8EB",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
    },
    "teststackteststackwrappedLambdaToElasticSearchIndexWritesBlockedTooHighAlarm806FBE2F": Object {
      "Properties": Object {
        "AlarmDescription": "Your cluster is blocking write requests.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "ClusterIndexWritesBlocked",
        "Namespace": "AWS/ES",
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "teststackteststackwrappedLambdaToElasticSearchJVMMemoryPressureTooHighAlarm357EE07D": Object {
      "Properties": Object {
        "AlarmDescription": "Average JVM memory pressure over last 15 minutes too high. Consider scaling vertically.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "JVMMemoryPressure",
        "Namespace": "AWS/ES",
        "Period": 900,
        "Statistic": "Average",
        "Threshold": 80,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "teststackteststackwrappedLambdaToElasticSearchMasterCPUUtilizationTooHighAlarmF390E9A4": Object {
      "Properties": Object {
        "AlarmDescription": "Average CPU utilization over last 45 minutes too high. Consider using larger instance types for your dedicated master nodes.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 3,
        "MetricName": "MasterCPUUtilization",
        "Namespace": "AWS/ES",
        "Period": 900,
        "Statistic": "Average",
        "Threshold": 50,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "teststackteststackwrappedLambdaToElasticSearchMasterJVMMemoryPressureTooHighAlarm9B82F810": Object {
      "Properties": Object {
        "AlarmDescription": "Average JVM memory pressure over last 15 minutes too high. Consider scaling vertically.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "MasterJVMMemoryPressure",
        "Namespace": "AWS/ES",
        "Period": 900,
        "Statistic": "Average",
        "Threshold": 50,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "teststackteststackwrappedLambdaToElasticSearchStatusRedAlarm5BF76B79": Object {
      "Properties": Object {
        "AlarmDescription": "At least one primary shard and its replicas are not allocated to a node. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "ClusterStatus.red",
        "Namespace": "AWS/ES",
        "Period": 60,
        "Statistic": "Maximum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "teststackteststackwrappedLambdaToElasticSearchStatusYellowAlarm2F036EF1": Object {
      "Properties": Object {
        "AlarmDescription": "At least one replica shard is not allocated to a node.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "ClusterStatus.yellow",
        "Namespace": "AWS/ES",
        "Period": 60,
        "Statistic": "Maximum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "teststackteststackwrappedLambdaToElasticSearchUserPoolDomain5511272B": Object {
      "DependsOn": Array [
        "teststackteststackwrappedLambdaToElasticSearchCognitoUserPoolBA16EA97",
      ],
      "Properties": Object {
        "Domain": "test-domain",
        "UserPoolId": Object {
          "Ref": "teststackteststackwrappedLambdaToElasticSearchCognitoUserPoolBA16EA97",
        },
      },
      "Type": "AWS::Cognito::UserPoolDomain",
    },
  },
}
`;
