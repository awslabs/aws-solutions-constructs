{
 "Resources": {
  "lambdadbsstpteststatemachineServiceRoleC5D3726D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "lambdadbsstpteststatemachine3BB0B3E0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "exports.handler = async (event) => console.log(event)"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "lambdadbsstpteststatemachineServiceRoleC5D3726D",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "lambdadbsstpteststatemachineServiceRoleC5D3726D"
   ],
   "Metadata": {
    "cfn_nag": {
     "rules_to_suppress": [
      {
       "id": "W58",
       "reason": "This Lambda Function is created for integration testing purposes only and is not part of an actual construct"
      },
      {
       "id": "W89",
       "reason": "This Lambda Function is created for integration testing purposes only and is not part of an actual construct"
      },
      {
       "id": "W92",
       "reason": "This Lambda Function is created for integration testing purposes only and is not part of an actual construct"
      }
     ]
    }
   }
  },
  "dbsstpteststatemachineRole41CB13EC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "states.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "dbsstpteststatemachineRoleDefaultPolicy4870B679": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "lambdadbsstpteststatemachine3BB0B3E0",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "lambdadbsstpteststatemachine3BB0B3E0",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "dbsstpteststatemachineRoleDefaultPolicy4870B679",
    "Roles": [
     {
      "Ref": "dbsstpteststatemachineRole41CB13EC"
     }
    ]
   }
  },
  "dbsstpteststatemachine94317E1F": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"taskdbsstp-test-state-machine\",\"States\":{\"taskdbsstp-test-state-machine\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "lambdadbsstpteststatemachine3BB0B3E0",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}}}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "dbsstpteststatemachineRole41CB13EC",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "dbsstpteststatemachineRoleDefaultPolicy4870B679",
    "dbsstpteststatemachineRole41CB13EC"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "testdbspipesstatesconstructDynamoTable5457FA02": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "SSESpecification": {
     "SSEEnabled": true
    },
    "StreamSpecification": {
     "StreamViewType": "NEW_AND_OLD_IMAGES"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "guard": {
     "SuppressedRules": [
      "DYNAMODB_TABLE_ENCRYPTED_KMS"
     ]
    }
   }
  },
  "testdbspipesstatesconstructdlqF765E6A0": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "KmsMasterKeyId": "alias/aws/sqs"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "testdbspipesstatesconstructdlqPolicyB08573AE": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:AddPermission",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:ReceiveMessage",
        "sqs:RemovePermission",
        "sqs:SendMessage",
        "sqs:SetQueueAttributes"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       },
       "Resource": {
        "Fn::GetAtt": [
         "testdbspipesstatesconstructdlqF765E6A0",
         "Arn"
        ]
       },
       "Sid": "QueueOwnerOnlyAccess"
      },
      {
       "Action": "SQS:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": {
        "Fn::GetAtt": [
         "testdbspipesstatesconstructdlqF765E6A0",
         "Arn"
        ]
       },
       "Sid": "HttpsOnly"
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "testdbspipesstatesconstructdlqF765E6A0"
     }
    ]
   }
  },
  "testdbspipesstatesconstructPipeRoletestdbspipesstatesconstruct4E57732C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "pipes.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "dynamodb:DescribeStream",
          "dynamodb:GetRecords",
          "dynamodb:GetShardIterator",
          "dynamodb:ListStreams"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "testdbspipesstatesconstructDynamoTable5457FA02",
           "StreamArn"
          ]
         }
        },
        {
         "Action": "sqs:SendMessage",
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "testdbspipesstatesconstructdlqF765E6A0",
           "Arn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "sourcePolicy"
     },
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "states:StartExecution",
         "Effect": "Allow",
         "Resource": {
          "Ref": "dbsstpteststatemachine94317E1F"
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "targetPolicy"
     }
    ]
   },
   "Metadata": {
    "guard": {
     "SuppressedRules": [
      "IAM_NO_INLINE_POLICY_CHECK"
     ]
    }
   }
  },
  "testdbspipesstatesconstructLogGrouptestdbspipesstatesconstructAB6BC73F": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/vendedlogs/pipes/constructs/dbspstp-existing-state-machinetest-dbs-pipes-states-constructPipesLog-",
       {
        "Fn::Select": [
         2,
         {
          "Fn::Split": [
           "/",
           {
            "Ref": "AWS::StackId"
           }
          ]
         }
        ]
       }
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "cfn_nag": {
     "rules_to_suppress": [
      {
       "id": "W86",
       "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
      },
      {
       "id": "W84",
       "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
      }
     ]
    }
   }
  },
  "testdbspipesstatesconstructpipetestdbspipesstatesconstruct6F9C482F": {
   "Type": "AWS::Pipes::Pipe",
   "Properties": {
    "LogConfiguration": {
     "CloudwatchLogsLogDestination": {
      "LogGroupArn": {
       "Fn::GetAtt": [
        "testdbspipesstatesconstructLogGrouptestdbspipesstatesconstructAB6BC73F",
        "Arn"
       ]
      }
     },
     "Level": "INFO"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testdbspipesstatesconstructPipeRoletestdbspipesstatesconstruct4E57732C",
      "Arn"
     ]
    },
    "Source": {
     "Fn::GetAtt": [
      "testdbspipesstatesconstructDynamoTable5457FA02",
      "StreamArn"
     ]
    },
    "SourceParameters": {
     "DynamoDBStreamParameters": {
      "DeadLetterConfig": {
       "Arn": {
        "Fn::GetAtt": [
         "testdbspipesstatesconstructdlqF765E6A0",
         "Arn"
        ]
       }
      },
      "MaximumRetryAttempts": 3,
      "StartingPosition": "LATEST"
     }
    },
    "Target": {
     "Ref": "dbsstpteststatemachine94317E1F"
    },
    "TargetParameters": {
     "StepFunctionStateMachineParameters": {
      "InvocationType": "FIRE_AND_FORGET"
     }
    }
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}