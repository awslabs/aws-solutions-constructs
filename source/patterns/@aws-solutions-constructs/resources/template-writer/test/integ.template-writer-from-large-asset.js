"use strict";
/**
 *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance
 *  with the License. A copy of the License is located at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES
 *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions
 *  and limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const aws_cdk_lib_1 = require("aws-cdk-lib");
const core_1 = require("@aws-solutions-constructs/core");
const aws_s3_assets_1 = require("aws-cdk-lib/aws-s3-assets");
const path = require("path");
const template_writer_1 = require("../lib/template-writer");
const app = new aws_cdk_lib_1.App();
const stack = new aws_cdk_lib_1.Stack(app, (0, core_1.generateIntegStackName)(__filename));
stack.templateOptions.description = 'Integration Test for Template Writer Resource';
const templateAsset = new aws_s3_assets_1.Asset(stack, 'TemplateAsset', {
    path: path.join(__dirname, 'template/large-sample-template')
});
// this test will do a total of 5,760 substitutions across a 9.4MB text file
// Last integration test run used 286MB of memory with a function duration of 1.5 seconds
const templateValues = new Array({
    id: 'Lorem',
    value: 'LOREM_2'
}, {
    id: 'Velit',
    value: 'VELIT_2'
}, {
    id: 'Ornare',
    value: 'ORNARE_2'
}, {
    id: 'Ullamcorper',
    value: 'ULLAMCORPER_2'
}, {
    id: 'Blandit',
    value: 'BLANDIT_2'
}, {
    id: 'Bibendum',
    value: 'BIBENDUM_2'
});
(0, template_writer_1.createTemplateWriterCustomResource)(stack, 'Test', {
    templateBucket: templateAsset.bucket,
    templateKey: templateAsset.s3ObjectKey,
    templateValues,
    timeout: aws_cdk_lib_1.Duration.minutes(1),
    memorySize: 1024
});
app.synth();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWcudGVtcGxhdGUtd3JpdGVyLWZyb20tbGFyZ2UtYXNzZXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbnRlZy50ZW1wbGF0ZS13cml0ZXItZnJvbS1sYXJnZS1hc3NldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7O0dBV0c7O0FBRUgsNkNBQW1EO0FBQ25ELHlEQUF3RTtBQUN4RSw2REFBa0Q7QUFDbEQsNkJBQTZCO0FBQzdCLDREQUEyRjtBQUUzRixNQUFNLEdBQUcsR0FBRyxJQUFJLGlCQUFHLEVBQUUsQ0FBQztBQUN0QixNQUFNLEtBQUssR0FBRyxJQUFJLG1CQUFLLENBQUMsR0FBRyxFQUFFLElBQUEsNkJBQXNCLEVBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztBQUNqRSxLQUFLLENBQUMsZUFBZSxDQUFDLFdBQVcsR0FBRywrQ0FBK0MsQ0FBQztBQUVwRixNQUFNLGFBQWEsR0FBRyxJQUFJLHFCQUFLLENBQUMsS0FBSyxFQUFFLGVBQWUsRUFBRTtJQUN0RCxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsZ0NBQWdDLENBQUM7Q0FDN0QsQ0FBQyxDQUFDO0FBRUgsNEVBQTRFO0FBQzVFLHlGQUF5RjtBQUV6RixNQUFNLGNBQWMsR0FBb0IsSUFBSSxLQUFLLENBQy9DO0lBQ0UsRUFBRSxFQUFFLE9BQU87SUFDWCxLQUFLLEVBQUUsU0FBUztDQUNqQixFQUNEO0lBQ0UsRUFBRSxFQUFFLE9BQU87SUFDWCxLQUFLLEVBQUUsU0FBUztDQUNqQixFQUNEO0lBQ0UsRUFBRSxFQUFFLFFBQVE7SUFDWixLQUFLLEVBQUUsVUFBVTtDQUNsQixFQUNEO0lBQ0UsRUFBRSxFQUFFLGFBQWE7SUFDakIsS0FBSyxFQUFFLGVBQWU7Q0FDdkIsRUFDRDtJQUNFLEVBQUUsRUFBRSxTQUFTO0lBQ2IsS0FBSyxFQUFFLFdBQVc7Q0FDbkIsRUFDRDtJQUNFLEVBQUUsRUFBRSxVQUFVO0lBQ2QsS0FBSyxFQUFFLFlBQVk7Q0FDcEIsQ0FDRixDQUFDO0FBRUYsSUFBQSxvREFBa0MsRUFBQyxLQUFLLEVBQUUsTUFBTSxFQUFFO0lBQ2hELGNBQWMsRUFBRSxhQUFhLENBQUMsTUFBTTtJQUNwQyxXQUFXLEVBQUUsYUFBYSxDQUFDLFdBQVc7SUFDdEMsY0FBYztJQUNkLE9BQU8sRUFBRSxzQkFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDNUIsVUFBVSxFQUFFLElBQUk7Q0FDakIsQ0FBQyxDQUFDO0FBRUgsR0FBRyxDQUFDLEtBQUssRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiAgQ29weXJpZ2h0IEFtYXpvbi5jb20sIEluYy4gb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIikuIFlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcbiAqICB3aXRoIHRoZSBMaWNlbnNlLiBBIGNvcHkgb2YgdGhlIExpY2Vuc2UgaXMgbG9jYXRlZCBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogIG9yIGluIHRoZSAnbGljZW5zZScgZmlsZSBhY2NvbXBhbnlpbmcgdGhpcyBmaWxlLiBUaGlzIGZpbGUgaXMgZGlzdHJpYnV0ZWQgb24gYW4gJ0FTIElTJyBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTXG4gKiAgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnNcbiAqICBhbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQXBwLCBEdXJhdGlvbiwgU3RhY2sgfSBmcm9tIFwiYXdzLWNkay1saWJcIjtcbmltcG9ydCB7IGdlbmVyYXRlSW50ZWdTdGFja05hbWUgfSBmcm9tICdAYXdzLXNvbHV0aW9ucy1jb25zdHJ1Y3RzL2NvcmUnO1xuaW1wb3J0IHsgQXNzZXQgfSBmcm9tIFwiYXdzLWNkay1saWIvYXdzLXMzLWFzc2V0c1wiO1xuaW1wb3J0ICogYXMgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCB7IFRlbXBsYXRlVmFsdWUsIGNyZWF0ZVRlbXBsYXRlV3JpdGVyQ3VzdG9tUmVzb3VyY2UgfSBmcm9tIFwiLi4vbGliL3RlbXBsYXRlLXdyaXRlclwiO1xuXG5jb25zdCBhcHAgPSBuZXcgQXBwKCk7XG5jb25zdCBzdGFjayA9IG5ldyBTdGFjayhhcHAsIGdlbmVyYXRlSW50ZWdTdGFja05hbWUoX19maWxlbmFtZSkpO1xuc3RhY2sudGVtcGxhdGVPcHRpb25zLmRlc2NyaXB0aW9uID0gJ0ludGVncmF0aW9uIFRlc3QgZm9yIFRlbXBsYXRlIFdyaXRlciBSZXNvdXJjZSc7XG5cbmNvbnN0IHRlbXBsYXRlQXNzZXQgPSBuZXcgQXNzZXQoc3RhY2ssICdUZW1wbGF0ZUFzc2V0Jywge1xuICBwYXRoOiBwYXRoLmpvaW4oX19kaXJuYW1lLCAndGVtcGxhdGUvbGFyZ2Utc2FtcGxlLXRlbXBsYXRlJylcbn0pO1xuXG4vLyB0aGlzIHRlc3Qgd2lsbCBkbyBhIHRvdGFsIG9mIDUsNzYwIHN1YnN0aXR1dGlvbnMgYWNyb3NzIGEgOS40TUIgdGV4dCBmaWxlXG4vLyBMYXN0IGludGVncmF0aW9uIHRlc3QgcnVuIHVzZWQgMjg2TUIgb2YgbWVtb3J5IHdpdGggYSBmdW5jdGlvbiBkdXJhdGlvbiBvZiAxLjUgc2Vjb25kc1xuXG5jb25zdCB0ZW1wbGF0ZVZhbHVlczogVGVtcGxhdGVWYWx1ZVtdID0gbmV3IEFycmF5KFxuICB7XG4gICAgaWQ6ICdMb3JlbScsIC8vIDc2OCBvY2N1cnJlbmNlcyBpbiBsYXJnZS1zYW1wbGUtdGVtcGxhdGVcbiAgICB2YWx1ZTogJ0xPUkVNXzInXG4gIH0sXG4gIHtcbiAgICBpZDogJ1ZlbGl0JywgLy8gNjQwIG9jY3VycmVuY2VzIGluIGxhcmdlLXNhbXBsZS10ZW1wbGF0ZVxuICAgIHZhbHVlOiAnVkVMSVRfMidcbiAgfSxcbiAge1xuICAgIGlkOiAnT3JuYXJlJywgLy8gMTAyNCBvY2N1cnJlbmNlcyBpbiBsYXJnZS1zYW1wbGUtdGVtcGxhdGVcbiAgICB2YWx1ZTogJ09STkFSRV8yJ1xuICB9LFxuICB7XG4gICAgaWQ6ICdVbGxhbWNvcnBlcicsIC8vIDExNTIgb2NjdXJyZW5jZXMgaW4gbGFyZ2Utc2FtcGxlLXRlbXBsYXRlXG4gICAgdmFsdWU6ICdVTExBTUNPUlBFUl8yJ1xuICB9LFxuICB7XG4gICAgaWQ6ICdCbGFuZGl0JywgLy8gODk2IG9jY3VycmVuY2VzIGluIGxhcmdlLXNhbXBsZS10ZW1wbGF0ZVxuICAgIHZhbHVlOiAnQkxBTkRJVF8yJ1xuICB9LFxuICB7XG4gICAgaWQ6ICdCaWJlbmR1bScsIC8vIDEyODAgb2NjdXJyZW5jZXMgaW4gbGFyZ2Utc2FtcGxlLXRlbXBsYXRlXG4gICAgdmFsdWU6ICdCSUJFTkRVTV8yJ1xuICB9XG4pO1xuXG5jcmVhdGVUZW1wbGF0ZVdyaXRlckN1c3RvbVJlc291cmNlKHN0YWNrLCAnVGVzdCcsIHtcbiAgdGVtcGxhdGVCdWNrZXQ6IHRlbXBsYXRlQXNzZXQuYnVja2V0LFxuICB0ZW1wbGF0ZUtleTogdGVtcGxhdGVBc3NldC5zM09iamVjdEtleSxcbiAgdGVtcGxhdGVWYWx1ZXMsXG4gIHRpbWVvdXQ6IER1cmF0aW9uLm1pbnV0ZXMoMSksXG4gIG1lbW9yeVNpemU6IDEwMjRcbn0pO1xuXG5hcHAuc3ludGgoKTtcbiJdfQ==