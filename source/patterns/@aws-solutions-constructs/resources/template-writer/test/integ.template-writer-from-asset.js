"use strict";
/**
 *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance
 *  with the License. A copy of the License is located at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES
 *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions
 *  and limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const aws_cdk_lib_1 = require("aws-cdk-lib");
const core_1 = require("@aws-solutions-constructs/core");
const aws_s3_assets_1 = require("aws-cdk-lib/aws-s3-assets");
const path = require("path");
const template_writer_1 = require("../lib/template-writer");
const app = new aws_cdk_lib_1.App();
const stack = new aws_cdk_lib_1.Stack(app, (0, core_1.generateIntegStackName)(__filename));
stack.templateOptions.description = 'Integration Test for Template Writer Resource';
const templateAsset = new aws_s3_assets_1.Asset(stack, 'TemplateAsset', {
    path: path.join(__dirname, 'template/sample-template')
});
const templateValues = new Array({
    id: 'placeholder',
    value: 'resolved_value'
});
(0, template_writer_1.createTemplateWriterCustomResource)(stack, 'Test', {
    templateBucket: templateAsset.bucket,
    templateKey: templateAsset.s3ObjectKey,
    templateValues
});
app.synth();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWcudGVtcGxhdGUtd3JpdGVyLWZyb20tYXNzZXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbnRlZy50ZW1wbGF0ZS13cml0ZXItZnJvbS1hc3NldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7O0dBV0c7O0FBRUgsNkNBQXlDO0FBQ3pDLHlEQUF3RTtBQUN4RSw2REFBa0Q7QUFDbEQsNkJBQTZCO0FBQzdCLDREQUEyRjtBQUUzRixNQUFNLEdBQUcsR0FBRyxJQUFJLGlCQUFHLEVBQUUsQ0FBQztBQUN0QixNQUFNLEtBQUssR0FBRyxJQUFJLG1CQUFLLENBQUMsR0FBRyxFQUFFLElBQUEsNkJBQXNCLEVBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztBQUNqRSxLQUFLLENBQUMsZUFBZSxDQUFDLFdBQVcsR0FBRywrQ0FBK0MsQ0FBQztBQUVwRixNQUFNLGFBQWEsR0FBRyxJQUFJLHFCQUFLLENBQUMsS0FBSyxFQUFFLGVBQWUsRUFBRTtJQUN0RCxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsMEJBQTBCLENBQUM7Q0FDdkQsQ0FBQyxDQUFDO0FBRUgsTUFBTSxjQUFjLEdBQW9CLElBQUksS0FBSyxDQUMvQztJQUNFLEVBQUUsRUFBRSxhQUFhO0lBQ2pCLEtBQUssRUFBRSxnQkFBZ0I7Q0FDeEIsQ0FDRixDQUFDO0FBRUYsSUFBQSxvREFBa0MsRUFBQyxLQUFLLEVBQUUsTUFBTSxFQUFFO0lBQ2hELGNBQWMsRUFBRSxhQUFhLENBQUMsTUFBTTtJQUNwQyxXQUFXLEVBQUUsYUFBYSxDQUFDLFdBQVc7SUFDdEMsY0FBYztDQUNmLENBQUMsQ0FBQztBQUVILEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogIENvcHlyaWdodCBBbWF6b24uY29tLCBJbmMuIG9yIGl0cyBhZmZpbGlhdGVzLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpLiBZb3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiAgd2l0aCB0aGUgTGljZW5zZS4gQSBjb3B5IG9mIHRoZSBMaWNlbnNlIGlzIGxvY2F0ZWQgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqICBvciBpbiB0aGUgJ2xpY2Vuc2UnIGZpbGUgYWNjb21wYW55aW5nIHRoaXMgZmlsZS4gVGhpcyBmaWxlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICdBUyBJUycgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFU1xuICogIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zXG4gKiAgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IEFwcCwgU3RhY2sgfSBmcm9tIFwiYXdzLWNkay1saWJcIjtcbmltcG9ydCB7IGdlbmVyYXRlSW50ZWdTdGFja05hbWUgfSBmcm9tICdAYXdzLXNvbHV0aW9ucy1jb25zdHJ1Y3RzL2NvcmUnO1xuaW1wb3J0IHsgQXNzZXQgfSBmcm9tIFwiYXdzLWNkay1saWIvYXdzLXMzLWFzc2V0c1wiO1xuaW1wb3J0ICogYXMgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCB7IFRlbXBsYXRlVmFsdWUsIGNyZWF0ZVRlbXBsYXRlV3JpdGVyQ3VzdG9tUmVzb3VyY2UgfSBmcm9tIFwiLi4vbGliL3RlbXBsYXRlLXdyaXRlclwiO1xuXG5jb25zdCBhcHAgPSBuZXcgQXBwKCk7XG5jb25zdCBzdGFjayA9IG5ldyBTdGFjayhhcHAsIGdlbmVyYXRlSW50ZWdTdGFja05hbWUoX19maWxlbmFtZSkpO1xuc3RhY2sudGVtcGxhdGVPcHRpb25zLmRlc2NyaXB0aW9uID0gJ0ludGVncmF0aW9uIFRlc3QgZm9yIFRlbXBsYXRlIFdyaXRlciBSZXNvdXJjZSc7XG5cbmNvbnN0IHRlbXBsYXRlQXNzZXQgPSBuZXcgQXNzZXQoc3RhY2ssICdUZW1wbGF0ZUFzc2V0Jywge1xuICBwYXRoOiBwYXRoLmpvaW4oX19kaXJuYW1lLCAndGVtcGxhdGUvc2FtcGxlLXRlbXBsYXRlJylcbn0pO1xuXG5jb25zdCB0ZW1wbGF0ZVZhbHVlczogVGVtcGxhdGVWYWx1ZVtdID0gbmV3IEFycmF5KFxuICB7XG4gICAgaWQ6ICdwbGFjZWhvbGRlcicsXG4gICAgdmFsdWU6ICdyZXNvbHZlZF92YWx1ZSdcbiAgfVxuKTtcblxuY3JlYXRlVGVtcGxhdGVXcml0ZXJDdXN0b21SZXNvdXJjZShzdGFjaywgJ1Rlc3QnLCB7XG4gIHRlbXBsYXRlQnVja2V0OiB0ZW1wbGF0ZUFzc2V0LmJ1Y2tldCxcbiAgdGVtcGxhdGVLZXk6IHRlbXBsYXRlQXNzZXQuczNPYmplY3RLZXksXG4gIHRlbXBsYXRlVmFsdWVzXG59KTtcblxuYXBwLnN5bnRoKCk7XG4iXX0=