// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test deployment w/ DLQ explicitly disabled 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5ArtifactHash6AF67D2F": Object {
      "Description": "Artifact hash for asset \\"3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5\\"",
      "Type": "String",
    },
    "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3Bucket86ED5E45": Object {
      "Description": "S3 bucket for asset \\"3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5\\"",
      "Type": "String",
    },
    "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3VersionKey24D05EBA": Object {
      "Description": "S3 key for asset version \\"3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5\\"",
      "Type": "String",
    },
    "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aArtifactHash8AC382E7": Object {
      "Description": "Artifact hash for asset \\"670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206a\\"",
      "Type": "String",
    },
    "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3Bucket340F7629": Object {
      "Description": "S3 bucket for asset \\"670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206a\\"",
      "Type": "String",
    },
    "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3VersionKey2054120F": Object {
      "Description": "S3 key for asset version \\"670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206a\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "lambdasqslambdalambdatosqsLambdaFunction816E0C7E": Object {
      "DependsOn": Array [
        "lambdasqslambdalambdatosqsLambdaFunctionServiceRoleDefaultPolicy415D084C",
        "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            Object {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            Object {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3Bucket340F7629",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3VersionKey2054120F",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3VersionKey2054120F",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SQS_QUEUE_URL": Object {
              "Ref": "lambdasqslambdalambdatosqsqueue49588D68",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdasqslambdalambdatosqsLambdaFunctionServiceRoleDefaultPolicy415D084C": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdasqslambdalambdatosqsLambdaFunctionServiceRoleDefaultPolicy415D084C",
        "Roles": Array [
          Object {
            "Ref": "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdasqslambdalambdatosqsqueue49588D68": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "lambdasqslambdalambdatosqsqueuePolicy2E3032D3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "lambdasqslambdalambdatosqsqueue49588D68",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "lambdasqslambdasqstolambdaLambdaFunction78C2590B": Object {
      "DependsOn": Array [
        "lambdasqslambdasqstolambdaLambdaFunctionServiceRoleDefaultPolicyA5B2DD0D",
        "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            Object {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            Object {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3Bucket86ED5E45",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3VersionKey24D05EBA",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3VersionKey24D05EBA",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdasqslambdasqstolambdaLambdaFunctionServiceRoleDefaultPolicyA5B2DD0D": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdasqslambdasqstolambdaLambdaFunctionServiceRoleDefaultPolicyA5B2DD0D",
        "Roles": Array [
          Object {
            "Ref": "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdasqslambdasqstolambdaLambdaFunctionSqsEventSourcelambdasqslambdalambdatosqsqueue2DD65713E8460277": Object {
      "Properties": Object {
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "lambdasqslambdalambdatosqsqueue49588D68",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "lambdasqslambdasqstolambdaLambdaFunction78C2590B",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
  },
}
`;

exports[`Test deployment w/ DLQ explicitly enabled and w/ MRC override 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5ArtifactHash6AF67D2F": Object {
      "Description": "Artifact hash for asset \\"3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5\\"",
      "Type": "String",
    },
    "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3Bucket86ED5E45": Object {
      "Description": "S3 bucket for asset \\"3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5\\"",
      "Type": "String",
    },
    "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3VersionKey24D05EBA": Object {
      "Description": "S3 key for asset version \\"3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5\\"",
      "Type": "String",
    },
    "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aArtifactHash8AC382E7": Object {
      "Description": "Artifact hash for asset \\"670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206a\\"",
      "Type": "String",
    },
    "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3Bucket340F7629": Object {
      "Description": "S3 bucket for asset \\"670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206a\\"",
      "Type": "String",
    },
    "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3VersionKey2054120F": Object {
      "Description": "S3 key for asset version \\"670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206a\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "lambdasqslambdalambdatosqsLambdaFunction816E0C7E": Object {
      "DependsOn": Array [
        "lambdasqslambdalambdatosqsLambdaFunctionServiceRoleDefaultPolicy415D084C",
        "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            Object {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            Object {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3Bucket340F7629",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3VersionKey2054120F",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3VersionKey2054120F",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SQS_QUEUE_URL": Object {
              "Ref": "lambdasqslambdalambdatosqsqueue49588D68",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdasqslambdalambdatosqsLambdaFunctionServiceRoleDefaultPolicy415D084C": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdasqslambdalambdatosqsLambdaFunctionServiceRoleDefaultPolicy415D084C",
        "Roles": Array [
          Object {
            "Ref": "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "lambdasqslambdalambdatosqsdeadLetterQueuePolicyF51B6C4C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "lambdasqslambdalambdatosqsqueue49588D68": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
        "RedrivePolicy": Object {
          "deadLetterTargetArn": Object {
            "Fn::GetAtt": Array [
              "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E",
              "Arn",
            ],
          },
          "maxReceiveCount": 6,
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "lambdasqslambdalambdatosqsqueuePolicy2E3032D3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "lambdasqslambdalambdatosqsqueue49588D68",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "lambdasqslambdasqstolambdaLambdaFunction78C2590B": Object {
      "DependsOn": Array [
        "lambdasqslambdasqstolambdaLambdaFunctionServiceRoleDefaultPolicyA5B2DD0D",
        "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            Object {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            Object {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3Bucket86ED5E45",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3VersionKey24D05EBA",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3VersionKey24D05EBA",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdasqslambdasqstolambdaLambdaFunctionServiceRoleDefaultPolicyA5B2DD0D": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdasqslambdasqstolambdaLambdaFunctionServiceRoleDefaultPolicyA5B2DD0D",
        "Roles": Array [
          Object {
            "Ref": "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdasqslambdasqstolambdaLambdaFunctionSqsEventSourcelambdasqslambdalambdatosqsqueue2DD65713E8460277": Object {
      "Properties": Object {
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "lambdasqslambdalambdatosqsqueue49588D68",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "lambdasqslambdasqstolambdaLambdaFunction78C2590B",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
  },
}
`;

exports[`Test deployment w/ existing consumer function 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5ArtifactHash6AF67D2F": Object {
      "Description": "Artifact hash for asset \\"3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5\\"",
      "Type": "String",
    },
    "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3Bucket86ED5E45": Object {
      "Description": "S3 bucket for asset \\"3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5\\"",
      "Type": "String",
    },
    "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3VersionKey24D05EBA": Object {
      "Description": "S3 key for asset version \\"3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5\\"",
      "Type": "String",
    },
    "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aArtifactHash8AC382E7": Object {
      "Description": "Artifact hash for asset \\"670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206a\\"",
      "Type": "String",
    },
    "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3Bucket340F7629": Object {
      "Description": "S3 bucket for asset \\"670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206a\\"",
      "Type": "String",
    },
    "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3VersionKey2054120F": Object {
      "Description": "S3 key for asset version \\"670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206a\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "LambdaFunctionBF21E41F": Object {
      "DependsOn": Array [
        "LambdaFunctionServiceRoleDefaultPolicy126C8897",
        "LambdaFunctionServiceRole0C4CDE0B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            Object {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            Object {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3Bucket86ED5E45",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3VersionKey24D05EBA",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3VersionKey24D05EBA",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "FunctionName": "existing-consumer-function",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LambdaFunctionServiceRole0C4CDE0B",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "LambdaFunctionServiceRole0C4CDE0B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaFunctionServiceRoleDefaultPolicy126C8897": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LambdaFunctionServiceRoleDefaultPolicy126C8897",
        "Roles": Array [
          Object {
            "Ref": "LambdaFunctionServiceRole0C4CDE0B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LambdaFunctionSqsEventSourcelambdasqslambdalambdatosqsqueue2DD6571300DB28F4": Object {
      "Properties": Object {
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "lambdasqslambdalambdatosqsqueue49588D68",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "LambdaFunctionBF21E41F",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "lambdasqslambdalambdatosqsLambdaFunction816E0C7E": Object {
      "DependsOn": Array [
        "lambdasqslambdalambdatosqsLambdaFunctionServiceRoleDefaultPolicy415D084C",
        "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            Object {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            Object {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3Bucket340F7629",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3VersionKey2054120F",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3VersionKey2054120F",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SQS_QUEUE_URL": Object {
              "Ref": "lambdasqslambdalambdatosqsqueue49588D68",
            },
          },
        },
        "FunctionName": "deployed-producer-function",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdasqslambdalambdatosqsLambdaFunctionServiceRoleDefaultPolicy415D084C": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdasqslambdalambdatosqsLambdaFunctionServiceRoleDefaultPolicy415D084C",
        "Roles": Array [
          Object {
            "Ref": "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "lambdasqslambdalambdatosqsdeadLetterQueuePolicyF51B6C4C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "lambdasqslambdalambdatosqsqueue49588D68": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
        "RedrivePolicy": Object {
          "deadLetterTargetArn": Object {
            "Fn::GetAtt": Array [
              "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E",
              "Arn",
            ],
          },
          "maxReceiveCount": 15,
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "lambdasqslambdalambdatosqsqueuePolicy2E3032D3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "lambdasqslambdalambdatosqsqueue49588D68",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
  },
}
`;

exports[`Test deployment w/ existing producer function 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5ArtifactHash6AF67D2F": Object {
      "Description": "Artifact hash for asset \\"3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5\\"",
      "Type": "String",
    },
    "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3Bucket86ED5E45": Object {
      "Description": "S3 bucket for asset \\"3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5\\"",
      "Type": "String",
    },
    "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3VersionKey24D05EBA": Object {
      "Description": "S3 key for asset version \\"3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5\\"",
      "Type": "String",
    },
    "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aArtifactHash8AC382E7": Object {
      "Description": "Artifact hash for asset \\"670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206a\\"",
      "Type": "String",
    },
    "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3Bucket340F7629": Object {
      "Description": "S3 bucket for asset \\"670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206a\\"",
      "Type": "String",
    },
    "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3VersionKey2054120F": Object {
      "Description": "S3 key for asset version \\"670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206a\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "LambdaFunctionBF21E41F": Object {
      "DependsOn": Array [
        "LambdaFunctionServiceRoleDefaultPolicy126C8897",
        "LambdaFunctionServiceRole0C4CDE0B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            Object {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            Object {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3Bucket340F7629",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3VersionKey2054120F",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3VersionKey2054120F",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SQS_QUEUE_URL": Object {
              "Ref": "lambdasqslambdalambdatosqsqueue49588D68",
            },
          },
        },
        "FunctionName": "existing-producer-function",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LambdaFunctionServiceRole0C4CDE0B",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "LambdaFunctionServiceRole0C4CDE0B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaFunctionServiceRoleDefaultPolicy126C8897": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LambdaFunctionServiceRoleDefaultPolicy126C8897",
        "Roles": Array [
          Object {
            "Ref": "LambdaFunctionServiceRole0C4CDE0B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "lambdasqslambdalambdatosqsdeadLetterQueuePolicyF51B6C4C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "lambdasqslambdalambdatosqsqueue49588D68": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
        "RedrivePolicy": Object {
          "deadLetterTargetArn": Object {
            "Fn::GetAtt": Array [
              "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E",
              "Arn",
            ],
          },
          "maxReceiveCount": 15,
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "lambdasqslambdalambdatosqsqueuePolicy2E3032D3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "lambdasqslambdalambdatosqsqueue49588D68",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "lambdasqslambdasqstolambdaLambdaFunction78C2590B": Object {
      "DependsOn": Array [
        "lambdasqslambdasqstolambdaLambdaFunctionServiceRoleDefaultPolicyA5B2DD0D",
        "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            Object {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            Object {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3Bucket86ED5E45",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3VersionKey24D05EBA",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3VersionKey24D05EBA",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "FunctionName": "deployed-consumer-function",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdasqslambdasqstolambdaLambdaFunctionServiceRoleDefaultPolicyA5B2DD0D": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdasqslambdasqstolambdaLambdaFunctionServiceRoleDefaultPolicyA5B2DD0D",
        "Roles": Array [
          Object {
            "Ref": "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdasqslambdasqstolambdaLambdaFunctionSqsEventSourcelambdasqslambdalambdatosqsqueue2DD65713E8460277": Object {
      "Properties": Object {
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "lambdasqslambdalambdatosqsqueue49588D68",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "lambdasqslambdasqstolambdaLambdaFunction78C2590B",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
  },
}
`;

exports[`Test deployment w/ existing queue 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5ArtifactHash6AF67D2F": Object {
      "Description": "Artifact hash for asset \\"3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5\\"",
      "Type": "String",
    },
    "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3Bucket86ED5E45": Object {
      "Description": "S3 bucket for asset \\"3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5\\"",
      "Type": "String",
    },
    "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3VersionKey24D05EBA": Object {
      "Description": "S3 key for asset version \\"3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5\\"",
      "Type": "String",
    },
    "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aArtifactHash8AC382E7": Object {
      "Description": "Artifact hash for asset \\"670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206a\\"",
      "Type": "String",
    },
    "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3Bucket340F7629": Object {
      "Description": "S3 bucket for asset \\"670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206a\\"",
      "Type": "String",
    },
    "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3VersionKey2054120F": Object {
      "Description": "S3 key for asset version \\"670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206a\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "existingqueue03D57A53": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
        "QueueName": "existing-queue",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "existingqueuePolicy8BCB024D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "existingqueue03D57A53",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "existingqueue03D57A53",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "existingqueue03D57A53",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "lambdasqslambdalambdatosqsLambdaFunction816E0C7E": Object {
      "DependsOn": Array [
        "lambdasqslambdalambdatosqsLambdaFunctionServiceRoleDefaultPolicy415D084C",
        "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            Object {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            Object {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3Bucket340F7629",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3VersionKey2054120F",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3VersionKey2054120F",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SQS_QUEUE_URL": Object {
              "Ref": "existingqueue03D57A53",
            },
          },
        },
        "FunctionName": "producer-function",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdasqslambdalambdatosqsLambdaFunctionServiceRoleDefaultPolicy415D084C": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "existingqueue03D57A53",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdasqslambdalambdatosqsLambdaFunctionServiceRoleDefaultPolicy415D084C",
        "Roles": Array [
          Object {
            "Ref": "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdasqslambdasqstolambdaLambdaFunction78C2590B": Object {
      "DependsOn": Array [
        "lambdasqslambdasqstolambdaLambdaFunctionServiceRoleDefaultPolicyA5B2DD0D",
        "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            Object {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            Object {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3Bucket86ED5E45",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3VersionKey24D05EBA",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3VersionKey24D05EBA",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "FunctionName": "consumer-function",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdasqslambdasqstolambdaLambdaFunctionServiceRoleDefaultPolicyA5B2DD0D": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "existingqueue03D57A53",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdasqslambdasqstolambdaLambdaFunctionServiceRoleDefaultPolicyA5B2DD0D",
        "Roles": Array [
          Object {
            "Ref": "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdasqslambdasqstolambdaLambdaFunctionSqsEventSourceexistingqueue48457E99": Object {
      "Properties": Object {
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "existingqueue03D57A53",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "lambdasqslambdasqstolambdaLambdaFunction78C2590B",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
  },
}
`;

exports[`Test minimal deployment 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5ArtifactHash6AF67D2F": Object {
      "Description": "Artifact hash for asset \\"3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5\\"",
      "Type": "String",
    },
    "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3Bucket86ED5E45": Object {
      "Description": "S3 bucket for asset \\"3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5\\"",
      "Type": "String",
    },
    "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3VersionKey24D05EBA": Object {
      "Description": "S3 key for asset version \\"3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5\\"",
      "Type": "String",
    },
    "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aArtifactHash8AC382E7": Object {
      "Description": "Artifact hash for asset \\"670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206a\\"",
      "Type": "String",
    },
    "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3Bucket340F7629": Object {
      "Description": "S3 bucket for asset \\"670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206a\\"",
      "Type": "String",
    },
    "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3VersionKey2054120F": Object {
      "Description": "S3 key for asset version \\"670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206a\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "lambdasqslambdalambdatosqsLambdaFunction816E0C7E": Object {
      "DependsOn": Array [
        "lambdasqslambdalambdatosqsLambdaFunctionServiceRoleDefaultPolicy415D084C",
        "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            Object {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            Object {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3Bucket340F7629",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3VersionKey2054120F",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3VersionKey2054120F",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SQS_QUEUE_URL": Object {
              "Ref": "lambdasqslambdalambdatosqsqueue49588D68",
            },
          },
        },
        "FunctionName": "producer-function",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdasqslambdalambdatosqsLambdaFunctionServiceRoleDefaultPolicy415D084C": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdasqslambdalambdatosqsLambdaFunctionServiceRoleDefaultPolicy415D084C",
        "Roles": Array [
          Object {
            "Ref": "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "lambdasqslambdalambdatosqsdeadLetterQueuePolicyF51B6C4C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "lambdasqslambdalambdatosqsqueue49588D68": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
        "RedrivePolicy": Object {
          "deadLetterTargetArn": Object {
            "Fn::GetAtt": Array [
              "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E",
              "Arn",
            ],
          },
          "maxReceiveCount": 15,
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "lambdasqslambdalambdatosqsqueuePolicy2E3032D3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "lambdasqslambdalambdatosqsqueue49588D68",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "lambdasqslambdasqstolambdaLambdaFunction78C2590B": Object {
      "DependsOn": Array [
        "lambdasqslambdasqstolambdaLambdaFunctionServiceRoleDefaultPolicyA5B2DD0D",
        "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            Object {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            Object {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3Bucket86ED5E45",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3VersionKey24D05EBA",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3VersionKey24D05EBA",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "FunctionName": "consumer-function",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdasqslambdasqstolambdaLambdaFunctionServiceRoleDefaultPolicyA5B2DD0D": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdasqslambdasqstolambdaLambdaFunctionServiceRoleDefaultPolicyA5B2DD0D",
        "Roles": Array [
          Object {
            "Ref": "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdasqslambdasqstolambdaLambdaFunctionSqsEventSourcelambdasqslambdalambdatosqsqueue2DD65713E8460277": Object {
      "Properties": Object {
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "lambdasqslambdalambdatosqsqueue49588D68",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "lambdasqslambdasqstolambdaLambdaFunction78C2590B",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
  },
}
`;

exports[`Test overrides for producer and consumer functions 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5ArtifactHash6AF67D2F": Object {
      "Description": "Artifact hash for asset \\"3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5\\"",
      "Type": "String",
    },
    "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3Bucket86ED5E45": Object {
      "Description": "S3 bucket for asset \\"3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5\\"",
      "Type": "String",
    },
    "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3VersionKey24D05EBA": Object {
      "Description": "S3 key for asset version \\"3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5\\"",
      "Type": "String",
    },
    "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aArtifactHash8AC382E7": Object {
      "Description": "Artifact hash for asset \\"670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206a\\"",
      "Type": "String",
    },
    "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3Bucket340F7629": Object {
      "Description": "S3 bucket for asset \\"670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206a\\"",
      "Type": "String",
    },
    "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3VersionKey2054120F": Object {
      "Description": "S3 key for asset version \\"670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206a\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "lambdasqslambdalambdatosqsLambdaFunction816E0C7E": Object {
      "DependsOn": Array [
        "lambdasqslambdalambdatosqsLambdaFunctionServiceRoleDefaultPolicy415D084C",
        "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            Object {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            Object {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3Bucket340F7629",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3VersionKey2054120F",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206aS3VersionKey2054120F",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SQS_QUEUE_URL": Object {
              "Ref": "lambdasqslambdalambdatosqsqueue49588D68",
            },
          },
        },
        "FunctionName": "producer-function",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdasqslambdalambdatosqsLambdaFunctionServiceRoleDefaultPolicy415D084C": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdasqslambdalambdatosqsLambdaFunctionServiceRoleDefaultPolicy415D084C",
        "Roles": Array [
          Object {
            "Ref": "lambdasqslambdalambdatosqsLambdaFunctionServiceRole715E701A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "lambdasqslambdalambdatosqsdeadLetterQueuePolicyF51B6C4C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "lambdasqslambdalambdatosqsqueue49588D68": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
        "RedrivePolicy": Object {
          "deadLetterTargetArn": Object {
            "Fn::GetAtt": Array [
              "lambdasqslambdalambdatosqsdeadLetterQueue46E7302E",
              "Arn",
            ],
          },
          "maxReceiveCount": 15,
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "lambdasqslambdalambdatosqsqueuePolicy2E3032D3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "lambdasqslambdalambdatosqsqueue49588D68",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "lambdasqslambdasqstolambdaLambdaFunction78C2590B": Object {
      "DependsOn": Array [
        "lambdasqslambdasqstolambdaLambdaFunctionServiceRoleDefaultPolicyA5B2DD0D",
        "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            Object {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            Object {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3Bucket86ED5E45",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3VersionKey24D05EBA",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5S3VersionKey24D05EBA",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "FunctionName": "consumer-function",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdasqslambdasqstolambdaLambdaFunctionServiceRoleDefaultPolicyA5B2DD0D": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdasqslambdalambdatosqsqueue49588D68",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdasqslambdasqstolambdaLambdaFunctionServiceRoleDefaultPolicyA5B2DD0D",
        "Roles": Array [
          Object {
            "Ref": "lambdasqslambdasqstolambdaLambdaFunctionServiceRole64336E45",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdasqslambdasqstolambdaLambdaFunctionSqsEventSourcelambdasqslambdalambdatosqsqueue2DD65713E8460277": Object {
      "Properties": Object {
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "lambdasqslambdalambdatosqsqueue49588D68",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "lambdasqslambdasqstolambdaLambdaFunction78C2590B",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
  },
}
`;
