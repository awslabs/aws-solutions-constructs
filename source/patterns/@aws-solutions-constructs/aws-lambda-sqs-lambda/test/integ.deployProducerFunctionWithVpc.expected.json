{
  "Description": "Integration Test for aws-lambda-sqs-lambda",
  "Resources": {
    "testlambdasqslambdatosqsLambdaFunctionServiceRole9A15D8F5": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      }
    },
    "testlambdasqslambdatosqsLambdaFunctionServiceRoleDefaultPolicy672BFE5F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:CreateNetworkInterface",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DeleteNetworkInterface",
                "ec2:AssignPrivateIpAddresses",
                "ec2:UnassignPrivateIpAddresses"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "testlambdasqslambdatosqsqueue5A401298",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "testlambdasqslambdatosqsLambdaFunctionServiceRoleDefaultPolicy672BFE5F",
        "Roles": [
          {
            "Ref": "testlambdasqslambdatosqsLambdaFunctionServiceRole9A15D8F5"
          }
        ]
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "testlambdasqslambdatosqsReplaceDefaultSecurityGroupsecuritygroupD9549651": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "deployProducerFunctionWithVpc/test-lambda-sqs/lambda-to-sqs/ReplaceDefaultSecurityGroup-security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "testlambdasqsVpc85322AF3"
        }
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W5",
              "reason": "Egress of 0.0.0.0/0 is default and generally considered OK"
            },
            {
              "id": "W40",
              "reason": "Egress IPProtocol of -1 is default and generally considered OK"
            }
          ]
        }
      }
    },
    "testlambdasqslambdatosqsLambdaFunction0973C5A7": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "670cd3ad46e9feac5a92bbf55746e52324459dac0ea00dd6a214a7a8ce05206a.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "testlambdasqslambdatosqsLambdaFunctionServiceRole9A15D8F5",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SQS_QUEUE_URL": {
              "Ref": "testlambdasqslambdatosqsqueue5A401298"
            }
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs10.x",
        "TracingConfig": {
          "Mode": "Active"
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "testlambdasqslambdatosqsReplaceDefaultSecurityGroupsecuritygroupD9549651",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Ref": "testlambdasqsVpcisolatedSubnet1Subnet75F315F8"
            },
            {
              "Ref": "testlambdasqsVpcisolatedSubnet2Subnet320D7431"
            },
            {
              "Ref": "testlambdasqsVpcisolatedSubnet3Subnet34633573"
            }
          ]
        }
      },
      "DependsOn": [
        "testlambdasqslambdatosqsLambdaFunctionServiceRoleDefaultPolicy672BFE5F",
        "testlambdasqslambdatosqsLambdaFunctionServiceRole9A15D8F5"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "testlambdasqslambdatosqsdeadLetterQueue0FF744BB": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "testlambdasqslambdatosqsdeadLetterQueuePolicy4A3E49B3": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": {
                "Fn::GetAtt": [
                  "testlambdasqslambdatosqsdeadLetterQueue0FF744BB",
                  "Arn"
                ]
              },
              "Sid": "QueueOwnerOnlyAccess"
            },
            {
              "Action": "SQS:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "testlambdasqslambdatosqsdeadLetterQueue0FF744BB",
                  "Arn"
                ]
              },
              "Sid": "HttpsOnly"
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "testlambdasqslambdatosqsdeadLetterQueue0FF744BB"
          }
        ]
      }
    },
    "testlambdasqslambdatosqsqueue5A401298": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "testlambdasqslambdatosqsdeadLetterQueue0FF744BB",
              "Arn"
            ]
          },
          "maxReceiveCount": 15
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "testlambdasqslambdatosqsqueuePolicyEF9F5463": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": {
                "Fn::GetAtt": [
                  "testlambdasqslambdatosqsqueue5A401298",
                  "Arn"
                ]
              },
              "Sid": "QueueOwnerOnlyAccess"
            },
            {
              "Action": "SQS:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "testlambdasqslambdatosqsqueue5A401298",
                  "Arn"
                ]
              },
              "Sid": "HttpsOnly"
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "testlambdasqslambdatosqsqueue5A401298"
          }
        ]
      }
    },
    "testlambdasqsVpc85322AF3": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "deployProducerFunctionWithVpc/test-lambda-sqs/Vpc"
          }
        ]
      }
    },
    "testlambdasqsVpcisolatedSubnet1Subnet75F315F8": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "testlambdasqsVpc85322AF3"
        },
        "AvailabilityZone": "test-region-1a",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "isolated"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "deployProducerFunctionWithVpc/test-lambda-sqs/Vpc/isolatedSubnet1"
          }
        ]
      }
    },
    "testlambdasqsVpcisolatedSubnet1RouteTable9070A207": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "testlambdasqsVpc85322AF3"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "deployProducerFunctionWithVpc/test-lambda-sqs/Vpc/isolatedSubnet1"
          }
        ]
      }
    },
    "testlambdasqsVpcisolatedSubnet1RouteTableAssociation270A37E8": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "testlambdasqsVpcisolatedSubnet1RouteTable9070A207"
        },
        "SubnetId": {
          "Ref": "testlambdasqsVpcisolatedSubnet1Subnet75F315F8"
        }
      }
    },
    "testlambdasqsVpcisolatedSubnet2Subnet320D7431": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "testlambdasqsVpc85322AF3"
        },
        "AvailabilityZone": "test-region-1b",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "isolated"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "deployProducerFunctionWithVpc/test-lambda-sqs/Vpc/isolatedSubnet2"
          }
        ]
      }
    },
    "testlambdasqsVpcisolatedSubnet2RouteTable1C5B9E86": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "testlambdasqsVpc85322AF3"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "deployProducerFunctionWithVpc/test-lambda-sqs/Vpc/isolatedSubnet2"
          }
        ]
      }
    },
    "testlambdasqsVpcisolatedSubnet2RouteTableAssociation723A8A06": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "testlambdasqsVpcisolatedSubnet2RouteTable1C5B9E86"
        },
        "SubnetId": {
          "Ref": "testlambdasqsVpcisolatedSubnet2Subnet320D7431"
        }
      }
    },
    "testlambdasqsVpcisolatedSubnet3Subnet34633573": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "testlambdasqsVpc85322AF3"
        },
        "AvailabilityZone": "test-region-1c",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "isolated"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "deployProducerFunctionWithVpc/test-lambda-sqs/Vpc/isolatedSubnet3"
          }
        ]
      }
    },
    "testlambdasqsVpcisolatedSubnet3RouteTable7AB1A8FF": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "testlambdasqsVpc85322AF3"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "deployProducerFunctionWithVpc/test-lambda-sqs/Vpc/isolatedSubnet3"
          }
        ]
      }
    },
    "testlambdasqsVpcisolatedSubnet3RouteTableAssociation41766676": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "testlambdasqsVpcisolatedSubnet3RouteTable7AB1A8FF"
        },
        "SubnetId": {
          "Ref": "testlambdasqsVpcisolatedSubnet3Subnet34633573"
        }
      }
    },
    "testlambdasqsVpcFlowLogIAMRole79FE4957": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "vpc-flow-logs.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "deployProducerFunctionWithVpc/test-lambda-sqs/Vpc"
          }
        ]
      }
    },
    "testlambdasqsVpcFlowLogIAMRoleDefaultPolicy2856C7F6": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "testlambdasqsVpcFlowLogLogGroup5E27ADE6",
                  "Arn"
                ]
              }
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "testlambdasqsVpcFlowLogIAMRole79FE4957",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "testlambdasqsVpcFlowLogIAMRoleDefaultPolicy2856C7F6",
        "Roles": [
          {
            "Ref": "testlambdasqsVpcFlowLogIAMRole79FE4957"
          }
        ]
      }
    },
    "testlambdasqsVpcFlowLogLogGroup5E27ADE6": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 731
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "testlambdasqsVpcFlowLogEECF2763": {
      "Type": "AWS::EC2::FlowLog",
      "Properties": {
        "ResourceId": {
          "Ref": "testlambdasqsVpc85322AF3"
        },
        "ResourceType": "VPC",
        "TrafficType": "ALL",
        "DeliverLogsPermissionArn": {
          "Fn::GetAtt": [
            "testlambdasqsVpcFlowLogIAMRole79FE4957",
            "Arn"
          ]
        },
        "LogDestinationType": "cloud-watch-logs",
        "LogGroupName": {
          "Ref": "testlambdasqsVpcFlowLogLogGroup5E27ADE6"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "deployProducerFunctionWithVpc/test-lambda-sqs/Vpc"
          }
        ]
      }
    },
    "testlambdasqsVpcSQS13B88BE1": {
      "Type": "AWS::EC2::VPCEndpoint",
      "Properties": {
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region"
              },
              ".sqs"
            ]
          ]
        },
        "VpcId": {
          "Ref": "testlambdasqsVpc85322AF3"
        },
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "testlambdasqstestlambdasqsSQSsecuritygroupBDBA458D",
              "GroupId"
            ]
          }
        ],
        "SubnetIds": [
          {
            "Ref": "testlambdasqsVpcisolatedSubnet1Subnet75F315F8"
          },
          {
            "Ref": "testlambdasqsVpcisolatedSubnet2Subnet320D7431"
          },
          {
            "Ref": "testlambdasqsVpcisolatedSubnet3Subnet34633573"
          }
        ],
        "VpcEndpointType": "Interface"
      }
    },
    "testlambdasqstestlambdasqsSQSsecuritygroupBDBA458D": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "deployProducerFunctionWithVpc/test-lambda-sqs/test-lambda-sqs-SQS-security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "testlambdasqsVpc85322AF3",
                "CidrBlock"
              ]
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "testlambdasqsVpc85322AF3",
                      "CidrBlock"
                    ]
                  },
                  ":443"
                ]
              ]
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443
          }
        ],
        "VpcId": {
          "Ref": "testlambdasqsVpc85322AF3"
        }
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W5",
              "reason": "Egress of 0.0.0.0/0 is default and generally considered OK"
            },
            {
              "id": "W40",
              "reason": "Egress IPProtocol of -1 is default and generally considered OK"
            }
          ]
        }
      }
    },
    "testlambdasqssqstolambdaLambdaFunctionServiceRoleB914400A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      }
    },
    "testlambdasqssqstolambdaLambdaFunctionServiceRoleDefaultPolicy9D533CC5": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "testlambdasqslambdatosqsqueue5A401298",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "testlambdasqssqstolambdaLambdaFunctionServiceRoleDefaultPolicy9D533CC5",
        "Roles": [
          {
            "Ref": "testlambdasqssqstolambdaLambdaFunctionServiceRoleB914400A"
          }
        ]
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "testlambdasqssqstolambdaLambdaFunctionDE6481E6": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "3bf31d2e69ca582971f645cca0be83ead5dfbc80bd36b3e487100422c68243a5.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "testlambdasqssqstolambdaLambdaFunctionServiceRoleB914400A",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs10.x",
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "testlambdasqssqstolambdaLambdaFunctionServiceRoleDefaultPolicy9D533CC5",
        "testlambdasqssqstolambdaLambdaFunctionServiceRoleB914400A"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "testlambdasqssqstolambdaLambdaFunctionSqsEventSourcedeployProducerFunctionWithVpctestlambdasqslambdatosqsqueueA1382C56CEF2BFAB": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "FunctionName": {
          "Ref": "testlambdasqssqstolambdaLambdaFunctionDE6481E6"
        },
        "EventSourceArn": {
          "Fn::GetAtt": [
            "testlambdasqslambdatosqsqueue5A401298",
            "Arn"
          ]
        }
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}