// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test for default Params snapshot match 1`] = `
Object {
  "Outputs": Object {
    "testapigatewayiotdefaultsnapshotRestApiEndpointE19F3C9E": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "testapigatewayiotdefaultsnapshotRestApiDeploymentStageprodBA2A717D",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Resources": Object {
    "testapigatewayiotdefaultsnapshotApiAccessLogGroup464370B3": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "testapigatewayiotdefaultsnapshotLambdaRestApiAccount0E9A4CEA": Object {
      "DependsOn": Array [
        "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "testapigatewayiotdefaultsnapshotLambdaRestApiCloudWatchRole0E997D14",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "testapigatewayiotdefaultsnapshotLambdaRestApiCloudWatchRole0E997D14": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testapigatewayiotdefaultsnapshotRestApiDC9777C4": Object {
      "Properties": Object {
        "BinaryMediaTypes": Array [
          "application/octet-stream",
        ],
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "Name": "RestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "testapigatewayiotdefaultsnapshotRestApiDeployment8CB27899537da871680d57f38fb52e034f331e99": Object {
      "DependsOn": Array [
        "testapigatewayiotdefaultsnapshotawsapigatewayiotreqval7E4DADB3",
        "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6topiclevel7POST12FA075B",
        "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6topiclevel7A21577AD",
        "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6POST1A2D23AC",
        "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6125BE959",
        "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5POSTEB725944",
        "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel569D7E060",
        "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4POST5DB564D1",
        "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4A9FC5FEA",
        "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3POST7F8BDEE1",
        "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel37F5D8647",
        "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2POSTA7299416",
        "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel205C991F5",
        "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1POSTCE5FA032",
        "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel14A872FC7",
        "testapigatewayiotdefaultsnapshotRestApimessageCFD398D3",
        "testapigatewayiotdefaultsnapshotRestApishadowthingNameshadowNamePOSTEE4BA92F",
        "testapigatewayiotdefaultsnapshotRestApishadowthingNameshadowNameB5DB1FB8",
        "testapigatewayiotdefaultsnapshotRestApishadowthingNamePOSTF30755E9",
        "testapigatewayiotdefaultsnapshotRestApishadowthingNameEB5A9762",
        "testapigatewayiotdefaultsnapshotRestApishadowEE57C23E",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "testapigatewayiotdefaultsnapshotRestApiDeploymentStageprodBA2A717D": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultsnapshotApiAccessLogGroup464370B3",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"user\\":\\"$context.identity.user\\",\\"caller\\":\\"$context.identity.caller\\",\\"requestTime\\":\\"$context.requestTime\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}",
        },
        "DeploymentId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDeployment8CB27899537da871680d57f38fb52e034f331e99",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "testapigatewayiotdefaultsnapshotRestApiUsagePlan2FB8C320": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
            },
            "Stage": Object {
              "Ref": "testapigatewayiotdefaultsnapshotRestApiDeploymentStageprodBA2A717D",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "testapigatewayiotdefaultsnapshotRestApimessageCFD398D3": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
            "RootResourceId",
          ],
        },
        "PathPart": "message",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel14A872FC7": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApimessageCFD398D3",
        },
        "PathPart": "{topic-level-1}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1POSTCE5FA032": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultsnapshotapigatewayiotrole117B355A",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotawsapigatewayiotreqval7E4DADB3",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel14A872FC7",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel205C991F5": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel14A872FC7",
        },
        "PathPart": "{topic-level-2}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2POSTA7299416": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultsnapshotapigatewayiotrole117B355A",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotawsapigatewayiotreqval7E4DADB3",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel205C991F5",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel37F5D8647": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel205C991F5",
        },
        "PathPart": "{topic-level-3}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3POST7F8BDEE1": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultsnapshotapigatewayiotrole117B355A",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
            "integration.request.path.topic-level-3": "method.request.path.topic-level-3",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}/{topic-level-3}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
          "method.request.path.topic-level-3": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotawsapigatewayiotreqval7E4DADB3",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel37F5D8647",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4A9FC5FEA": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel37F5D8647",
        },
        "PathPart": "{topic-level-4}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4POST5DB564D1": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultsnapshotapigatewayiotrole117B355A",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
            "integration.request.path.topic-level-3": "method.request.path.topic-level-3",
            "integration.request.path.topic-level-4": "method.request.path.topic-level-4",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}/{topic-level-3}/{topic-level-4}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
          "method.request.path.topic-level-3": true,
          "method.request.path.topic-level-4": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotawsapigatewayiotreqval7E4DADB3",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4A9FC5FEA",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel569D7E060": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4A9FC5FEA",
        },
        "PathPart": "{topic-level-5}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5POSTEB725944": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultsnapshotapigatewayiotrole117B355A",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
            "integration.request.path.topic-level-3": "method.request.path.topic-level-3",
            "integration.request.path.topic-level-4": "method.request.path.topic-level-4",
            "integration.request.path.topic-level-5": "method.request.path.topic-level-5",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}/{topic-level-3}/{topic-level-4}/{topic-level-5}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
          "method.request.path.topic-level-3": true,
          "method.request.path.topic-level-4": true,
          "method.request.path.topic-level-5": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotawsapigatewayiotreqval7E4DADB3",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel569D7E060",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6125BE959": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel569D7E060",
        },
        "PathPart": "{topic-level-6}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6POST1A2D23AC": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultsnapshotapigatewayiotrole117B355A",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
            "integration.request.path.topic-level-3": "method.request.path.topic-level-3",
            "integration.request.path.topic-level-4": "method.request.path.topic-level-4",
            "integration.request.path.topic-level-5": "method.request.path.topic-level-5",
            "integration.request.path.topic-level-6": "method.request.path.topic-level-6",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}/{topic-level-3}/{topic-level-4}/{topic-level-5}/{topic-level-6}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
          "method.request.path.topic-level-3": true,
          "method.request.path.topic-level-4": true,
          "method.request.path.topic-level-5": true,
          "method.request.path.topic-level-6": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotawsapigatewayiotreqval7E4DADB3",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6125BE959",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6topiclevel7A21577AD": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6125BE959",
        },
        "PathPart": "{topic-level-7}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6topiclevel7POST12FA075B": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultsnapshotapigatewayiotrole117B355A",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
            "integration.request.path.topic-level-3": "method.request.path.topic-level-3",
            "integration.request.path.topic-level-4": "method.request.path.topic-level-4",
            "integration.request.path.topic-level-5": "method.request.path.topic-level-5",
            "integration.request.path.topic-level-6": "method.request.path.topic-level-6",
            "integration.request.path.topic-level-7": "method.request.path.topic-level-7",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}/{topic-level-3}/{topic-level-4}/{topic-level-5}/{topic-level-6}/{topic-level-7}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
          "method.request.path.topic-level-3": true,
          "method.request.path.topic-level-4": true,
          "method.request.path.topic-level-5": true,
          "method.request.path.topic-level-6": true,
          "method.request.path.topic-level-7": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotawsapigatewayiotreqval7E4DADB3",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6topiclevel7A21577AD",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultsnapshotRestApishadowEE57C23E": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
            "RootResourceId",
          ],
        },
        "PathPart": "shadow",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultsnapshotRestApishadowthingNameEB5A9762": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApishadowEE57C23E",
        },
        "PathPart": "{thingName}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultsnapshotRestApishadowthingNamePOSTF30755E9": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultsnapshotapigatewayiotrole117B355A",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.thingName": "method.request.path.thingName",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/things/{thingName}/shadow",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.thingName": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotawsapigatewayiotreqval7E4DADB3",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApishadowthingNameEB5A9762",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultsnapshotRestApishadowthingNameshadowNameB5DB1FB8": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApishadowthingNameEB5A9762",
        },
        "PathPart": "{shadowName}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultsnapshotRestApishadowthingNameshadowNamePOSTEE4BA92F": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultsnapshotapigatewayiotrole117B355A",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.shadowName": "method.request.path.shadowName",
            "integration.request.path.thingName": "method.request.path.thingName",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/$aws/things/{thingName}/shadow/name/{shadowName}/update",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.shadowName": true,
          "method.request.path.thingName": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotawsapigatewayiotreqval7E4DADB3",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApishadowthingNameshadowNameB5DB1FB8",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultsnapshotapigatewayiotrole117B355A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "iot:UpdateThingShadow",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:iot:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":thing/*",
                      ],
                    ],
                  },
                },
                Object {
                  "Action": "iot:Publish",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:iot:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":topic/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "awsapigatewayiotpolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testapigatewayiotdefaultsnapshotawsapigatewayiotreqval7E4DADB3": Object {
      "Properties": Object {
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultsnapshotRestApiDC9777C4",
        },
        "ValidateRequestBody": false,
        "ValidateRequestParameters": true,
      },
      "Type": "AWS::ApiGateway::RequestValidator",
    },
  },
}
`;

exports[`Test for multiple constructs usage 1`] = `
Object {
  "Outputs": Object {
    "testapigatewayiotdefaultparams1RestApiEndpointCB332132": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "testapigatewayiotdefaultparams1RestApiDeploymentStageprod34C92BCF",
            },
            "/",
          ],
        ],
      },
    },
    "testapigatewayiotdefaultparamsRestApiEndpoint5FF11751": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "testapigatewayiotdefaultparamsRestApiDeploymentStageprodFB3B03DE",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Resources": Object {
    "testapigatewayiotdefaultparams1ApiAccessLogGroup417958B5": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "testapigatewayiotdefaultparams1LambdaRestApiAccount1310B62A": Object {
      "DependsOn": Array [
        "testapigatewayiotdefaultparams1RestApi8E1D271C",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "testapigatewayiotdefaultparams1LambdaRestApiCloudWatchRole967CACD1",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "testapigatewayiotdefaultparams1LambdaRestApiCloudWatchRole967CACD1": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testapigatewayiotdefaultparams1RestApi8E1D271C": Object {
      "Properties": Object {
        "BinaryMediaTypes": Array [
          "application/octet-stream",
        ],
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "Name": "RestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "testapigatewayiotdefaultparams1RestApiDeploymentA41826E842fdfa87f4c5fd8d102b65b5d57315bf": Object {
      "DependsOn": Array [
        "testapigatewayiotdefaultparams1awsapigatewayiotreqval77A8A6B3",
        "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6topiclevel7POSTEA8D5DCC",
        "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6topiclevel798FBBC25",
        "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6POSTBA2DBBA3",
        "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6DF081F2E",
        "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5POSTB3407233",
        "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5F3111EBE",
        "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4POST75E1FEE4",
        "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4CE9742F2",
        "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3POSTD197CD77",
        "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel34413B12A",
        "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2POSTBA40480B",
        "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel252A12E9B",
        "testapigatewayiotdefaultparams1RestApimessagetopiclevel1POST6D2C1AA5",
        "testapigatewayiotdefaultparams1RestApimessagetopiclevel1FE4F6AC8",
        "testapigatewayiotdefaultparams1RestApimessage1DFD47AD",
        "testapigatewayiotdefaultparams1RestApishadowthingNameshadowNamePOST2730C619",
        "testapigatewayiotdefaultparams1RestApishadowthingNameshadowName9B6DFC56",
        "testapigatewayiotdefaultparams1RestApishadowthingNamePOST914429F7",
        "testapigatewayiotdefaultparams1RestApishadowthingName3F998396",
        "testapigatewayiotdefaultparams1RestApishadow32BEE5C4",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "testapigatewayiotdefaultparams1RestApiDeploymentStageprod34C92BCF": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultparams1ApiAccessLogGroup417958B5",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"user\\":\\"$context.identity.user\\",\\"caller\\":\\"$context.identity.caller\\",\\"requestTime\\":\\"$context.requestTime\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}",
        },
        "DeploymentId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApiDeploymentA41826E842fdfa87f4c5fd8d102b65b5d57315bf",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "testapigatewayiotdefaultparams1RestApiUsagePlan1144E9EE": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
            },
            "Stage": Object {
              "Ref": "testapigatewayiotdefaultparams1RestApiDeploymentStageprod34C92BCF",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "testapigatewayiotdefaultparams1RestApimessage1DFD47AD": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "testapigatewayiotdefaultparams1RestApi8E1D271C",
            "RootResourceId",
          ],
        },
        "PathPart": "message",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultparams1RestApimessagetopiclevel1FE4F6AC8": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApimessage1DFD47AD",
        },
        "PathPart": "{topic-level-1}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultparams1RestApimessagetopiclevel1POST6D2C1AA5": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultparams1apigatewayiotrole098D3AB5",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultparams1awsapigatewayiotreqval77A8A6B3",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApimessagetopiclevel1FE4F6AC8",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel252A12E9B": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApimessagetopiclevel1FE4F6AC8",
        },
        "PathPart": "{topic-level-2}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2POSTBA40480B": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultparams1apigatewayiotrole098D3AB5",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultparams1awsapigatewayiotreqval77A8A6B3",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel252A12E9B",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel34413B12A": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel252A12E9B",
        },
        "PathPart": "{topic-level-3}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3POSTD197CD77": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultparams1apigatewayiotrole098D3AB5",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
            "integration.request.path.topic-level-3": "method.request.path.topic-level-3",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}/{topic-level-3}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
          "method.request.path.topic-level-3": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultparams1awsapigatewayiotreqval77A8A6B3",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel34413B12A",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4CE9742F2": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel34413B12A",
        },
        "PathPart": "{topic-level-4}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4POST75E1FEE4": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultparams1apigatewayiotrole098D3AB5",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
            "integration.request.path.topic-level-3": "method.request.path.topic-level-3",
            "integration.request.path.topic-level-4": "method.request.path.topic-level-4",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}/{topic-level-3}/{topic-level-4}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
          "method.request.path.topic-level-3": true,
          "method.request.path.topic-level-4": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultparams1awsapigatewayiotreqval77A8A6B3",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4CE9742F2",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5F3111EBE": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4CE9742F2",
        },
        "PathPart": "{topic-level-5}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5POSTB3407233": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultparams1apigatewayiotrole098D3AB5",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
            "integration.request.path.topic-level-3": "method.request.path.topic-level-3",
            "integration.request.path.topic-level-4": "method.request.path.topic-level-4",
            "integration.request.path.topic-level-5": "method.request.path.topic-level-5",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}/{topic-level-3}/{topic-level-4}/{topic-level-5}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
          "method.request.path.topic-level-3": true,
          "method.request.path.topic-level-4": true,
          "method.request.path.topic-level-5": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultparams1awsapigatewayiotreqval77A8A6B3",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5F3111EBE",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6DF081F2E": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5F3111EBE",
        },
        "PathPart": "{topic-level-6}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6POSTBA2DBBA3": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultparams1apigatewayiotrole098D3AB5",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
            "integration.request.path.topic-level-3": "method.request.path.topic-level-3",
            "integration.request.path.topic-level-4": "method.request.path.topic-level-4",
            "integration.request.path.topic-level-5": "method.request.path.topic-level-5",
            "integration.request.path.topic-level-6": "method.request.path.topic-level-6",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}/{topic-level-3}/{topic-level-4}/{topic-level-5}/{topic-level-6}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
          "method.request.path.topic-level-3": true,
          "method.request.path.topic-level-4": true,
          "method.request.path.topic-level-5": true,
          "method.request.path.topic-level-6": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultparams1awsapigatewayiotreqval77A8A6B3",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6DF081F2E",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6topiclevel798FBBC25": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6DF081F2E",
        },
        "PathPart": "{topic-level-7}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6topiclevel7POSTEA8D5DCC": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultparams1apigatewayiotrole098D3AB5",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
            "integration.request.path.topic-level-3": "method.request.path.topic-level-3",
            "integration.request.path.topic-level-4": "method.request.path.topic-level-4",
            "integration.request.path.topic-level-5": "method.request.path.topic-level-5",
            "integration.request.path.topic-level-6": "method.request.path.topic-level-6",
            "integration.request.path.topic-level-7": "method.request.path.topic-level-7",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}/{topic-level-3}/{topic-level-4}/{topic-level-5}/{topic-level-6}/{topic-level-7}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
          "method.request.path.topic-level-3": true,
          "method.request.path.topic-level-4": true,
          "method.request.path.topic-level-5": true,
          "method.request.path.topic-level-6": true,
          "method.request.path.topic-level-7": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultparams1awsapigatewayiotreqval77A8A6B3",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6topiclevel798FBBC25",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultparams1RestApishadow32BEE5C4": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "testapigatewayiotdefaultparams1RestApi8E1D271C",
            "RootResourceId",
          ],
        },
        "PathPart": "shadow",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultparams1RestApishadowthingName3F998396": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApishadow32BEE5C4",
        },
        "PathPart": "{thingName}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultparams1RestApishadowthingNamePOST914429F7": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultparams1apigatewayiotrole098D3AB5",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.thingName": "method.request.path.thingName",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/things/{thingName}/shadow",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.thingName": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultparams1awsapigatewayiotreqval77A8A6B3",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApishadowthingName3F998396",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultparams1RestApishadowthingNameshadowName9B6DFC56": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApishadowthingName3F998396",
        },
        "PathPart": "{shadowName}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultparams1RestApishadowthingNameshadowNamePOST2730C619": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultparams1apigatewayiotrole098D3AB5",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.shadowName": "method.request.path.shadowName",
            "integration.request.path.thingName": "method.request.path.thingName",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/$aws/things/{thingName}/shadow/name/{shadowName}/update",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.shadowName": true,
          "method.request.path.thingName": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultparams1awsapigatewayiotreqval77A8A6B3",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApishadowthingNameshadowName9B6DFC56",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultparams1apigatewayiotrole098D3AB5": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "iot:UpdateThingShadow",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:iot:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":thing/*",
                      ],
                    ],
                  },
                },
                Object {
                  "Action": "iot:Publish",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:iot:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":topic/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "awsapigatewayiotpolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testapigatewayiotdefaultparams1awsapigatewayiotreqval77A8A6B3": Object {
      "Properties": Object {
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparams1RestApi8E1D271C",
        },
        "ValidateRequestBody": false,
        "ValidateRequestParameters": true,
      },
      "Type": "AWS::ApiGateway::RequestValidator",
    },
    "testapigatewayiotdefaultparamsApiAccessLogGroup6D42A60F": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "testapigatewayiotdefaultparamsLambdaRestApiAccount4FD79541": Object {
      "DependsOn": Array [
        "testapigatewayiotdefaultparamsRestApi60BDAFC6",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "testapigatewayiotdefaultparamsLambdaRestApiCloudWatchRole46E28386",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "testapigatewayiotdefaultparamsLambdaRestApiCloudWatchRole46E28386": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testapigatewayiotdefaultparamsRestApi60BDAFC6": Object {
      "Properties": Object {
        "BinaryMediaTypes": Array [
          "application/octet-stream",
        ],
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "Name": "RestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "testapigatewayiotdefaultparamsRestApiDeployment6F0A726491c3cebaebe16e6aef9f0e18c9bad829": Object {
      "DependsOn": Array [
        "testapigatewayiotdefaultparamsawsapigatewayiotreqval9B598042",
        "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6topiclevel7POST9DC33B4A",
        "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6topiclevel722AC8ACD",
        "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6POST84605425",
        "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6169DC584",
        "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5POSTD665540A",
        "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5CA89C513",
        "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4POST63898F3D",
        "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel451B45682",
        "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3POST1515A0DE",
        "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel30FD0D51F",
        "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2POSTB6132F2F",
        "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel26A08E917",
        "testapigatewayiotdefaultparamsRestApimessagetopiclevel1POST97F7F22F",
        "testapigatewayiotdefaultparamsRestApimessagetopiclevel1BB89F7DA",
        "testapigatewayiotdefaultparamsRestApimessageB517A3BA",
        "testapigatewayiotdefaultparamsRestApishadowthingNameshadowNamePOST8938C0DC",
        "testapigatewayiotdefaultparamsRestApishadowthingNameshadowNameB680902D",
        "testapigatewayiotdefaultparamsRestApishadowthingNamePOST10BEBA62",
        "testapigatewayiotdefaultparamsRestApishadowthingNameA1B3998C",
        "testapigatewayiotdefaultparamsRestApishadow5B41C79D",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "testapigatewayiotdefaultparamsRestApiDeploymentStageprodFB3B03DE": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultparamsApiAccessLogGroup6D42A60F",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"user\\":\\"$context.identity.user\\",\\"caller\\":\\"$context.identity.caller\\",\\"requestTime\\":\\"$context.requestTime\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}",
        },
        "DeploymentId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApiDeployment6F0A726491c3cebaebe16e6aef9f0e18c9bad829",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "testapigatewayiotdefaultparamsRestApiUsagePlan0513E4B1": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
            },
            "Stage": Object {
              "Ref": "testapigatewayiotdefaultparamsRestApiDeploymentStageprodFB3B03DE",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "testapigatewayiotdefaultparamsRestApimessageB517A3BA": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "testapigatewayiotdefaultparamsRestApi60BDAFC6",
            "RootResourceId",
          ],
        },
        "PathPart": "message",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultparamsRestApimessagetopiclevel1BB89F7DA": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApimessageB517A3BA",
        },
        "PathPart": "{topic-level-1}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultparamsRestApimessagetopiclevel1POST97F7F22F": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultparamsapigatewayiotroleD0FFF789",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultparamsawsapigatewayiotreqval9B598042",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApimessagetopiclevel1BB89F7DA",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel26A08E917": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApimessagetopiclevel1BB89F7DA",
        },
        "PathPart": "{topic-level-2}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2POSTB6132F2F": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultparamsapigatewayiotroleD0FFF789",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultparamsawsapigatewayiotreqval9B598042",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel26A08E917",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel30FD0D51F": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel26A08E917",
        },
        "PathPart": "{topic-level-3}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3POST1515A0DE": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultparamsapigatewayiotroleD0FFF789",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
            "integration.request.path.topic-level-3": "method.request.path.topic-level-3",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}/{topic-level-3}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
          "method.request.path.topic-level-3": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultparamsawsapigatewayiotreqval9B598042",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel30FD0D51F",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel451B45682": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel30FD0D51F",
        },
        "PathPart": "{topic-level-4}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4POST63898F3D": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultparamsapigatewayiotroleD0FFF789",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
            "integration.request.path.topic-level-3": "method.request.path.topic-level-3",
            "integration.request.path.topic-level-4": "method.request.path.topic-level-4",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}/{topic-level-3}/{topic-level-4}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
          "method.request.path.topic-level-3": true,
          "method.request.path.topic-level-4": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultparamsawsapigatewayiotreqval9B598042",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel451B45682",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5CA89C513": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel451B45682",
        },
        "PathPart": "{topic-level-5}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5POSTD665540A": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultparamsapigatewayiotroleD0FFF789",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
            "integration.request.path.topic-level-3": "method.request.path.topic-level-3",
            "integration.request.path.topic-level-4": "method.request.path.topic-level-4",
            "integration.request.path.topic-level-5": "method.request.path.topic-level-5",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}/{topic-level-3}/{topic-level-4}/{topic-level-5}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
          "method.request.path.topic-level-3": true,
          "method.request.path.topic-level-4": true,
          "method.request.path.topic-level-5": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultparamsawsapigatewayiotreqval9B598042",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5CA89C513",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6169DC584": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5CA89C513",
        },
        "PathPart": "{topic-level-6}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6POST84605425": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultparamsapigatewayiotroleD0FFF789",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
            "integration.request.path.topic-level-3": "method.request.path.topic-level-3",
            "integration.request.path.topic-level-4": "method.request.path.topic-level-4",
            "integration.request.path.topic-level-5": "method.request.path.topic-level-5",
            "integration.request.path.topic-level-6": "method.request.path.topic-level-6",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}/{topic-level-3}/{topic-level-4}/{topic-level-5}/{topic-level-6}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
          "method.request.path.topic-level-3": true,
          "method.request.path.topic-level-4": true,
          "method.request.path.topic-level-5": true,
          "method.request.path.topic-level-6": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultparamsawsapigatewayiotreqval9B598042",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6169DC584",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6topiclevel722AC8ACD": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6169DC584",
        },
        "PathPart": "{topic-level-7}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6topiclevel7POST9DC33B4A": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultparamsapigatewayiotroleD0FFF789",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
            "integration.request.path.topic-level-3": "method.request.path.topic-level-3",
            "integration.request.path.topic-level-4": "method.request.path.topic-level-4",
            "integration.request.path.topic-level-5": "method.request.path.topic-level-5",
            "integration.request.path.topic-level-6": "method.request.path.topic-level-6",
            "integration.request.path.topic-level-7": "method.request.path.topic-level-7",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}/{topic-level-3}/{topic-level-4}/{topic-level-5}/{topic-level-6}/{topic-level-7}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
          "method.request.path.topic-level-3": true,
          "method.request.path.topic-level-4": true,
          "method.request.path.topic-level-5": true,
          "method.request.path.topic-level-6": true,
          "method.request.path.topic-level-7": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultparamsawsapigatewayiotreqval9B598042",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6topiclevel722AC8ACD",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultparamsRestApishadow5B41C79D": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "testapigatewayiotdefaultparamsRestApi60BDAFC6",
            "RootResourceId",
          ],
        },
        "PathPart": "shadow",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultparamsRestApishadowthingNameA1B3998C": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApishadow5B41C79D",
        },
        "PathPart": "{thingName}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultparamsRestApishadowthingNamePOST10BEBA62": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultparamsapigatewayiotroleD0FFF789",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.thingName": "method.request.path.thingName",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/things/{thingName}/shadow",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.thingName": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultparamsawsapigatewayiotreqval9B598042",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApishadowthingNameA1B3998C",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultparamsRestApishadowthingNameshadowNameB680902D": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApishadowthingNameA1B3998C",
        },
        "PathPart": "{shadowName}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotdefaultparamsRestApishadowthingNameshadowNamePOST8938C0DC": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotdefaultparamsapigatewayiotroleD0FFF789",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.shadowName": "method.request.path.shadowName",
            "integration.request.path.thingName": "method.request.path.thingName",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/$aws/things/{thingName}/shadow/name/{shadowName}/update",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.shadowName": true,
          "method.request.path.thingName": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotdefaultparamsawsapigatewayiotreqval9B598042",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApishadowthingNameshadowNameB680902D",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotdefaultparamsapigatewayiotroleD0FFF789": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "iot:UpdateThingShadow",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:iot:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":thing/*",
                      ],
                    ],
                  },
                },
                Object {
                  "Action": "iot:Publish",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:iot:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":topic/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "awsapigatewayiotpolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testapigatewayiotdefaultparamsawsapigatewayiotreqval9B598042": Object {
      "Properties": Object {
        "RestApiId": Object {
          "Ref": "testapigatewayiotdefaultparamsRestApi60BDAFC6",
        },
        "ValidateRequestBody": false,
        "ValidateRequestParameters": true,
      },
      "Type": "AWS::ApiGateway::RequestValidator",
    },
  },
}
`;

exports[`Test for overriden props snapshot 1`] = `
Object {
  "Outputs": Object {
    "testapigatewayiotoverridenparamsRestApiEndpoint81A0469B": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "testapigatewayiotoverridenparamsRestApiDeploymentStageprod6C6F5AF2",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Resources": Object {
    "apigatewayiotrole39B3B182": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "iot:UpdateThingShadow",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:iot:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":thing/*",
                      ],
                    ],
                  },
                },
                Object {
                  "Action": "iot:Publish",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:iot:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":topic/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "testPolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testapigatewayiotoverridenparamsApiAccessLogGroup1441C739": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "testapigatewayiotoverridenparamsLambdaRestApiAccountA712A24B": Object {
      "DependsOn": Array [
        "testapigatewayiotoverridenparamsRestApi30D747C3",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "testapigatewayiotoverridenparamsLambdaRestApiCloudWatchRoleDCA94398",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "testapigatewayiotoverridenparamsLambdaRestApiCloudWatchRoleDCA94398": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testapigatewayiotoverridenparamsRestApi30D747C3": Object {
      "Properties": Object {
        "ApiKeySourceType": "HEADER",
        "BinaryMediaTypes": Array [
          "application/octet-stream",
        ],
        "Description": "Description for the Regional Rest Api",
        "EndpointConfiguration": Object {
          "Types": Array [
            "REGIONAL",
          ],
        },
        "Name": "RestApi-Regional",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "testapigatewayiotoverridenparamsRestApiApiKey00A9BE26": Object {
      "Properties": Object {
        "Enabled": true,
        "StageKeys": Array [
          Object {
            "RestApiId": Object {
              "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
            },
            "StageName": Object {
              "Ref": "testapigatewayiotoverridenparamsRestApiDeploymentStageprod6C6F5AF2",
            },
          },
        ],
      },
      "Type": "AWS::ApiGateway::ApiKey",
    },
    "testapigatewayiotoverridenparamsRestApiDeployment447F79B713a23a348620407d37bb49f3e581de39": Object {
      "DependsOn": Array [
        "testapigatewayiotoverridenparamsawsapigatewayiotreqval6F651A38",
        "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6topiclevel7POST78BF6C48",
        "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6topiclevel711E7D42F",
        "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6POST03EED79D",
        "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel66256AA13",
        "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5POSTD4CCE443",
        "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5E9A3CC98",
        "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4POSTE9C69A8C",
        "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel45D056F82",
        "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3POST67DEDF1F",
        "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel32F319AA0",
        "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2POSTAED0B4BF",
        "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2A0ED2131",
        "testapigatewayiotoverridenparamsRestApimessagetopiclevel1POST37ECFE98",
        "testapigatewayiotoverridenparamsRestApimessagetopiclevel18B083B80",
        "testapigatewayiotoverridenparamsRestApimessageF0C148D3",
        "testapigatewayiotoverridenparamsRestApishadowthingNameshadowNamePOST0450BB44",
        "testapigatewayiotoverridenparamsRestApishadowthingNameshadowNameEB7E83A8",
        "testapigatewayiotoverridenparamsRestApishadowthingNamePOST050ECC4D",
        "testapigatewayiotoverridenparamsRestApishadowthingName455DD73D",
        "testapigatewayiotoverridenparamsRestApishadow6F67A57F",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "testapigatewayiotoverridenparamsRestApiDeploymentStageprod6C6F5AF2": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "testapigatewayiotoverridenparamsApiAccessLogGroup1441C739",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"user\\":\\"$context.identity.user\\",\\"caller\\":\\"$context.identity.caller\\",\\"requestTime\\":\\"$context.requestTime\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}",
        },
        "DeploymentId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApiDeployment447F79B713a23a348620407d37bb49f3e581de39",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "testapigatewayiotoverridenparamsRestApiUsagePlanA409DD06": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
            },
            "Stage": Object {
              "Ref": "testapigatewayiotoverridenparamsRestApiDeploymentStageprod6C6F5AF2",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "testapigatewayiotoverridenparamsRestApiUsagePlanUsagePlanKeyResource2127D8B5": Object {
      "Properties": Object {
        "KeyId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApiApiKey00A9BE26",
        },
        "KeyType": "API_KEY",
        "UsagePlanId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApiUsagePlanA409DD06",
        },
      },
      "Type": "AWS::ApiGateway::UsagePlanKey",
    },
    "testapigatewayiotoverridenparamsRestApimessageF0C148D3": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "testapigatewayiotoverridenparamsRestApi30D747C3",
            "RootResourceId",
          ],
        },
        "PathPart": "message",
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotoverridenparamsRestApimessagetopiclevel18B083B80": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApimessageF0C148D3",
        },
        "PathPart": "{topic-level-1}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotoverridenparamsRestApimessagetopiclevel1POST37ECFE98": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W59",
              "reason": "When ApiKey is being created, we also set apikeyRequired to true, so techincally apiGateway still looks for apiKey even though user specified AuthorizationType to NONE",
            },
          ],
        },
      },
      "Properties": Object {
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewayiotrole39B3B182",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotoverridenparamsawsapigatewayiotreqval6F651A38",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApimessagetopiclevel18B083B80",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2A0ED2131": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApimessagetopiclevel18B083B80",
        },
        "PathPart": "{topic-level-2}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2POSTAED0B4BF": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W59",
              "reason": "When ApiKey is being created, we also set apikeyRequired to true, so techincally apiGateway still looks for apiKey even though user specified AuthorizationType to NONE",
            },
          ],
        },
      },
      "Properties": Object {
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewayiotrole39B3B182",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotoverridenparamsawsapigatewayiotreqval6F651A38",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2A0ED2131",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel32F319AA0": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2A0ED2131",
        },
        "PathPart": "{topic-level-3}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3POST67DEDF1F": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W59",
              "reason": "When ApiKey is being created, we also set apikeyRequired to true, so techincally apiGateway still looks for apiKey even though user specified AuthorizationType to NONE",
            },
          ],
        },
      },
      "Properties": Object {
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewayiotrole39B3B182",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
            "integration.request.path.topic-level-3": "method.request.path.topic-level-3",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}/{topic-level-3}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
          "method.request.path.topic-level-3": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotoverridenparamsawsapigatewayiotreqval6F651A38",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel32F319AA0",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel45D056F82": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel32F319AA0",
        },
        "PathPart": "{topic-level-4}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4POSTE9C69A8C": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W59",
              "reason": "When ApiKey is being created, we also set apikeyRequired to true, so techincally apiGateway still looks for apiKey even though user specified AuthorizationType to NONE",
            },
          ],
        },
      },
      "Properties": Object {
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewayiotrole39B3B182",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
            "integration.request.path.topic-level-3": "method.request.path.topic-level-3",
            "integration.request.path.topic-level-4": "method.request.path.topic-level-4",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}/{topic-level-3}/{topic-level-4}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
          "method.request.path.topic-level-3": true,
          "method.request.path.topic-level-4": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotoverridenparamsawsapigatewayiotreqval6F651A38",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel45D056F82",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5E9A3CC98": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel45D056F82",
        },
        "PathPart": "{topic-level-5}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5POSTD4CCE443": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W59",
              "reason": "When ApiKey is being created, we also set apikeyRequired to true, so techincally apiGateway still looks for apiKey even though user specified AuthorizationType to NONE",
            },
          ],
        },
      },
      "Properties": Object {
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewayiotrole39B3B182",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
            "integration.request.path.topic-level-3": "method.request.path.topic-level-3",
            "integration.request.path.topic-level-4": "method.request.path.topic-level-4",
            "integration.request.path.topic-level-5": "method.request.path.topic-level-5",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}/{topic-level-3}/{topic-level-4}/{topic-level-5}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
          "method.request.path.topic-level-3": true,
          "method.request.path.topic-level-4": true,
          "method.request.path.topic-level-5": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotoverridenparamsawsapigatewayiotreqval6F651A38",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5E9A3CC98",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel66256AA13": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5E9A3CC98",
        },
        "PathPart": "{topic-level-6}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6POST03EED79D": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W59",
              "reason": "When ApiKey is being created, we also set apikeyRequired to true, so techincally apiGateway still looks for apiKey even though user specified AuthorizationType to NONE",
            },
          ],
        },
      },
      "Properties": Object {
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewayiotrole39B3B182",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
            "integration.request.path.topic-level-3": "method.request.path.topic-level-3",
            "integration.request.path.topic-level-4": "method.request.path.topic-level-4",
            "integration.request.path.topic-level-5": "method.request.path.topic-level-5",
            "integration.request.path.topic-level-6": "method.request.path.topic-level-6",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}/{topic-level-3}/{topic-level-4}/{topic-level-5}/{topic-level-6}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
          "method.request.path.topic-level-3": true,
          "method.request.path.topic-level-4": true,
          "method.request.path.topic-level-5": true,
          "method.request.path.topic-level-6": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotoverridenparamsawsapigatewayiotreqval6F651A38",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel66256AA13",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6topiclevel711E7D42F": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel66256AA13",
        },
        "PathPart": "{topic-level-7}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6topiclevel7POST78BF6C48": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W59",
              "reason": "When ApiKey is being created, we also set apikeyRequired to true, so techincally apiGateway still looks for apiKey even though user specified AuthorizationType to NONE",
            },
          ],
        },
      },
      "Properties": Object {
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewayiotrole39B3B182",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.topic-level-1": "method.request.path.topic-level-1",
            "integration.request.path.topic-level-2": "method.request.path.topic-level-2",
            "integration.request.path.topic-level-3": "method.request.path.topic-level-3",
            "integration.request.path.topic-level-4": "method.request.path.topic-level-4",
            "integration.request.path.topic-level-5": "method.request.path.topic-level-5",
            "integration.request.path.topic-level-6": "method.request.path.topic-level-6",
            "integration.request.path.topic-level-7": "method.request.path.topic-level-7",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/{topic-level-1}/{topic-level-2}/{topic-level-3}/{topic-level-4}/{topic-level-5}/{topic-level-6}/{topic-level-7}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.topic-level-1": true,
          "method.request.path.topic-level-2": true,
          "method.request.path.topic-level-3": true,
          "method.request.path.topic-level-4": true,
          "method.request.path.topic-level-5": true,
          "method.request.path.topic-level-6": true,
          "method.request.path.topic-level-7": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotoverridenparamsawsapigatewayiotreqval6F651A38",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApimessagetopiclevel1topiclevel2topiclevel3topiclevel4topiclevel5topiclevel6topiclevel711E7D42F",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotoverridenparamsRestApishadow6F67A57F": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "testapigatewayiotoverridenparamsRestApi30D747C3",
            "RootResourceId",
          ],
        },
        "PathPart": "shadow",
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotoverridenparamsRestApishadowthingName455DD73D": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApishadow6F67A57F",
        },
        "PathPart": "{thingName}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotoverridenparamsRestApishadowthingNamePOST050ECC4D": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W59",
              "reason": "When ApiKey is being created, we also set apikeyRequired to true, so techincally apiGateway still looks for apiKey even though user specified AuthorizationType to NONE",
            },
          ],
        },
      },
      "Properties": Object {
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewayiotrole39B3B182",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.thingName": "method.request.path.thingName",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/things/{thingName}/shadow",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.thingName": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotoverridenparamsawsapigatewayiotreqval6F651A38",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApishadowthingName455DD73D",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotoverridenparamsRestApishadowthingNameshadowNameEB7E83A8": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApishadowthingName455DD73D",
        },
        "PathPart": "{shadowName}",
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testapigatewayiotoverridenparamsRestApishadowthingNameshadowNamePOST0450BB44": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W59",
              "reason": "When ApiKey is being created, we also set apikeyRequired to true, so techincally apiGateway still looks for apiKey even though user specified AuthorizationType to NONE",
            },
          ],
        },
      },
      "Properties": Object {
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewayiotrole39B3B182",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "2\\\\d{2}",
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "$input.json('$')",
              },
              "StatusCode": "403",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
            "integration.request.path.shadowName": "method.request.path.shadowName",
            "integration.request.path.thingName": "method.request.path.thingName",
          },
          "RequestTemplates": Object {
            "application/json": "$input.json('$')",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":a1234567890123-ats.iotdata:path/topics/$aws/things/{thingName}/shadow/name/{shadowName}/update",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "403",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.shadowName": true,
          "method.request.path.thingName": true,
        },
        "RequestValidatorId": Object {
          "Ref": "testapigatewayiotoverridenparamsawsapigatewayiotreqval6F651A38",
        },
        "ResourceId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApishadowthingNameshadowNameEB7E83A8",
        },
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testapigatewayiotoverridenparamsawsapigatewayiotreqval6F651A38": Object {
      "Properties": Object {
        "RestApiId": Object {
          "Ref": "testapigatewayiotoverridenparamsRestApi30D747C3",
        },
        "ValidateRequestBody": false,
        "ValidateRequestParameters": true,
      },
      "Type": "AWS::ApiGateway::RequestValidator",
    },
  },
}
`;
