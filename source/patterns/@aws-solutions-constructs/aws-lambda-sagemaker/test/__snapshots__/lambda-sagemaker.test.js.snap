// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test deployment with existing Lambda function 1`] = `
Object {
  "Parameters": Object {
    "AssetParametersbbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20ArtifactHash21B905D2": Object {
      "Description": "Artifact hash for asset \\"bbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20\\"",
      "Type": "String",
    },
    "AssetParametersbbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20S3Bucket01219483": Object {
      "Description": "S3 bucket for asset \\"bbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20\\"",
      "Type": "String",
    },
    "AssetParametersbbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20S3VersionKeyC029AFFB": Object {
      "Description": "S3 key for asset version \\"bbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "lambdatosagemakerstackEncryptionKeyDC12EC9F": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "EnableKeyRotation": true,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey",
                "kms:TagResource",
                "kms:UntagResource",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "lambdatosagemakerstackLambdaFunction1C80F3C5": Object {
      "DependsOn": Array [
        "lambdatosagemakerstackLambdaFunctionServiceRoleDefaultPolicy30BF06A2",
        "lambdatosagemakerstackLambdaFunctionServiceRole1400E87F",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersbbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20S3Bucket01219483",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersbbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20S3VersionKeyC029AFFB",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersbbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20S3VersionKeyC029AFFB",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "LAMBDA_NAME": "override-function",
            "NOTEBOOK_NAME": Object {
              "Fn::GetAtt": Array [
                "lambdatosagemakerstackSagemakerNotebook804D9A57",
                "NotebookInstanceName",
              ],
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdatosagemakerstackLambdaFunctionServiceRole1400E87F",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdatosagemakerstackLambdaFunctionPolicy5DD3BE2D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sagemaker:InvokeEndpoint",
                "sagemaker:DescribeNotebookInstance",
                "sagemaker:DescribeTrainingJob",
                "sagemaker:DescribeTransformJob",
                "sagemaker:CreateTrainingJob",
                "sagemaker:CreateTransformJob",
                "sagemaker:CreateEndpointConfig",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:sagemaker:*:*:*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdatosagemakerstackLambdaFunctionPolicy5DD3BE2D",
        "Roles": Array [
          Object {
            "Ref": "lambdatosagemakerstackLambdaFunctionServiceRole1400E87F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdatosagemakerstackLambdaFunctionServiceRole1400E87F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdatosagemakerstackLambdaFunctionServiceRoleDefaultPolicy30BF06A2": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdatosagemakerstackLambdaFunctionServiceRoleDefaultPolicy30BF06A2",
        "Roles": Array [
          Object {
            "Ref": "lambdatosagemakerstackLambdaFunctionServiceRole1400E87F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdatosagemakerstackSagemakerNotebook804D9A57": Object {
      "Properties": Object {
        "InstanceType": "ml.t2.medium",
        "KmsKeyId": Object {
          "Ref": "lambdatosagemakerstackEncryptionKeyDC12EC9F",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "lambdatosagemakerstackSagemakerRoleF07CFB94",
            "Arn",
          ],
        },
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "lambdatosagemakerstackingresssecuritygroup10E25B33",
              "GroupId",
            ],
          },
          Object {
            "Fn::GetAtt": Array [
              "lambdatosagemakerstackegresssecuritygroup61ADCCF7",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Ref": "lambdatosagemakerstackVpcisolatedSubnetSubnet1Subnet8A703CE7",
        },
      },
      "Type": "AWS::SageMaker::NotebookInstance",
    },
    "lambdatosagemakerstackSagemakerRoleF07CFB94": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "sagemaker.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdatosagemakerstackVpcA8F68D19": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/lambda-to-sagemaker-stack/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "lambdatosagemakerstackVpcFlowLogD22AC2B2": Object {
      "Properties": Object {
        "DeliverLogsPermissionArn": Object {
          "Fn::GetAtt": Array [
            "lambdatosagemakerstackVpcFlowLogIAMRoleFB771551",
            "Arn",
          ],
        },
        "LogDestinationType": "cloud-watch-logs",
        "LogGroupName": Object {
          "Ref": "lambdatosagemakerstackVpcFlowLogLogGroupA21BF4B0",
        },
        "ResourceId": Object {
          "Ref": "lambdatosagemakerstackVpcA8F68D19",
        },
        "ResourceType": "VPC",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/lambda-to-sagemaker-stack/Vpc",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "lambdatosagemakerstackVpcFlowLogIAMRoleDefaultPolicyE43C80A0": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosagemakerstackVpcFlowLogLogGroupA21BF4B0",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosagemakerstackVpcFlowLogIAMRoleFB771551",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdatosagemakerstackVpcFlowLogIAMRoleDefaultPolicyE43C80A0",
        "Roles": Array [
          Object {
            "Ref": "lambdatosagemakerstackVpcFlowLogIAMRoleFB771551",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdatosagemakerstackVpcFlowLogIAMRoleFB771551": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "vpc-flow-logs.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/lambda-to-sagemaker-stack/Vpc",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdatosagemakerstackVpcFlowLogLogGroupA21BF4B0": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "lambdatosagemakerstackVpcisolatedSubnetSubnet1RouteTable0DB581DC": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/lambda-to-sagemaker-stack/Vpc/isolatedSubnetSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "lambdatosagemakerstackVpcA8F68D19",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "lambdatosagemakerstackVpcisolatedSubnetSubnet1RouteTableAssociationDD59756C": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "lambdatosagemakerstackVpcisolatedSubnetSubnet1RouteTable0DB581DC",
        },
        "SubnetId": Object {
          "Ref": "lambdatosagemakerstackVpcisolatedSubnetSubnet1Subnet8A703CE7",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "lambdatosagemakerstackVpcisolatedSubnetSubnet1Subnet8A703CE7": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "isolatedSubnet",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "Default/lambda-to-sagemaker-stack/Vpc/isolatedSubnetSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "lambdatosagemakerstackVpcA8F68D19",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "lambdatosagemakerstackegresssecuritygroup61ADCCF7": Object {
      "Properties": Object {
        "GroupDescription": "Default/lambda-to-sagemaker-stack/egress-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "VpcId": Object {
          "Ref": "lambdatosagemakerstackVpcA8F68D19",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "lambdatosagemakerstackingresssecuritygroup10E25B33": Object {
      "Properties": Object {
        "GroupDescription": "Default/lambda-to-sagemaker-stack/ingress-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "VpcId": Object {
          "Ref": "lambdatosagemakerstackVpcA8F68D19",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
  },
}
`;

exports[`Test deployment with imported encryption key 1`] = `
Object {
  "Parameters": Object {
    "AssetParametersbbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20ArtifactHash21B905D2": Object {
      "Description": "Artifact hash for asset \\"bbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20\\"",
      "Type": "String",
    },
    "AssetParametersbbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20S3Bucket01219483": Object {
      "Description": "S3 bucket for asset \\"bbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20\\"",
      "Type": "String",
    },
    "AssetParametersbbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20S3VersionKeyC029AFFB": Object {
      "Description": "S3 key for asset version \\"bbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "importedkey38675D68": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "EnableKeyRotation": false,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey",
                "kms:TagResource",
                "kms:UntagResource",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "lambdatosagemakerstackLambdaFunction1C80F3C5": Object {
      "DependsOn": Array [
        "lambdatosagemakerstackLambdaFunctionServiceRoleDefaultPolicy30BF06A2",
        "lambdatosagemakerstackLambdaFunctionServiceRole1400E87F",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersbbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20S3Bucket01219483",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersbbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20S3VersionKeyC029AFFB",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersbbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20S3VersionKeyC029AFFB",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "LAMBDA_NAME": "deployed-function-no-enc",
            "NOTEBOOK_NAME": Object {
              "Fn::GetAtt": Array [
                "lambdatosagemakerstackSagemakerNotebook804D9A57",
                "NotebookInstanceName",
              ],
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdatosagemakerstackLambdaFunctionServiceRole1400E87F",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdatosagemakerstackLambdaFunctionPolicy5DD3BE2D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sagemaker:InvokeEndpoint",
                "sagemaker:DescribeNotebookInstance",
                "sagemaker:DescribeTrainingJob",
                "sagemaker:DescribeTransformJob",
                "sagemaker:CreateTrainingJob",
                "sagemaker:CreateTransformJob",
                "sagemaker:CreateEndpointConfig",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:sagemaker:*:*:*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdatosagemakerstackLambdaFunctionPolicy5DD3BE2D",
        "Roles": Array [
          Object {
            "Ref": "lambdatosagemakerstackLambdaFunctionServiceRole1400E87F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdatosagemakerstackLambdaFunctionServiceRole1400E87F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdatosagemakerstackLambdaFunctionServiceRoleDefaultPolicy30BF06A2": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdatosagemakerstackLambdaFunctionServiceRoleDefaultPolicy30BF06A2",
        "Roles": Array [
          Object {
            "Ref": "lambdatosagemakerstackLambdaFunctionServiceRole1400E87F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdatosagemakerstackSagemakerNotebook804D9A57": Object {
      "Properties": Object {
        "InstanceType": "ml.t2.medium",
        "KmsKeyId": Object {
          "Ref": "importedkey38675D68",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "lambdatosagemakerstackSagemakerRoleF07CFB94",
            "Arn",
          ],
        },
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "lambdatosagemakerstackingresssecuritygroup10E25B33",
              "GroupId",
            ],
          },
          Object {
            "Fn::GetAtt": Array [
              "lambdatosagemakerstackegresssecuritygroup61ADCCF7",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Ref": "lambdatosagemakerstackVpcisolatedSubnetSubnet1Subnet8A703CE7",
        },
      },
      "Type": "AWS::SageMaker::NotebookInstance",
    },
    "lambdatosagemakerstackSagemakerRoleF07CFB94": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "sagemaker.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdatosagemakerstackVpcA8F68D19": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/lambda-to-sagemaker-stack/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "lambdatosagemakerstackVpcFlowLogD22AC2B2": Object {
      "Properties": Object {
        "DeliverLogsPermissionArn": Object {
          "Fn::GetAtt": Array [
            "lambdatosagemakerstackVpcFlowLogIAMRoleFB771551",
            "Arn",
          ],
        },
        "LogDestinationType": "cloud-watch-logs",
        "LogGroupName": Object {
          "Ref": "lambdatosagemakerstackVpcFlowLogLogGroupA21BF4B0",
        },
        "ResourceId": Object {
          "Ref": "lambdatosagemakerstackVpcA8F68D19",
        },
        "ResourceType": "VPC",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/lambda-to-sagemaker-stack/Vpc",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "lambdatosagemakerstackVpcFlowLogIAMRoleDefaultPolicyE43C80A0": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosagemakerstackVpcFlowLogLogGroupA21BF4B0",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosagemakerstackVpcFlowLogIAMRoleFB771551",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdatosagemakerstackVpcFlowLogIAMRoleDefaultPolicyE43C80A0",
        "Roles": Array [
          Object {
            "Ref": "lambdatosagemakerstackVpcFlowLogIAMRoleFB771551",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdatosagemakerstackVpcFlowLogIAMRoleFB771551": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "vpc-flow-logs.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/lambda-to-sagemaker-stack/Vpc",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdatosagemakerstackVpcFlowLogLogGroupA21BF4B0": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "lambdatosagemakerstackVpcisolatedSubnetSubnet1RouteTable0DB581DC": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/lambda-to-sagemaker-stack/Vpc/isolatedSubnetSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "lambdatosagemakerstackVpcA8F68D19",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "lambdatosagemakerstackVpcisolatedSubnetSubnet1RouteTableAssociationDD59756C": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "lambdatosagemakerstackVpcisolatedSubnetSubnet1RouteTable0DB581DC",
        },
        "SubnetId": Object {
          "Ref": "lambdatosagemakerstackVpcisolatedSubnetSubnet1Subnet8A703CE7",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "lambdatosagemakerstackVpcisolatedSubnetSubnet1Subnet8A703CE7": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "isolatedSubnet",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "Default/lambda-to-sagemaker-stack/Vpc/isolatedSubnetSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "lambdatosagemakerstackVpcA8F68D19",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "lambdatosagemakerstackegresssecuritygroup61ADCCF7": Object {
      "Properties": Object {
        "GroupDescription": "Default/lambda-to-sagemaker-stack/egress-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "VpcId": Object {
          "Ref": "lambdatosagemakerstackVpcA8F68D19",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "lambdatosagemakerstackingresssecuritygroup10E25B33": Object {
      "Properties": Object {
        "GroupDescription": "Default/lambda-to-sagemaker-stack/ingress-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "VpcId": Object {
          "Ref": "lambdatosagemakerstackVpcA8F68D19",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
  },
}
`;

exports[`Test deployment with new Lambda function 1`] = `
Object {
  "Parameters": Object {
    "AssetParametersbbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20ArtifactHash21B905D2": Object {
      "Description": "Artifact hash for asset \\"bbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20\\"",
      "Type": "String",
    },
    "AssetParametersbbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20S3Bucket01219483": Object {
      "Description": "S3 bucket for asset \\"bbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20\\"",
      "Type": "String",
    },
    "AssetParametersbbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20S3VersionKeyC029AFFB": Object {
      "Description": "S3 key for asset version \\"bbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "lambdatosagemakerstackEncryptionKeyDC12EC9F": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "EnableKeyRotation": true,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey",
                "kms:TagResource",
                "kms:UntagResource",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "lambdatosagemakerstackLambdaFunction1C80F3C5": Object {
      "DependsOn": Array [
        "lambdatosagemakerstackLambdaFunctionServiceRoleDefaultPolicy30BF06A2",
        "lambdatosagemakerstackLambdaFunctionServiceRole1400E87F",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersbbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20S3Bucket01219483",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersbbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20S3VersionKeyC029AFFB",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersbbd4928056408f5117aa5fd896a1f9d30cd4cdcdd7a62b4ad10695042c250b20S3VersionKeyC029AFFB",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "LAMBDA_NAME": "deployed-function",
            "NOTEBOOK_NAME": Object {
              "Fn::GetAtt": Array [
                "lambdatosagemakerstackSagemakerNotebook804D9A57",
                "NotebookInstanceName",
              ],
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdatosagemakerstackLambdaFunctionServiceRole1400E87F",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdatosagemakerstackLambdaFunctionPolicy5DD3BE2D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sagemaker:InvokeEndpoint",
                "sagemaker:DescribeNotebookInstance",
                "sagemaker:DescribeTrainingJob",
                "sagemaker:DescribeTransformJob",
                "sagemaker:CreateTrainingJob",
                "sagemaker:CreateTransformJob",
                "sagemaker:CreateEndpointConfig",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:sagemaker:*:*:*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdatosagemakerstackLambdaFunctionPolicy5DD3BE2D",
        "Roles": Array [
          Object {
            "Ref": "lambdatosagemakerstackLambdaFunctionServiceRole1400E87F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdatosagemakerstackLambdaFunctionServiceRole1400E87F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdatosagemakerstackLambdaFunctionServiceRoleDefaultPolicy30BF06A2": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdatosagemakerstackLambdaFunctionServiceRoleDefaultPolicy30BF06A2",
        "Roles": Array [
          Object {
            "Ref": "lambdatosagemakerstackLambdaFunctionServiceRole1400E87F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdatosagemakerstackSagemakerNotebook804D9A57": Object {
      "Properties": Object {
        "InstanceType": "ml.t2.medium",
        "KmsKeyId": Object {
          "Ref": "lambdatosagemakerstackEncryptionKeyDC12EC9F",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "lambdatosagemakerstackSagemakerRoleF07CFB94",
            "Arn",
          ],
        },
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "lambdatosagemakerstackingresssecuritygroup10E25B33",
              "GroupId",
            ],
          },
          Object {
            "Fn::GetAtt": Array [
              "lambdatosagemakerstackegresssecuritygroup61ADCCF7",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Ref": "lambdatosagemakerstackVpcisolatedSubnetSubnet1Subnet8A703CE7",
        },
      },
      "Type": "AWS::SageMaker::NotebookInstance",
    },
    "lambdatosagemakerstackSagemakerRoleF07CFB94": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "sagemaker.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdatosagemakerstackVpcA8F68D19": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/lambda-to-sagemaker-stack/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "lambdatosagemakerstackVpcFlowLogD22AC2B2": Object {
      "Properties": Object {
        "DeliverLogsPermissionArn": Object {
          "Fn::GetAtt": Array [
            "lambdatosagemakerstackVpcFlowLogIAMRoleFB771551",
            "Arn",
          ],
        },
        "LogDestinationType": "cloud-watch-logs",
        "LogGroupName": Object {
          "Ref": "lambdatosagemakerstackVpcFlowLogLogGroupA21BF4B0",
        },
        "ResourceId": Object {
          "Ref": "lambdatosagemakerstackVpcA8F68D19",
        },
        "ResourceType": "VPC",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/lambda-to-sagemaker-stack/Vpc",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "lambdatosagemakerstackVpcFlowLogIAMRoleDefaultPolicyE43C80A0": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosagemakerstackVpcFlowLogLogGroupA21BF4B0",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "lambdatosagemakerstackVpcFlowLogIAMRoleFB771551",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdatosagemakerstackVpcFlowLogIAMRoleDefaultPolicyE43C80A0",
        "Roles": Array [
          Object {
            "Ref": "lambdatosagemakerstackVpcFlowLogIAMRoleFB771551",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdatosagemakerstackVpcFlowLogIAMRoleFB771551": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "vpc-flow-logs.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/lambda-to-sagemaker-stack/Vpc",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdatosagemakerstackVpcFlowLogLogGroupA21BF4B0": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "lambdatosagemakerstackVpcisolatedSubnetSubnet1RouteTable0DB581DC": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/lambda-to-sagemaker-stack/Vpc/isolatedSubnetSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "lambdatosagemakerstackVpcA8F68D19",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "lambdatosagemakerstackVpcisolatedSubnetSubnet1RouteTableAssociationDD59756C": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "lambdatosagemakerstackVpcisolatedSubnetSubnet1RouteTable0DB581DC",
        },
        "SubnetId": Object {
          "Ref": "lambdatosagemakerstackVpcisolatedSubnetSubnet1Subnet8A703CE7",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "lambdatosagemakerstackVpcisolatedSubnetSubnet1Subnet8A703CE7": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "isolatedSubnet",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "Default/lambda-to-sagemaker-stack/Vpc/isolatedSubnetSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "lambdatosagemakerstackVpcA8F68D19",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "lambdatosagemakerstackegresssecuritygroup61ADCCF7": Object {
      "Properties": Object {
        "GroupDescription": "Default/lambda-to-sagemaker-stack/egress-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "VpcId": Object {
          "Ref": "lambdatosagemakerstackVpcA8F68D19",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "lambdatosagemakerstackingresssecuritygroup10E25B33": Object {
      "Properties": Object {
        "GroupDescription": "Default/lambda-to-sagemaker-stack/ingress-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "VpcId": Object {
          "Ref": "lambdatosagemakerstackVpcA8F68D19",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
  },
}
`;
