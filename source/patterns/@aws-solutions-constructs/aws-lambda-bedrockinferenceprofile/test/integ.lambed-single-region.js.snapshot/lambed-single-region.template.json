{
 "Description": "Integration Test for aws-lambda-sns",
 "Resources": {
  "testlambdainferencepropsLambdaFunctionServiceRole102487FD": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":logs:",
            {
             "Ref": "AWS::Region"
            },
            ":",
            {
             "Ref": "AWS::AccountId"
            },
            ":log-group:/aws/lambda/*"
           ]
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "LambdaFunctionServiceRolePolicy"
     }
    ]
   },
   "Metadata": {
    "guard": {
     "SuppressedRules": [
      "IAM_NO_INLINE_POLICY_CHECK"
     ]
    }
   }
  },
  "testlambdainferencepropsLambdaFunction2FD85C24": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "0904d3723480fed2daf7885caa427b930881caae6879d1e6b0d395020173ef6f.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
      "BEDROCK_MODEL": "amazon.nova-lite-v1:0",
      "BEDROCK_PROFILE": {
       "Fn::GetAtt": [
        "testlambdainferencepropstestlambdainferencepropsinference01BBD7E6",
        "InferenceProfileArn"
       ]
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "testlambdainferencepropsLambdaFunctionServiceRole102487FD",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 30,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "testlambdainferencepropsLambdaFunctionServiceRole102487FD"
   ],
   "Metadata": {
    "cfn_nag": {
     "rules_to_suppress": [
      {
       "id": "W58",
       "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
      },
      {
       "id": "W89",
       "reason": "This is not a rule for the general case, just for specific use cases/industries"
      },
      {
       "id": "W92",
       "reason": "Impossible for us to define the correct concurrency for clients"
      }
     ]
    }
   }
  },
  "testlambdainferencepropsLambdaFunctioninlinePolicyAddedToExecutionRole09A675D51": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTelemetryRecords",
        "xray:PutTraceSegments"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "testlambdainferencepropsLambdaFunctioninlinePolicyAddedToExecutionRole09A675D51",
    "Roles": [
     {
      "Ref": "testlambdainferencepropsLambdaFunctionServiceRole102487FD"
     }
    ]
   }
  },
  "testlambdainferencepropsLambdaFunctioninlinePolicyAddedToExecutionRole1121B30C3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "bedrock:Invoke*",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "testlambdainferencepropstestlambdainferencepropsinference01BBD7E6",
         "InferenceProfileArn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "testlambdainferencepropsLambdaFunctioninlinePolicyAddedToExecutionRole1121B30C3",
    "Roles": [
     {
      "Ref": "testlambdainferencepropsLambdaFunctionServiceRole102487FD"
     }
    ]
   }
  },
  "testlambdainferencepropsLambdaFunctioninlinePolicyAddedToExecutionRole2DBB277C5": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "bedrock:Invoke*",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":bedrock:",
          {
           "Ref": "AWS::Region"
          },
          "::foundation-model/amazon.nova-lite-v1:0"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "testlambdainferencepropsLambdaFunctioninlinePolicyAddedToExecutionRole2DBB277C5",
    "Roles": [
     {
      "Ref": "testlambdainferencepropsLambdaFunctionServiceRole102487FD"
     }
    ]
   }
  },
  "testlambdainferencepropstestlambdainferencepropsinference01BBD7E6": {
   "Type": "AWS::Bedrock::ApplicationInferenceProfile",
   "Properties": {
    "InferenceProfileName": {
     "Fn::Join": [
      "",
      [
       "test-lambda-inferenceprops-",
       {
        "Fn::Select": [
         2,
         {
          "Fn::Split": [
           "/",
           {
            "Ref": "AWS::StackId"
           }
          ]
         }
        ]
       }
      ]
     ]
    },
    "ModelSource": {
     "CopyFrom": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":bedrock:",
        {
         "Ref": "AWS::Region"
        },
        ":",
        {
         "Ref": "AWS::AccountId"
        },
        ":foundation-model/amazon.nova-lite-v1:0"
       ]
      ]
     }
    }
   }
  }
 },
 "Mappings": {
  "testlambdainferencepropsareaprefixmapping": {
   "us": {
    "prefix": "us"
   },
   "eu": {
    "prefix": "eu"
   },
   "ap": {
    "prefix": "apac"
   }
  },
  "testlambdainferencepropsarearegionmapping": {
   "eu": {
    "regionalModels": "arn:aws:bedrock:eu-north-1::foundation-model/amazon.nova-lite-v1:0,arn:aws:bedrock:eu-central-1::foundation-model/amazon.nova-lite-v1:0,arn:aws:bedrock:eu-west-1::foundation-model/amazon.nova-lite-v1:0,arn:aws:bedrock:eu-west-3::foundation-model/amazon.nova-lite-v1:0"
   },
   "us": {
    "regionalModels": "arn:aws:bedrock:us-east-1::foundation-model/amazon.nova-lite-v1:0,arn:aws:bedrock:us-east-2::foundation-model/amazon.nova-lite-v1:0,arn:aws:bedrock:us-west-2::foundation-model/amazon.nova-lite-v1:0"
   },
   "ap": {
    "regionalModels": "arn:aws:bedrock:ap-southeast-2::foundation-model/amazon.nova-lite-v1:0,arn:aws:bedrock:ap-northeast-1::foundation-model/amazon.nova-lite-v1:0,arn:aws:bedrock:ap-south-1::foundation-model/amazon.nova-lite-v1:0,arn:aws:bedrock:ap-northeast-2::foundation-model/amazon.nova-lite-v1:0,arn:aws:bedrock:ap-southeast-1::foundation-model/amazon.nova-lite-v1:0,arn:aws:bedrock:ap-northeast-3::foundation-model/amazon.nova-lite-v1:0"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}