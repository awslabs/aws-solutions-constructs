{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket": {
        "id": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket",
        "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket",
        "children": {
          "existing-s3-bucket-encrypted-with-s3-managed-keyS3LoggingBucket": {
            "id": "existing-s3-bucket-encrypted-with-s3-managed-keyS3LoggingBucket",
            "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/existing-s3-bucket-encrypted-with-s3-managed-keyS3LoggingBucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/existing-s3-bucket-encrypted-with-s3-managed-keyS3LoggingBucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "bucketEncryption": {
                      "serverSideEncryptionConfiguration": [
                        {
                          "serverSideEncryptionByDefault": {
                            "sseAlgorithm": "AES256"
                          }
                        }
                      ]
                    },
                    "publicAccessBlockConfiguration": {
                      "blockPublicAcls": true,
                      "blockPublicPolicy": true,
                      "ignorePublicAcls": true,
                      "restrictPublicBuckets": true
                    },
                    "tags": [
                      {
                        "key": "aws-cdk:auto-delete-objects",
                        "value": "true"
                      }
                    ],
                    "versioningConfiguration": {
                      "status": "Enabled"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.CfnBucket",
                  "version": "2.177.0"
                }
              },
              "Policy": {
                "id": "Policy",
                "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/existing-s3-bucket-encrypted-with-s3-managed-keyS3LoggingBucket/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/existing-s3-bucket-encrypted-with-s3-managed-keyS3LoggingBucket/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                      "aws:cdk:cloudformation:props": {
                        "bucket": {
                          "Ref": "existings3bucketencryptedwiths3managedkeyS3LoggingBucketF861F6B7"
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "s3:*",
                              "Condition": {
                                "Bool": {
                                  "aws:SecureTransport": "false"
                                }
                              },
                              "Effect": "Deny",
                              "Principal": {
                                "AWS": "*"
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "existings3bucketencryptedwiths3managedkeyS3LoggingBucketF861F6B7",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "existings3bucketencryptedwiths3managedkeyS3LoggingBucketF861F6B7",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "s3:DeleteObject*",
                                "s3:GetBucket*",
                                "s3:List*",
                                "s3:PutBucketPolicy"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "existings3bucketencryptedwiths3managedkeyS3LoggingBucketF861F6B7",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "existings3bucketencryptedwiths3managedkeyS3LoggingBucketF861F6B7",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": "s3:PutObject",
                              "Condition": {
                                "ArnLike": {
                                  "aws:SourceArn": {
                                    "Fn::GetAtt": [
                                      "existings3bucketencryptedwiths3managedkeyS3BucketA8C4BE9A",
                                      "Arn"
                                    ]
                                  }
                                },
                                "StringEquals": {
                                  "aws:SourceAccount": {
                                    "Ref": "AWS::AccountId"
                                  }
                                }
                              },
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "logging.s3.amazonaws.com"
                              },
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Fn::GetAtt": [
                                        "existings3bucketencryptedwiths3managedkeyS3LoggingBucketF861F6B7",
                                        "Arn"
                                      ]
                                    },
                                    "/*"
                                  ]
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.CfnBucketPolicy",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.BucketPolicy",
                  "version": "2.177.0"
                }
              },
              "AutoDeleteObjectsCustomResource": {
                "id": "AutoDeleteObjectsCustomResource",
                "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/existing-s3-bucket-encrypted-with-s3-managed-keyS3LoggingBucket/AutoDeleteObjectsCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/existing-s3-bucket-encrypted-with-s3-managed-keyS3LoggingBucket/AutoDeleteObjectsCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.177.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_s3.Bucket",
              "version": "2.177.0"
            }
          },
          "LatestNodeRuntimeMap": {
            "id": "LatestNodeRuntimeMap",
            "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/LatestNodeRuntimeMap",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnMapping",
              "version": "2.177.0"
            }
          },
          "Custom::S3AutoDeleteObjectsCustomResourceProvider": {
            "id": "Custom::S3AutoDeleteObjectsCustomResourceProvider",
            "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/Custom::S3AutoDeleteObjectsCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/Custom::S3AutoDeleteObjectsCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.177.0"
                }
              },
              "Role": {
                "id": "Role",
                "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.177.0"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.177.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProviderBase",
              "version": "2.177.0"
            }
          },
          "existing-s3-bucket-encrypted-with-s3-managed-keyS3Bucket": {
            "id": "existing-s3-bucket-encrypted-with-s3-managed-keyS3Bucket",
            "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/existing-s3-bucket-encrypted-with-s3-managed-keyS3Bucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/existing-s3-bucket-encrypted-with-s3-managed-keyS3Bucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "bucketEncryption": {
                      "serverSideEncryptionConfiguration": [
                        {
                          "serverSideEncryptionByDefault": {
                            "sseAlgorithm": "AES256"
                          }
                        }
                      ]
                    },
                    "lifecycleConfiguration": {
                      "rules": [
                        {
                          "noncurrentVersionTransitions": [
                            {
                              "storageClass": "GLACIER",
                              "transitionInDays": 90
                            }
                          ],
                          "status": "Enabled"
                        }
                      ]
                    },
                    "loggingConfiguration": {
                      "destinationBucketName": {
                        "Ref": "existings3bucketencryptedwiths3managedkeyS3LoggingBucketF861F6B7"
                      }
                    },
                    "publicAccessBlockConfiguration": {
                      "blockPublicAcls": true,
                      "blockPublicPolicy": true,
                      "ignorePublicAcls": true,
                      "restrictPublicBuckets": true
                    },
                    "tags": [
                      {
                        "key": "aws-cdk:auto-delete-objects",
                        "value": "true"
                      },
                      {
                        "key": "aws-cdk:cr-owned:9fe1e74e",
                        "value": "true"
                      }
                    ],
                    "versioningConfiguration": {
                      "status": "Enabled"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.CfnBucket",
                  "version": "2.177.0"
                }
              },
              "Policy": {
                "id": "Policy",
                "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/existing-s3-bucket-encrypted-with-s3-managed-keyS3Bucket/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/existing-s3-bucket-encrypted-with-s3-managed-keyS3Bucket/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                      "aws:cdk:cloudformation:props": {
                        "bucket": {
                          "Ref": "existings3bucketencryptedwiths3managedkeyS3BucketA8C4BE9A"
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "s3:*",
                              "Condition": {
                                "Bool": {
                                  "aws:SecureTransport": "false"
                                }
                              },
                              "Effect": "Deny",
                              "Principal": {
                                "AWS": "*"
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "existings3bucketencryptedwiths3managedkeyS3BucketA8C4BE9A",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "existings3bucketencryptedwiths3managedkeyS3BucketA8C4BE9A",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "s3:DeleteObject*",
                                "s3:GetBucket*",
                                "s3:List*",
                                "s3:PutBucketPolicy"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "existings3bucketencryptedwiths3managedkeyS3BucketA8C4BE9A",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "existings3bucketencryptedwiths3managedkeyS3BucketA8C4BE9A",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": "s3:GetObject",
                              "Effect": "Allow",
                              "Principal": {
                                "CanonicalUser": {
                                  "Fn::GetAtt": [
                                    "testcloudfronts3managedkeyCloudFrontDistributionOrigin1S3Origin6A70DD8A",
                                    "S3CanonicalUserId"
                                  ]
                                }
                              },
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Fn::GetAtt": [
                                        "existings3bucketencryptedwiths3managedkeyS3BucketA8C4BE9A",
                                        "Arn"
                                      ]
                                    },
                                    "/*"
                                  ]
                                ]
                              }
                            },
                            {
                              "Action": "s3:GetObject",
                              "Condition": {
                                "StringEquals": {
                                  "AWS:SourceArn": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":cloudfront::",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":distribution/",
                                        {
                                          "Ref": "testcloudfronts3managedkeyCloudFrontDistributionE6431C62"
                                        }
                                      ]
                                    ]
                                  }
                                }
                              },
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "cloudfront.amazonaws.com"
                              },
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Fn::GetAtt": [
                                        "existings3bucketencryptedwiths3managedkeyS3BucketA8C4BE9A",
                                        "Arn"
                                      ]
                                    },
                                    "/*"
                                  ]
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.CfnBucketPolicy",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.BucketPolicy",
                  "version": "2.177.0"
                }
              },
              "AutoDeleteObjectsCustomResource": {
                "id": "AutoDeleteObjectsCustomResource",
                "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/existing-s3-bucket-encrypted-with-s3-managed-keyS3Bucket/AutoDeleteObjectsCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/existing-s3-bucket-encrypted-with-s3-managed-keyS3Bucket/AutoDeleteObjectsCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.177.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_s3.Bucket",
              "version": "2.177.0"
            }
          },
          "test-cloudfront-s3-managed-key": {
            "id": "test-cloudfront-s3-managed-key",
            "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/test-cloudfront-s3-managed-key",
            "children": {
              "CloudfrontLoggingBucketAccessLog": {
                "id": "CloudfrontLoggingBucketAccessLog",
                "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/test-cloudfront-s3-managed-key/CloudfrontLoggingBucketAccessLog",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/test-cloudfront-s3-managed-key/CloudfrontLoggingBucketAccessLog/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                      "aws:cdk:cloudformation:props": {
                        "bucketEncryption": {
                          "serverSideEncryptionConfiguration": [
                            {
                              "serverSideEncryptionByDefault": {
                                "sseAlgorithm": "AES256"
                              }
                            }
                          ]
                        },
                        "publicAccessBlockConfiguration": {
                          "blockPublicAcls": true,
                          "blockPublicPolicy": true,
                          "ignorePublicAcls": true,
                          "restrictPublicBuckets": true
                        },
                        "tags": [
                          {
                            "key": "aws-cdk:auto-delete-objects",
                            "value": "true"
                          }
                        ],
                        "versioningConfiguration": {
                          "status": "Enabled"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.CfnBucket",
                      "version": "2.177.0"
                    }
                  },
                  "Policy": {
                    "id": "Policy",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/test-cloudfront-s3-managed-key/CloudfrontLoggingBucketAccessLog/Policy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/test-cloudfront-s3-managed-key/CloudfrontLoggingBucketAccessLog/Policy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                          "aws:cdk:cloudformation:props": {
                            "bucket": {
                              "Ref": "testcloudfronts3managedkeyCloudfrontLoggingBucketAccessLog09A44955"
                            },
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "s3:*",
                                  "Condition": {
                                    "Bool": {
                                      "aws:SecureTransport": "false"
                                    }
                                  },
                                  "Effect": "Deny",
                                  "Principal": {
                                    "AWS": "*"
                                  },
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "testcloudfronts3managedkeyCloudfrontLoggingBucketAccessLog09A44955",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "testcloudfronts3managedkeyCloudfrontLoggingBucketAccessLog09A44955",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "s3:DeleteObject*",
                                    "s3:GetBucket*",
                                    "s3:List*",
                                    "s3:PutBucketPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Principal": {
                                    "AWS": {
                                      "Fn::GetAtt": [
                                        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                                        "Arn"
                                      ]
                                    }
                                  },
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "testcloudfronts3managedkeyCloudfrontLoggingBucketAccessLog09A44955",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "testcloudfronts3managedkeyCloudfrontLoggingBucketAccessLog09A44955",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": "s3:PutObject",
                                  "Condition": {
                                    "ArnLike": {
                                      "aws:SourceArn": {
                                        "Fn::GetAtt": [
                                          "testcloudfronts3managedkeyCloudfrontLoggingBucket4F6525D7",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    "StringEquals": {
                                      "aws:SourceAccount": {
                                        "Ref": "AWS::AccountId"
                                      }
                                    }
                                  },
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "logging.s3.amazonaws.com"
                                  },
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        {
                                          "Fn::GetAtt": [
                                            "testcloudfronts3managedkeyCloudfrontLoggingBucketAccessLog09A44955",
                                            "Arn"
                                          ]
                                        },
                                        "/*"
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.CfnBucketPolicy",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketPolicy",
                      "version": "2.177.0"
                    }
                  },
                  "AutoDeleteObjectsCustomResource": {
                    "id": "AutoDeleteObjectsCustomResource",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/test-cloudfront-s3-managed-key/CloudfrontLoggingBucketAccessLog/AutoDeleteObjectsCustomResource",
                    "children": {
                      "Default": {
                        "id": "Default",
                        "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/test-cloudfront-s3-managed-key/CloudfrontLoggingBucketAccessLog/AutoDeleteObjectsCustomResource/Default",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnResource",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CustomResource",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.Bucket",
                  "version": "2.177.0"
                }
              },
              "CloudfrontLoggingBucket": {
                "id": "CloudfrontLoggingBucket",
                "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/test-cloudfront-s3-managed-key/CloudfrontLoggingBucket",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/test-cloudfront-s3-managed-key/CloudfrontLoggingBucket/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                      "aws:cdk:cloudformation:props": {
                        "bucketEncryption": {
                          "serverSideEncryptionConfiguration": [
                            {
                              "serverSideEncryptionByDefault": {
                                "sseAlgorithm": "AES256"
                              }
                            }
                          ]
                        },
                        "loggingConfiguration": {
                          "destinationBucketName": {
                            "Ref": "testcloudfronts3managedkeyCloudfrontLoggingBucketAccessLog09A44955"
                          }
                        },
                        "ownershipControls": {
                          "rules": [
                            {
                              "objectOwnership": "ObjectWriter"
                            }
                          ]
                        },
                        "publicAccessBlockConfiguration": {
                          "blockPublicAcls": true,
                          "blockPublicPolicy": true,
                          "ignorePublicAcls": true,
                          "restrictPublicBuckets": true
                        },
                        "tags": [
                          {
                            "key": "aws-cdk:auto-delete-objects",
                            "value": "true"
                          }
                        ],
                        "versioningConfiguration": {
                          "status": "Enabled"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.CfnBucket",
                      "version": "2.177.0"
                    }
                  },
                  "Policy": {
                    "id": "Policy",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/test-cloudfront-s3-managed-key/CloudfrontLoggingBucket/Policy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/test-cloudfront-s3-managed-key/CloudfrontLoggingBucket/Policy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                          "aws:cdk:cloudformation:props": {
                            "bucket": {
                              "Ref": "testcloudfronts3managedkeyCloudfrontLoggingBucket4F6525D7"
                            },
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "s3:*",
                                  "Condition": {
                                    "Bool": {
                                      "aws:SecureTransport": "false"
                                    }
                                  },
                                  "Effect": "Deny",
                                  "Principal": {
                                    "AWS": "*"
                                  },
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "testcloudfronts3managedkeyCloudfrontLoggingBucket4F6525D7",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "testcloudfronts3managedkeyCloudfrontLoggingBucket4F6525D7",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "s3:DeleteObject*",
                                    "s3:GetBucket*",
                                    "s3:List*",
                                    "s3:PutBucketPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Principal": {
                                    "AWS": {
                                      "Fn::GetAtt": [
                                        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                                        "Arn"
                                      ]
                                    }
                                  },
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "testcloudfronts3managedkeyCloudfrontLoggingBucket4F6525D7",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "testcloudfronts3managedkeyCloudfrontLoggingBucket4F6525D7",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.CfnBucketPolicy",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketPolicy",
                      "version": "2.177.0"
                    }
                  },
                  "AutoDeleteObjectsCustomResource": {
                    "id": "AutoDeleteObjectsCustomResource",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/test-cloudfront-s3-managed-key/CloudfrontLoggingBucket/AutoDeleteObjectsCustomResource",
                    "children": {
                      "Default": {
                        "id": "Default",
                        "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/test-cloudfront-s3-managed-key/CloudfrontLoggingBucket/AutoDeleteObjectsCustomResource/Default",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnResource",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CustomResource",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.Bucket",
                  "version": "2.177.0"
                }
              },
              "CloudFrontDistribution": {
                "id": "CloudFrontDistribution",
                "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/test-cloudfront-s3-managed-key/CloudFrontDistribution",
                "children": {
                  "Origin1": {
                    "id": "Origin1",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/test-cloudfront-s3-managed-key/CloudFrontDistribution/Origin1",
                    "children": {
                      "S3Origin": {
                        "id": "S3Origin",
                        "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/test-cloudfront-s3-managed-key/CloudFrontDistribution/Origin1/S3Origin",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/test-cloudfront-s3-managed-key/CloudFrontDistribution/Origin1/S3Origin/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
                              "aws:cdk:cloudformation:props": {
                                "cloudFrontOriginAccessIdentityConfig": {
                                  "comment": "Identity for cfts3bucketencryptedwithmanagedkeyprovidedasexistingbuckettestcloudfronts3managedkeyCloudFrontDistributionOrigin17C"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_cloudfront.CfnCloudFrontOriginAccessIdentity",
                              "version": "2.177.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_cloudfront.OriginAccessIdentity",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "constructs.Construct",
                      "version": "10.4.2"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/test-cloudfront-s3-managed-key/CloudFrontDistribution/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CloudFront::Distribution",
                      "aws:cdk:cloudformation:props": {
                        "distributionConfig": {
                          "enabled": true,
                          "origins": [
                            {
                              "domainName": {
                                "Fn::GetAtt": [
                                  "existings3bucketencryptedwiths3managedkeyS3BucketA8C4BE9A",
                                  "RegionalDomainName"
                                ]
                              },
                              "id": "cfts3bucketencryptedwithmanagedkeyprovidedasexistingbuckettestcloudfronts3managedkeyCloudFrontDistributionOrigin17C5092B4",
                              "s3OriginConfig": {
                                "originAccessIdentity": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "origin-access-identity/cloudfront/",
                                      {
                                        "Ref": "testcloudfronts3managedkeyCloudFrontDistributionOrigin1S3Origin6A70DD8A"
                                      }
                                    ]
                                  ]
                                }
                              }
                            }
                          ],
                          "defaultCacheBehavior": {
                            "pathPattern": "*",
                            "targetOriginId": "cfts3bucketencryptedwithmanagedkeyprovidedasexistingbuckettestcloudfronts3managedkeyCloudFrontDistributionOrigin17C5092B4",
                            "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                            "compress": true,
                            "viewerProtocolPolicy": "redirect-to-https"
                          },
                          "defaultRootObject": "index.html",
                          "httpVersion": "http2",
                          "ipv6Enabled": true,
                          "logging": {
                            "bucket": {
                              "Fn::GetAtt": [
                                "testcloudfronts3managedkeyCloudfrontLoggingBucket4F6525D7",
                                "RegionalDomainName"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_cloudfront.CfnDistribution",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudfront.Distribution",
                  "version": "2.177.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-solutions-constructs/aws-cloudfront-oai-s3.CloudFrontToOaiToS3",
              "version": "2.78.1"
            }
          },
          "web-content": {
            "id": "web-content",
            "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/web-content",
            "children": {
              "AwsCliLayer": {
                "id": "AwsCliLayer",
                "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/web-content/AwsCliLayer",
                "children": {
                  "Code": {
                    "id": "Code",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/web-content/AwsCliLayer/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/web-content/AwsCliLayer/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.177.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/web-content/AwsCliLayer/Code/AssetBucket",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.177.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/web-content/AwsCliLayer/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::LayerVersion",
                      "aws:cdk:cloudformation:props": {
                        "content": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "1c5a2ab1d1e53b0672a644454aab3dbb258ccd0079c92ad0e23b95b2c2079f70.zip"
                        },
                        "description": "/opt/awscli/aws"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnLayerVersion",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.lambda_layer_awscli.AwsCliLayer",
                  "version": "2.177.0"
                }
              },
              "CustomResourceHandler": {
                "id": "CustomResourceHandler",
                "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/web-content/CustomResourceHandler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.SingletonFunction",
                  "version": "2.177.0"
                }
              },
              "Asset1": {
                "id": "Asset1",
                "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/web-content/Asset1",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/web-content/Asset1/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.177.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/web-content/Asset1/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.177.0"
                }
              },
              "CustomResource": {
                "id": "CustomResource",
                "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/web-content/CustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/web-content/CustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.177.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_s3_deployment.BucketDeployment",
              "version": "2.177.0"
            }
          },
          "Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C": {
            "id": "Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C",
            "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.177.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.177.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "s3:GetBucket*",
                                    "s3:GetObject*",
                                    "s3:List*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":s3:::",
                                          {
                                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                                          },
                                          "/*"
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":s3:::",
                                          {
                                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                                          }
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "s3:Abort*",
                                    "s3:DeleteObject*",
                                    "s3:GetBucket*",
                                    "s3:GetObject*",
                                    "s3:List*",
                                    "s3:PutObject",
                                    "s3:PutObjectLegalHold",
                                    "s3:PutObjectRetention",
                                    "s3:PutObjectTagging",
                                    "s3:PutObjectVersionTagging"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "existings3bucketencryptedwiths3managedkeyS3BucketA8C4BE9A",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "existings3bucketencryptedwiths3managedkeyS3BucketA8C4BE9A",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
                            "roles": [
                              {
                                "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.177.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.177.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.177.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                      },
                      "s3Key": "c6358465bf49dfae556bb430bf9c81fa578c221b82c308e3707901b1dd654762.zip"
                    },
                    "environment": {
                      "variables": {
                        "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
                      }
                    },
                    "handler": "index.handler",
                    "layers": [
                      {
                        "Ref": "webcontentAwsCliLayer26CD5DB7"
                      }
                    ],
                    "role": {
                      "Fn::GetAtt": [
                        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
                        "Arn"
                      ]
                    },
                    "runtime": "python3.11",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.177.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.177.0"
            }
          },
          "Integ": {
            "id": "Integ",
            "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/Integ",
            "children": {
              "DefaultTest": {
                "id": "DefaultTest",
                "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/Integ/DefaultTest",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/Integ/DefaultTest/Default",
                    "constructInfo": {
                      "fqn": "constructs.Construct",
                      "version": "10.4.2"
                    }
                  },
                  "DeployAssert": {
                    "id": "DeployAssert",
                    "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/Integ/DefaultTest/DeployAssert",
                    "children": {
                      "BootstrapVersion": {
                        "id": "BootstrapVersion",
                        "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/Integ/DefaultTest/DeployAssert/BootstrapVersion",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnParameter",
                          "version": "2.177.0"
                        }
                      },
                      "CheckBootstrapVersion": {
                        "id": "CheckBootstrapVersion",
                        "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/Integ/DefaultTest/DeployAssert/CheckBootstrapVersion",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnRule",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Stack",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/integ-tests-alpha.IntegTestCase",
                  "version": "2.177.0-alpha.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/integ-tests-alpha.IntegTest",
              "version": "2.177.0-alpha.0"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.177.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "cfts3-bucket-encrypted-with-managed-key-provided-as-existingbucket/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.177.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.177.0"
        }
      },
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.4.2"
        }
      }
    },
    "constructInfo": {
      "fqn": "aws-cdk-lib.App",
      "version": "2.177.0"
    }
  }
}