// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`check eventbus property, snapshot & eventbus exists 1`] = `
Object {
  "Resources": Object {
    "testeventbridgestepfunctionseventbusCustomEventBus543EEB31": Object {
      "Properties": Object {
        "Name": "testeventbridgestepfunctionseventbusCustomEventBus1261A8B4",
      },
      "Type": "AWS::Events::EventBus",
    },
    "testeventbridgestepfunctionseventbusEventsRuleA633C307": Object {
      "Properties": Object {
        "EventBusName": Object {
          "Ref": "testeventbridgestepfunctionseventbusCustomEventBus543EEB31",
        },
        "EventPattern": Object {
          "source": Array [
            "solutionsconstructs",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "testeventbridgestepfunctionseventbusStateMachineECEE5C4A",
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "testeventbridgestepfunctionseventbusEventsRuleRoleA8F42A12",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "testeventbridgestepfunctionseventbusEventsRuleRoleA8F42A12": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testeventbridgestepfunctionseventbusEventsRuleRoleDefaultPolicyB510931A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "testeventbridgestepfunctionseventbusStateMachineECEE5C4A",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testeventbridgestepfunctionseventbusEventsRuleRoleDefaultPolicyB510931A",
        "Roles": Array [
          Object {
            "Ref": "testeventbridgestepfunctionseventbusEventsRuleRoleA8F42A12",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testeventbridgestepfunctionseventbusExecutionAbortedAlarm7A3F86E8": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that aborted exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testeventbridgestepfunctionseventbusStateMachineECEE5C4A",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionsAborted",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testeventbridgestepfunctionseventbusExecutionFailedAlarmB2601715": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that failed exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testeventbridgestepfunctionseventbusStateMachineECEE5C4A",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionsFailed",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testeventbridgestepfunctionseventbusExecutionThrottledAlarm2C8AB2F2": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that throttled exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testeventbridgestepfunctionseventbusStateMachineECEE5C4A",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionThrottled",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testeventbridgestepfunctionseventbusStateMachineECEE5C4A": Object {
      "DependsOn": Array [
        "testeventbridgestepfunctionseventbusStateMachineRoleDefaultPolicyCC309240",
        "testeventbridgestepfunctionseventbusStateMachineRoleC63D8370",
      ],
      "Properties": Object {
        "DefinitionString": "{\\"StartAt\\":\\"StartState\\",\\"States\\":{\\"StartState\\":{\\"Type\\":\\"Pass\\",\\"End\\":true}}}",
        "LoggingConfiguration": Object {
          "Destinations": Array [
            Object {
              "CloudWatchLogsLogGroup": Object {
                "LogGroupArn": Object {
                  "Fn::GetAtt": Array [
                    "testeventbridgestepfunctionseventbusStateMachineLogGroupF3B6B238",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ERROR",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "testeventbridgestepfunctionseventbusStateMachineRoleC63D8370",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "testeventbridgestepfunctionseventbusStateMachineLogGroupF3B6B238": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            Object {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Properties": Object {
        "LogGroupName": "/aws/vendedlogs/states/defaulttesteventbridgestepfunctionseventbusstatemachinelog3ade1833cd96",
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "testeventbridgestepfunctionseventbusStateMachineRoleC63D8370": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "states.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testeventbridgestepfunctionseventbusStateMachineRoleDefaultPolicyCC309240": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "The 'LogDelivery' actions do not support resource-level authorizations",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testeventbridgestepfunctionseventbusStateMachineRoleDefaultPolicyCC309240",
        "Roles": Array [
          Object {
            "Ref": "testeventbridgestepfunctionseventbusStateMachineRoleC63D8370",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;

exports[`check multiple constructs in a single stack 1`] = `
Object {
  "Resources": Object {
    "testneweventbridgestepfunctions1CustomEventBus3267BF12": Object {
      "Properties": Object {
        "Name": "testneweventbridgestepfunctions1CustomEventBusFDAEC555",
      },
      "Type": "AWS::Events::EventBus",
    },
    "testneweventbridgestepfunctions1EventsRule75C4711B": Object {
      "Properties": Object {
        "EventBusName": Object {
          "Ref": "testneweventbridgestepfunctions1CustomEventBus3267BF12",
        },
        "EventPattern": Object {
          "source": Array [
            "solutionsconstructs",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "testneweventbridgestepfunctions1StateMachine79D48A86",
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "testneweventbridgestepfunctions1EventsRuleRole6CAB7254",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "testneweventbridgestepfunctions1EventsRuleRole6CAB7254": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testneweventbridgestepfunctions1EventsRuleRoleDefaultPolicy699CFB6B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "testneweventbridgestepfunctions1StateMachine79D48A86",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testneweventbridgestepfunctions1EventsRuleRoleDefaultPolicy699CFB6B",
        "Roles": Array [
          Object {
            "Ref": "testneweventbridgestepfunctions1EventsRuleRole6CAB7254",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testneweventbridgestepfunctions1ExecutionAbortedAlarm1221BC23": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that aborted exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testneweventbridgestepfunctions1StateMachine79D48A86",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionsAborted",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testneweventbridgestepfunctions1ExecutionFailedAlarm78F34B69": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that failed exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testneweventbridgestepfunctions1StateMachine79D48A86",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionsFailed",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testneweventbridgestepfunctions1ExecutionThrottledAlarm835AE392": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that throttled exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testneweventbridgestepfunctions1StateMachine79D48A86",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionThrottled",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testneweventbridgestepfunctions1StateMachine79D48A86": Object {
      "DependsOn": Array [
        "testneweventbridgestepfunctions1StateMachineRoleDefaultPolicy5A42DEA7",
        "testneweventbridgestepfunctions1StateMachineRoleE21F8DEE",
      ],
      "Properties": Object {
        "DefinitionString": "{\\"StartAt\\":\\"StartState1\\",\\"States\\":{\\"StartState1\\":{\\"Type\\":\\"Pass\\",\\"End\\":true}}}",
        "LoggingConfiguration": Object {
          "Destinations": Array [
            Object {
              "CloudWatchLogsLogGroup": Object {
                "LogGroupArn": Object {
                  "Fn::GetAtt": Array [
                    "testneweventbridgestepfunctions1StateMachineLogGroup4E3B02FA",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ERROR",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "testneweventbridgestepfunctions1StateMachineRoleE21F8DEE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "testneweventbridgestepfunctions1StateMachineLogGroup4E3B02FA": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            Object {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Properties": Object {
        "LogGroupName": "/aws/vendedlogs/states/defaulttestneweventbridgestepfunctions1statemachinelog97c1ffa93355",
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "testneweventbridgestepfunctions1StateMachineRoleDefaultPolicy5A42DEA7": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "The 'LogDelivery' actions do not support resource-level authorizations",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testneweventbridgestepfunctions1StateMachineRoleDefaultPolicy5A42DEA7",
        "Roles": Array [
          Object {
            "Ref": "testneweventbridgestepfunctions1StateMachineRoleE21F8DEE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testneweventbridgestepfunctions1StateMachineRoleE21F8DEE": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "states.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testneweventbridgestepfunctions2CustomEventBusA77E5098": Object {
      "Properties": Object {
        "Name": "testneweventbridgestepfunctions2CustomEventBusDA330C9F",
      },
      "Type": "AWS::Events::EventBus",
    },
    "testneweventbridgestepfunctions2EventsRule8926D086": Object {
      "Properties": Object {
        "EventBusName": Object {
          "Ref": "testneweventbridgestepfunctions2CustomEventBusA77E5098",
        },
        "EventPattern": Object {
          "source": Array [
            "solutionsconstructs",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "testneweventbridgestepfunctions2StateMachineAD0DC5E7",
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "testneweventbridgestepfunctions2EventsRuleRole6E867C4F",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "testneweventbridgestepfunctions2EventsRuleRole6E867C4F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testneweventbridgestepfunctions2EventsRuleRoleDefaultPolicy812687BD": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "testneweventbridgestepfunctions2StateMachineAD0DC5E7",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testneweventbridgestepfunctions2EventsRuleRoleDefaultPolicy812687BD",
        "Roles": Array [
          Object {
            "Ref": "testneweventbridgestepfunctions2EventsRuleRole6E867C4F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testneweventbridgestepfunctions2ExecutionAbortedAlarm738FE6FC": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that aborted exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testneweventbridgestepfunctions2StateMachineAD0DC5E7",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionsAborted",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testneweventbridgestepfunctions2ExecutionFailedAlarm4DFA599B": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that failed exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testneweventbridgestepfunctions2StateMachineAD0DC5E7",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionsFailed",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testneweventbridgestepfunctions2ExecutionThrottledAlarm03E964B2": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that throttled exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testneweventbridgestepfunctions2StateMachineAD0DC5E7",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionThrottled",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testneweventbridgestepfunctions2StateMachineAD0DC5E7": Object {
      "DependsOn": Array [
        "testneweventbridgestepfunctions2StateMachineRoleDefaultPolicy46E34E47",
        "testneweventbridgestepfunctions2StateMachineRoleA4B88ACC",
      ],
      "Properties": Object {
        "DefinitionString": "{\\"StartAt\\":\\"StartState2\\",\\"States\\":{\\"StartState2\\":{\\"Type\\":\\"Pass\\",\\"End\\":true}}}",
        "LoggingConfiguration": Object {
          "Destinations": Array [
            Object {
              "CloudWatchLogsLogGroup": Object {
                "LogGroupArn": Object {
                  "Fn::GetAtt": Array [
                    "testneweventbridgestepfunctions2StateMachineLogGroupC4B1019B",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ERROR",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "testneweventbridgestepfunctions2StateMachineRoleA4B88ACC",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "testneweventbridgestepfunctions2StateMachineLogGroupC4B1019B": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            Object {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Properties": Object {
        "LogGroupName": "/aws/vendedlogs/states/defaulttestneweventbridgestepfunctions2statemachinelogfb5fb852e9ef",
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "testneweventbridgestepfunctions2StateMachineRoleA4B88ACC": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "states.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testneweventbridgestepfunctions2StateMachineRoleDefaultPolicy46E34E47": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "The 'LogDelivery' actions do not support resource-level authorizations",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testneweventbridgestepfunctions2StateMachineRoleDefaultPolicy46E34E47",
        "Roles": Array [
          Object {
            "Ref": "testneweventbridgestepfunctions2StateMachineRoleA4B88ACC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;

exports[`snapshot test EventbridgeToStepfunctions default params 1`] = `
Object {
  "Resources": Object {
    "testeventbridgestepfunctionsEventsRuleD6900736": Object {
      "Properties": Object {
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "testeventbridgestepfunctionsStateMachineDD09BCB6",
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "testeventbridgestepfunctionsEventsRuleRoleFFAAD2A8",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "testeventbridgestepfunctionsEventsRuleRoleDefaultPolicy66B6953F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "testeventbridgestepfunctionsStateMachineDD09BCB6",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testeventbridgestepfunctionsEventsRuleRoleDefaultPolicy66B6953F",
        "Roles": Array [
          Object {
            "Ref": "testeventbridgestepfunctionsEventsRuleRoleFFAAD2A8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testeventbridgestepfunctionsEventsRuleRoleFFAAD2A8": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testeventbridgestepfunctionsExecutionAbortedAlarmAE0D19A9": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that aborted exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testeventbridgestepfunctionsStateMachineDD09BCB6",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionsAborted",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testeventbridgestepfunctionsExecutionFailedAlarmA06327F5": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that failed exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testeventbridgestepfunctionsStateMachineDD09BCB6",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionsFailed",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testeventbridgestepfunctionsExecutionThrottledAlarm2BC06B74": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that throttled exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testeventbridgestepfunctionsStateMachineDD09BCB6",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionThrottled",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testeventbridgestepfunctionsStateMachineDD09BCB6": Object {
      "DependsOn": Array [
        "testeventbridgestepfunctionsStateMachineRoleDefaultPolicyD88C6FFD",
        "testeventbridgestepfunctionsStateMachineRoleB9F78693",
      ],
      "Properties": Object {
        "DefinitionString": "{\\"StartAt\\":\\"StartState\\",\\"States\\":{\\"StartState\\":{\\"Type\\":\\"Pass\\",\\"End\\":true}}}",
        "LoggingConfiguration": Object {
          "Destinations": Array [
            Object {
              "CloudWatchLogsLogGroup": Object {
                "LogGroupArn": Object {
                  "Fn::GetAtt": Array [
                    "testeventbridgestepfunctionsStateMachineLogGroup826A5B74",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ERROR",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "testeventbridgestepfunctionsStateMachineRoleB9F78693",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "testeventbridgestepfunctionsStateMachineLogGroup826A5B74": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            Object {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Properties": Object {
        "LogGroupName": "/aws/vendedlogs/states/defaulttesteventbridgestepfunctionsstatemachineloge61513a7c3d9",
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "testeventbridgestepfunctionsStateMachineRoleB9F78693": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "states.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testeventbridgestepfunctionsStateMachineRoleDefaultPolicyD88C6FFD": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "The 'LogDelivery' actions do not support resource-level authorizations",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testeventbridgestepfunctionsStateMachineRoleDefaultPolicyD88C6FFD",
        "Roles": Array [
          Object {
            "Ref": "testeventbridgestepfunctionsStateMachineRoleB9F78693",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;

exports[`snapshot test EventbridgeToStepfunctions existing event bus params 1`] = `
Object {
  "Resources": Object {
    "testexistingeventbridgestepfunctionsEventsRuleA20DE119": Object {
      "Properties": Object {
        "EventBusName": Object {
          "Ref": "testexistingneweventbusB9898D2B",
        },
        "EventPattern": Object {
          "source": Array [
            "solutionsconstructs",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "testexistingeventbridgestepfunctionsStateMachine86B15A44",
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "testexistingeventbridgestepfunctionsEventsRuleRole27A71B6C",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "testexistingeventbridgestepfunctionsEventsRuleRole27A71B6C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testexistingeventbridgestepfunctionsEventsRuleRoleDefaultPolicy8EC02AA4": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "testexistingeventbridgestepfunctionsStateMachine86B15A44",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testexistingeventbridgestepfunctionsEventsRuleRoleDefaultPolicy8EC02AA4",
        "Roles": Array [
          Object {
            "Ref": "testexistingeventbridgestepfunctionsEventsRuleRole27A71B6C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testexistingeventbridgestepfunctionsExecutionAbortedAlarmBE39DD0B": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that aborted exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testexistingeventbridgestepfunctionsStateMachine86B15A44",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionsAborted",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testexistingeventbridgestepfunctionsExecutionFailedAlarm1375C3D6": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that failed exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testexistingeventbridgestepfunctionsStateMachine86B15A44",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionsFailed",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testexistingeventbridgestepfunctionsExecutionThrottledAlarm9180B0CE": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that throttled exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testexistingeventbridgestepfunctionsStateMachine86B15A44",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionThrottled",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testexistingeventbridgestepfunctionsStateMachine86B15A44": Object {
      "DependsOn": Array [
        "testexistingeventbridgestepfunctionsStateMachineRoleDefaultPolicy37FA170E",
        "testexistingeventbridgestepfunctionsStateMachineRole43DDAE0D",
      ],
      "Properties": Object {
        "DefinitionString": "{\\"StartAt\\":\\"StartState\\",\\"States\\":{\\"StartState\\":{\\"Type\\":\\"Pass\\",\\"End\\":true}}}",
        "LoggingConfiguration": Object {
          "Destinations": Array [
            Object {
              "CloudWatchLogsLogGroup": Object {
                "LogGroupArn": Object {
                  "Fn::GetAtt": Array [
                    "testexistingeventbridgestepfunctionsStateMachineLogGroup491A5CAE",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ERROR",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "testexistingeventbridgestepfunctionsStateMachineRole43DDAE0D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "testexistingeventbridgestepfunctionsStateMachineLogGroup491A5CAE": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            Object {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Properties": Object {
        "LogGroupName": "/aws/vendedlogs/states/defaulttestexistingeventbridgestepfunctionsstatemachinelog9db3ac073f4e",
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "testexistingeventbridgestepfunctionsStateMachineRole43DDAE0D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "states.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testexistingeventbridgestepfunctionsStateMachineRoleDefaultPolicy37FA170E": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "The 'LogDelivery' actions do not support resource-level authorizations",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testexistingeventbridgestepfunctionsStateMachineRoleDefaultPolicy37FA170E",
        "Roles": Array [
          Object {
            "Ref": "testexistingeventbridgestepfunctionsStateMachineRole43DDAE0D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testexistingneweventbusB9898D2B": Object {
      "Properties": Object {
        "Name": "testexistingneweventbus",
      },
      "Type": "AWS::Events::EventBus",
    },
  },
}
`;
