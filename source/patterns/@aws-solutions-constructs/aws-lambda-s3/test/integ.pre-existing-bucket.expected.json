{
  "Description": "Integration Test for aws-lambda-s3",
  "Resources": {
    "scrapBucketB11863B7": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true"
          }
        ],
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W51",
              "reason": "This S3 bucket is created for unit/ integration testing purposes only and not part of       the actual construct implementation"
            },
            {
              "id": "W35",
              "reason": "This S3 bucket is created for unit/ integration testing purposes only and not part of       the actual construct implementation"
            },
            {
              "id": "W41",
              "reason": "This S3 bucket is created for unit/ integration testing purposes only and not part of       the actual construct"
            }
          ]
        }
      }
    },
    "scrapBucketPolicy189B0607": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "scrapBucketB11863B7"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "scrapBucketB11863B7",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "scrapBucketB11863B7",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "scrapBucketAutoDeleteObjectsCustomResourceFFFC3275": {
      "Type": "Custom::S3AutoDeleteObjects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "scrapBucketB11863B7"
        }
      },
      "DependsOn": [
        "scrapBucketPolicy189B0607"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ]
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "350185a1069fa20a23a583e20c77f6844218bd73097902362dc94f1a108f5d89.zip"
        },
        "Timeout": 900,
        "MemorySize": 128,
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn"
          ]
        },
        "Runtime": "nodejs16.x",
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "scrapBucketB11863B7"
              },
              " S3 bucket."
            ]
          ]
        }
      },
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "CDK generated custom resource"
            },
            {
              "id": "W89",
              "reason": "CDK generated custom resource"
            },
            {
              "id": "W92",
              "reason": "CDK generated custom resource"
            }
          ]
        }
      }
    },
    "testlambdas3preexistingbucketLambdaFunctionServiceRole9AC7CED0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      }
    },
    "testlambdas3preexistingbucketLambdaFunctionServiceRoleDefaultPolicy1B2212F1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "scrapBucketB11863B7"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "scrapBucketB11863B7"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "testlambdas3preexistingbucketLambdaFunctionServiceRoleDefaultPolicy1B2212F1",
        "Roles": [
          {
            "Ref": "testlambdas3preexistingbucketLambdaFunctionServiceRole9AC7CED0"
          }
        ]
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "testlambdas3preexistingbucketLambdaFunctionA56FB2C7": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "0904d3723480fed2daf7885caa427b930881caae6879d1e6b0d395020173ef6f.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "testlambdas3preexistingbucketLambdaFunctionServiceRole9AC7CED0",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "S3_BUCKET_NAME": {
              "Ref": "scrapBucketB11863B7"
            }
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs16.x",
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "testlambdas3preexistingbucketLambdaFunctionServiceRoleDefaultPolicy1B2212F1",
        "testlambdas3preexistingbucketLambdaFunctionServiceRole9AC7CED0"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    }
  },
  "Mappings": {
    "DefaultCrNodeVersionMap": {
      "af-south-1": {
        "value": "nodejs16.x"
      },
      "ap-east-1": {
        "value": "nodejs16.x"
      },
      "ap-northeast-1": {
        "value": "nodejs16.x"
      },
      "ap-northeast-2": {
        "value": "nodejs16.x"
      },
      "ap-northeast-3": {
        "value": "nodejs16.x"
      },
      "ap-south-1": {
        "value": "nodejs16.x"
      },
      "ap-south-2": {
        "value": "nodejs16.x"
      },
      "ap-southeast-1": {
        "value": "nodejs16.x"
      },
      "ap-southeast-2": {
        "value": "nodejs16.x"
      },
      "ap-southeast-3": {
        "value": "nodejs16.x"
      },
      "ca-central-1": {
        "value": "nodejs16.x"
      },
      "cn-north-1": {
        "value": "nodejs16.x"
      },
      "cn-northwest-1": {
        "value": "nodejs16.x"
      },
      "eu-central-1": {
        "value": "nodejs16.x"
      },
      "eu-central-2": {
        "value": "nodejs16.x"
      },
      "eu-north-1": {
        "value": "nodejs16.x"
      },
      "eu-south-1": {
        "value": "nodejs16.x"
      },
      "eu-south-2": {
        "value": "nodejs16.x"
      },
      "eu-west-1": {
        "value": "nodejs16.x"
      },
      "eu-west-2": {
        "value": "nodejs16.x"
      },
      "eu-west-3": {
        "value": "nodejs16.x"
      },
      "me-central-1": {
        "value": "nodejs16.x"
      },
      "me-south-1": {
        "value": "nodejs16.x"
      },
      "sa-east-1": {
        "value": "nodejs16.x"
      },
      "us-east-1": {
        "value": "nodejs16.x"
      },
      "us-east-2": {
        "value": "nodejs16.x"
      },
      "us-gov-east-1": {
        "value": "nodejs16.x"
      },
      "us-gov-west-1": {
        "value": "nodejs16.x"
      },
      "us-iso-east-1": {
        "value": "nodejs14.x"
      },
      "us-iso-west-1": {
        "value": "nodejs14.x"
      },
      "us-isob-east-1": {
        "value": "nodejs14.x"
      },
      "us-west-1": {
        "value": "nodejs16.x"
      },
      "us-west-2": {
        "value": "nodejs16.x"
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}