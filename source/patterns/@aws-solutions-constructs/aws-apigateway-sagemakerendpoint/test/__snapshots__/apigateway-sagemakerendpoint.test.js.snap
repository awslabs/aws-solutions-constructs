// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test deployment w/ overwritten properties 1`] = `
Object {
  "Outputs": Object {
    "apigatewaysagemakerendpointRestApiEndpointEF77C139": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "apigatewaysagemakerendpointRestApiF430F7C7",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "apigatewaysagemakerendpointRestApiDeploymentStageprod45323140",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Resources": Object {
    "apigatewayroleE6D48DBD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "existing role for SageMaker integration",
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "sagemaker:InvokeEndpoint",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":endpoint/my-endpoint",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "InvokePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "apigatewaysagemakerendpointApiAccessLogGroupDBD19445": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "apigatewaysagemakerendpointLambdaRestApiAccount1E510B70": Object {
      "DependsOn": Array [
        "apigatewaysagemakerendpointRestApiF430F7C7",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "apigatewaysagemakerendpointLambdaRestApiCloudWatchRole6C816D4C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "apigatewaysagemakerendpointLambdaRestApiCloudWatchRole6C816D4C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "apigatewaysagemakerendpointRestApiDeployment6524D6DC087faef8ff6b595bfd57b5ff8e9e5cc7": Object {
      "DependsOn": Array [
        "apigatewaysagemakerendpointRestApimyresourcemyparamGETD236BC79",
        "apigatewaysagemakerendpointRestApimyresourcemyparam67E19507",
        "apigatewaysagemakerendpointRestApimyresourceB85831BC",
        "apigatewaysagemakerendpointRestApirequestvalidator390ABFEC",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "apigatewaysagemakerendpointRestApiF430F7C7",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "apigatewaysagemakerendpointRestApiDeploymentStageprod45323140": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "apigatewaysagemakerendpointApiAccessLogGroupDBD19445",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"user\\":\\"$context.identity.user\\",\\"caller\\":\\"$context.identity.caller\\",\\"requestTime\\":\\"$context.requestTime\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}",
        },
        "DeploymentId": Object {
          "Ref": "apigatewaysagemakerendpointRestApiDeployment6524D6DC087faef8ff6b595bfd57b5ff8e9e5cc7",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
          Object {
            "HttpMethod": "*",
            "ResourcePath": "/*",
            "ThrottlingBurstLimit": 25,
            "ThrottlingRateLimit": 100,
          },
        ],
        "RestApiId": Object {
          "Ref": "apigatewaysagemakerendpointRestApiF430F7C7",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "apigatewaysagemakerendpointRestApiF430F7C7": Object {
      "Properties": Object {
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "Name": "my-api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "apigatewaysagemakerendpointRestApiUsagePlanBD6781A3": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "apigatewaysagemakerendpointRestApiF430F7C7",
            },
            "Stage": Object {
              "Ref": "apigatewaysagemakerendpointRestApiDeploymentStageprod45323140",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "apigatewaysagemakerendpointRestApimyresourceB85831BC": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "apigatewaysagemakerendpointRestApiF430F7C7",
            "RootResourceId",
          ],
        },
        "PathPart": "my-resource",
        "RestApiId": Object {
          "Ref": "apigatewaysagemakerendpointRestApiF430F7C7",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "apigatewaysagemakerendpointRestApimyresourcemyparam67E19507": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "apigatewaysagemakerendpointRestApimyresourceB85831BC",
        },
        "PathPart": "{my_param}",
        "RestApiId": Object {
          "Ref": "apigatewaysagemakerendpointRestApiF430F7C7",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "apigatewaysagemakerendpointRestApimyresourcemyparamGETD236BC79": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewayroleE6D48DBD",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "my-response-vtl-template",
              },
              "StatusCode": "200",
            },
            Object {
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "SelectionPattern": "4\\\\d{2}",
              "StatusCode": "400",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
          },
          "RequestTemplates": Object {
            "application/json": "my-request-vtl-template",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":runtime.sagemaker:path/endpoints/my-endpoint/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "400",
          },
        ],
        "RequestValidatorId": Object {
          "Ref": "apigatewaysagemakerendpointRestApirequestvalidator390ABFEC",
        },
        "ResourceId": Object {
          "Ref": "apigatewaysagemakerendpointRestApimyresourcemyparam67E19507",
        },
        "RestApiId": Object {
          "Ref": "apigatewaysagemakerendpointRestApiF430F7C7",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "apigatewaysagemakerendpointRestApirequestvalidator390ABFEC": Object {
      "Properties": Object {
        "Name": "request-param-validator",
        "RestApiId": Object {
          "Ref": "apigatewaysagemakerendpointRestApiF430F7C7",
        },
        "ValidateRequestParameters": true,
      },
      "Type": "AWS::ApiGateway::RequestValidator",
    },
  },
}
`;

exports[`Test minimal deployment snapshot 1`] = `
Object {
  "Outputs": Object {
    "apigatewaysagemakerendpointRestApiEndpointEF77C139": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "apigatewaysagemakerendpointRestApiF430F7C7",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "apigatewaysagemakerendpointRestApiDeploymentStageprod45323140",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Resources": Object {
    "apigatewaysagemakerendpointApiAccessLogGroupDBD19445": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "apigatewaysagemakerendpointInvokeEndpointPolicyCF496123": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sagemaker:InvokeEndpoint",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":sagemaker:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":endpoint/my-endpoint",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "apigatewaysagemakerendpointInvokeEndpointPolicyCF496123",
        "Roles": Array [
          Object {
            "Ref": "apigatewaysagemakerendpointapigatewayrole5B5E1DAC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "apigatewaysagemakerendpointLambdaRestApiAccount1E510B70": Object {
      "DependsOn": Array [
        "apigatewaysagemakerendpointRestApiF430F7C7",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "apigatewaysagemakerendpointLambdaRestApiCloudWatchRole6C816D4C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "apigatewaysagemakerendpointLambdaRestApiCloudWatchRole6C816D4C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "apigatewaysagemakerendpointRestApiDeployment6524D6DCb0047bb01eb8788f969621dc25119fb9": Object {
      "DependsOn": Array [
        "apigatewaysagemakerendpointRestApimyparamGET9A23305A",
        "apigatewaysagemakerendpointRestApimyparam824FE1D8",
        "apigatewaysagemakerendpointRestApirequestvalidator390ABFEC",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "apigatewaysagemakerendpointRestApiF430F7C7",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "apigatewaysagemakerendpointRestApiDeploymentStageprod45323140": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "apigatewaysagemakerendpointApiAccessLogGroupDBD19445",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"user\\":\\"$context.identity.user\\",\\"caller\\":\\"$context.identity.caller\\",\\"requestTime\\":\\"$context.requestTime\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}",
        },
        "DeploymentId": Object {
          "Ref": "apigatewaysagemakerendpointRestApiDeployment6524D6DCb0047bb01eb8788f969621dc25119fb9",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "apigatewaysagemakerendpointRestApiF430F7C7",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "apigatewaysagemakerendpointRestApiF430F7C7": Object {
      "Properties": Object {
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "Name": "RestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "apigatewaysagemakerendpointRestApiUsagePlanBD6781A3": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "apigatewaysagemakerendpointRestApiF430F7C7",
            },
            "Stage": Object {
              "Ref": "apigatewaysagemakerendpointRestApiDeploymentStageprod45323140",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "apigatewaysagemakerendpointRestApimyparam824FE1D8": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "apigatewaysagemakerendpointRestApiF430F7C7",
            "RootResourceId",
          ],
        },
        "PathPart": "{my_param}",
        "RestApiId": Object {
          "Ref": "apigatewaysagemakerendpointRestApiF430F7C7",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "apigatewaysagemakerendpointRestApimyparamGET9A23305A": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewaysagemakerendpointapigatewayrole5B5E1DAC",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "SelectionPattern": "5\\\\d{2}",
              "StatusCode": "500",
            },
            Object {
              "SelectionPattern": "4\\\\d{2}",
              "StatusCode": "400",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/json'",
          },
          "RequestTemplates": Object {
            "application/json": "my-request-vtl-template",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":runtime.sagemaker:path/endpoints/my-endpoint/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "500",
          },
          Object {
            "StatusCode": "400",
          },
        ],
        "RequestValidatorId": Object {
          "Ref": "apigatewaysagemakerendpointRestApirequestvalidator390ABFEC",
        },
        "ResourceId": Object {
          "Ref": "apigatewaysagemakerendpointRestApimyparam824FE1D8",
        },
        "RestApiId": Object {
          "Ref": "apigatewaysagemakerendpointRestApiF430F7C7",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "apigatewaysagemakerendpointRestApirequestvalidator390ABFEC": Object {
      "Properties": Object {
        "Name": "request-param-validator",
        "RestApiId": Object {
          "Ref": "apigatewaysagemakerendpointRestApiF430F7C7",
        },
        "ValidateRequestParameters": true,
      },
      "Type": "AWS::ApiGateway::RequestValidator",
    },
    "apigatewaysagemakerendpointapigatewayrole5B5E1DAC": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
