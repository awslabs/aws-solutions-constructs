// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`check eventbus property, snapshot & eventbus exists 1`] = `
Object {
  "Resources": Object {
    "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWCustomEventBus9A8EB44C": Object {
      "Properties": Object {
        "Name": "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWCustomEventBus96725ED9",
      },
      "Type": "AWS::Events::EventBus",
    },
    "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWEventsRule9CBD73A7": Object {
      "Properties": Object {
        "EventBusName": Object {
          "Ref": "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWCustomEventBus9A8EB44C",
        },
        "EventPattern": Object {
          "source": Array [
            "solutionsconstructs",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWStateMachine985605C1",
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWEventsRuleRole43E83332",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWEventsRuleRole43E83332": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWEventsRuleRoleDefaultPolicy88C45E8E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWStateMachine985605C1",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWEventsRuleRoleDefaultPolicy88C45E8E",
        "Roles": Array [
          Object {
            "Ref": "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWEventsRuleRole43E83332",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWExecutionAbortedAlarm3EC27335": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that aborted exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWStateMachine985605C1",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionsAborted",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWExecutionFailedAlarmF5EBDDC8": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that failed exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWStateMachine985605C1",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionsFailed",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWExecutionThrottledAlarm01F170A3": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that throttled exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWStateMachine985605C1",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionThrottled",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWStateMachine985605C1": Object {
      "DependsOn": Array [
        "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWStateMachineRoleDefaultPolicyA62A4445",
        "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWStateMachineRoleE4E8523D",
      ],
      "Properties": Object {
        "DefinitionString": "{\\"StartAt\\":\\"StartState\\",\\"States\\":{\\"StartState\\":{\\"Type\\":\\"Pass\\",\\"End\\":true}}}",
        "LoggingConfiguration": Object {
          "Destinations": Array [
            Object {
              "CloudWatchLogsLogGroup": Object {
                "LogGroupArn": Object {
                  "Fn::GetAtt": Array [
                    "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWStateMachineLogGroupA9B344FF",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ERROR",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWStateMachineRoleE4E8523D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWStateMachineLogGroupA9B344FF": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            Object {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Properties": Object {
        "LogGroupName": "/aws/vendedlogs/states/defaulttesteventrulesstepfunctionseventbuswstatemachinelog45e67f327ac7",
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWStateMachineRoleDefaultPolicyA62A4445": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "The 'LogDelivery' actions do not support resource-level authorizations",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWStateMachineRoleDefaultPolicyA62A4445",
        "Roles": Array [
          Object {
            "Ref": "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWStateMachineRoleE4E8523D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testeventrulesstepfunctionseventbustesteventrulesstepfunctionseventbusWStateMachineRoleE4E8523D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "states.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;

exports[`check multiple constructs in a single stack 1`] = `
Object {
  "Resources": Object {
    "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WCustomEventBus1DFFF478": Object {
      "Properties": Object {
        "Name": "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WCustomEventBus87A0BE3B",
      },
      "Type": "AWS::Events::EventBus",
    },
    "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WEventsRuleDF6D8C33": Object {
      "Properties": Object {
        "EventBusName": Object {
          "Ref": "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WCustomEventBus1DFFF478",
        },
        "EventPattern": Object {
          "source": Array [
            "solutionsconstructs",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WStateMachine0B65F147",
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WEventsRuleRole98D83521",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WEventsRuleRole98D83521": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WEventsRuleRoleDefaultPolicy72754402": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WStateMachine0B65F147",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WEventsRuleRoleDefaultPolicy72754402",
        "Roles": Array [
          Object {
            "Ref": "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WEventsRuleRole98D83521",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WExecutionAbortedAlarmAFF2B2A4": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that aborted exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WStateMachine0B65F147",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionsAborted",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WExecutionFailedAlarmA2DD093E": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that failed exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WStateMachine0B65F147",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionsFailed",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WExecutionThrottledAlarm9DFC597D": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that throttled exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WStateMachine0B65F147",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionThrottled",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WStateMachine0B65F147": Object {
      "DependsOn": Array [
        "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WStateMachineRoleDefaultPolicyC52599AF",
        "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WStateMachineRole05A37DB2",
      ],
      "Properties": Object {
        "DefinitionString": "{\\"StartAt\\":\\"StartState1\\",\\"States\\":{\\"StartState1\\":{\\"Type\\":\\"Pass\\",\\"End\\":true}}}",
        "LoggingConfiguration": Object {
          "Destinations": Array [
            Object {
              "CloudWatchLogsLogGroup": Object {
                "LogGroupArn": Object {
                  "Fn::GetAtt": Array [
                    "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WStateMachineLogGroup8814D6B7",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ERROR",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WStateMachineRole05A37DB2",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WStateMachineLogGroup8814D6B7": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            Object {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Properties": Object {
        "LogGroupName": "/aws/vendedlogs/states/defaulttestneweventsrulestepfunctions1wstatemachinelog97c26b319582",
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WStateMachineRole05A37DB2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "states.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WStateMachineRoleDefaultPolicyC52599AF": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "The 'LogDelivery' actions do not support resource-level authorizations",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WStateMachineRoleDefaultPolicyC52599AF",
        "Roles": Array [
          Object {
            "Ref": "testneweventsrulestepfunctions1testneweventsrulestepfunctions1WStateMachineRole05A37DB2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WCustomEventBus78F90360": Object {
      "Properties": Object {
        "Name": "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WCustomEventBusE072453C",
      },
      "Type": "AWS::Events::EventBus",
    },
    "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WEventsRule6651A8FD": Object {
      "Properties": Object {
        "EventBusName": Object {
          "Ref": "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WCustomEventBus78F90360",
        },
        "EventPattern": Object {
          "source": Array [
            "solutionsconstructs",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WStateMachine19B33D06",
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WEventsRuleRole61AF2B20",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WEventsRuleRole61AF2B20": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WEventsRuleRoleDefaultPolicy8B46CAA2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WStateMachine19B33D06",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WEventsRuleRoleDefaultPolicy8B46CAA2",
        "Roles": Array [
          Object {
            "Ref": "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WEventsRuleRole61AF2B20",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WExecutionAbortedAlarm308A499D": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that aborted exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WStateMachine19B33D06",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionsAborted",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WExecutionFailedAlarm9A88CE2D": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that failed exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WStateMachine19B33D06",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionsFailed",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WExecutionThrottledAlarmD30B2A78": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that throttled exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WStateMachine19B33D06",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionThrottled",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WStateMachine19B33D06": Object {
      "DependsOn": Array [
        "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WStateMachineRoleDefaultPolicy1C779334",
        "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WStateMachineRole749D8D3F",
      ],
      "Properties": Object {
        "DefinitionString": "{\\"StartAt\\":\\"StartState2\\",\\"States\\":{\\"StartState2\\":{\\"Type\\":\\"Pass\\",\\"End\\":true}}}",
        "LoggingConfiguration": Object {
          "Destinations": Array [
            Object {
              "CloudWatchLogsLogGroup": Object {
                "LogGroupArn": Object {
                  "Fn::GetAtt": Array [
                    "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WStateMachineLogGroup790F52EC",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ERROR",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WStateMachineRole749D8D3F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WStateMachineLogGroup790F52EC": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            Object {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Properties": Object {
        "LogGroupName": "/aws/vendedlogs/states/defaulttestneweventsrulestepfunctions2wstatemachinelogf9e3049f13b4",
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WStateMachineRole749D8D3F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "states.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WStateMachineRoleDefaultPolicy1C779334": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "The 'LogDelivery' actions do not support resource-level authorizations",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WStateMachineRoleDefaultPolicy1C779334",
        "Roles": Array [
          Object {
            "Ref": "testneweventsrulestepfunctions2testneweventsrulestepfunctions2WStateMachineRole749D8D3F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;

exports[`snapshot test EventsRuleToStepFunction default params 1`] = `
Object {
  "Resources": Object {
    "testeventsrulestepfunctiontesteventsrulestepfunctionWEventsRule8B362B1C": Object {
      "Properties": Object {
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "testeventsrulestepfunctiontesteventsrulestepfunctionWStateMachine64FD5A64",
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "testeventsrulestepfunctiontesteventsrulestepfunctionWEventsRuleRole992B57E4",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "testeventsrulestepfunctiontesteventsrulestepfunctionWEventsRuleRole992B57E4": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testeventsrulestepfunctiontesteventsrulestepfunctionWEventsRuleRoleDefaultPolicyFBE4056E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "testeventsrulestepfunctiontesteventsrulestepfunctionWStateMachine64FD5A64",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testeventsrulestepfunctiontesteventsrulestepfunctionWEventsRuleRoleDefaultPolicyFBE4056E",
        "Roles": Array [
          Object {
            "Ref": "testeventsrulestepfunctiontesteventsrulestepfunctionWEventsRuleRole992B57E4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testeventsrulestepfunctiontesteventsrulestepfunctionWExecutionAbortedAlarm3FAB3CF0": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that aborted exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testeventsrulestepfunctiontesteventsrulestepfunctionWStateMachine64FD5A64",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionsAborted",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testeventsrulestepfunctiontesteventsrulestepfunctionWExecutionFailedAlarm6E85FA5A": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that failed exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testeventsrulestepfunctiontesteventsrulestepfunctionWStateMachine64FD5A64",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionsFailed",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testeventsrulestepfunctiontesteventsrulestepfunctionWExecutionThrottledAlarm4368F45A": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that throttled exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testeventsrulestepfunctiontesteventsrulestepfunctionWStateMachine64FD5A64",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionThrottled",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testeventsrulestepfunctiontesteventsrulestepfunctionWStateMachine64FD5A64": Object {
      "DependsOn": Array [
        "testeventsrulestepfunctiontesteventsrulestepfunctionWStateMachineRoleDefaultPolicy517315B3",
        "testeventsrulestepfunctiontesteventsrulestepfunctionWStateMachineRole594689FA",
      ],
      "Properties": Object {
        "DefinitionString": "{\\"StartAt\\":\\"StartState\\",\\"States\\":{\\"StartState\\":{\\"Type\\":\\"Pass\\",\\"End\\":true}}}",
        "LoggingConfiguration": Object {
          "Destinations": Array [
            Object {
              "CloudWatchLogsLogGroup": Object {
                "LogGroupArn": Object {
                  "Fn::GetAtt": Array [
                    "testeventsrulestepfunctiontesteventsrulestepfunctionWStateMachineLogGroupA5BA56B5",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ERROR",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "testeventsrulestepfunctiontesteventsrulestepfunctionWStateMachineRole594689FA",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "testeventsrulestepfunctiontesteventsrulestepfunctionWStateMachineLogGroupA5BA56B5": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            Object {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Properties": Object {
        "LogGroupName": "/aws/vendedlogs/states/defaulttesteventsrulestepfunctionwstatemachineloge7a646a2b77b",
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "testeventsrulestepfunctiontesteventsrulestepfunctionWStateMachineRole594689FA": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "states.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testeventsrulestepfunctiontesteventsrulestepfunctionWStateMachineRoleDefaultPolicy517315B3": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "The 'LogDelivery' actions do not support resource-level authorizations",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testeventsrulestepfunctiontesteventsrulestepfunctionWStateMachineRoleDefaultPolicy517315B3",
        "Roles": Array [
          Object {
            "Ref": "testeventsrulestepfunctiontesteventsrulestepfunctionWStateMachineRole594689FA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;

exports[`snapshot test EventsRuleToStepfunctions existing event bus params 1`] = `
Object {
  "Resources": Object {
    "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWEventsRule85E7CC2B": Object {
      "Properties": Object {
        "EventBusName": Object {
          "Ref": "testexistingneweventbusB9898D2B",
        },
        "EventPattern": Object {
          "source": Array [
            "solutionsconstructs",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWStateMachine08CB895B",
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWEventsRuleRole0F7C77E1",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWEventsRuleRole0F7C77E1": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWEventsRuleRoleDefaultPolicy0F0C57E0": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWStateMachine08CB895B",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWEventsRuleRoleDefaultPolicy0F0C57E0",
        "Roles": Array [
          Object {
            "Ref": "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWEventsRuleRole0F7C77E1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWExecutionAbortedAlarm25B0859F": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that aborted exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWStateMachine08CB895B",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionsAborted",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWExecutionFailedAlarm212909CA": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that failed exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWStateMachine08CB895B",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionsFailed",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWExecutionThrottledAlarmD70DAD50": Object {
      "Properties": Object {
        "AlarmDescription": "Alarm for the number of executions that throttled exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "StateMachineArn",
            "Value": Object {
              "Ref": "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWStateMachine08CB895B",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionThrottled",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWStateMachine08CB895B": Object {
      "DependsOn": Array [
        "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWStateMachineRoleDefaultPolicyF4942FB8",
        "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWStateMachineRole6468A596",
      ],
      "Properties": Object {
        "DefinitionString": "{\\"StartAt\\":\\"StartState\\",\\"States\\":{\\"StartState\\":{\\"Type\\":\\"Pass\\",\\"End\\":true}}}",
        "LoggingConfiguration": Object {
          "Destinations": Array [
            Object {
              "CloudWatchLogsLogGroup": Object {
                "LogGroupArn": Object {
                  "Fn::GetAtt": Array [
                    "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWStateMachineLogGroupF95FB577",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ERROR",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWStateMachineRole6468A596",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWStateMachineLogGroupF95FB577": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            Object {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Properties": Object {
        "LogGroupName": "/aws/vendedlogs/states/defaulttestexistingeventsrulestepfunctionswstatemachinelog84f35cce0b0f",
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWStateMachineRole6468A596": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "states.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWStateMachineRoleDefaultPolicyF4942FB8": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "The 'LogDelivery' actions do not support resource-level authorizations",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWStateMachineRoleDefaultPolicyF4942FB8",
        "Roles": Array [
          Object {
            "Ref": "testexistingeventsrulestepfunctionstestexistingeventsrulestepfunctionsWStateMachineRole6468A596",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testexistingneweventbusB9898D2B": Object {
      "Properties": Object {
        "Name": "testexistingneweventbus",
      },
      "Type": "AWS::Events::EventBus",
    },
  },
}
`;
