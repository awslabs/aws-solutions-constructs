{
  "Description": "Integration Test for aws-lambda-sagemakerendpoint",
  "Resources": {
    "SagemakerRole5FDB64E1": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "sagemaker.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSageMakerFullAccess"
              ]
            ]
          }
        ]
      }
    },
    "SagemakerRoleDefaultPolicy9DD21C3C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject",
                "s3:PutObject",
                "s3:DeleteObject",
                "s3:ListBucket"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SagemakerRoleDefaultPolicy9DD21C3C",
        "Roles": [
          {
            "Ref": "SagemakerRole5FDB64E1"
          }
        ]
      }
    },
    "testlambdasagemakerReplaceModelDefaultSecurityGroup7284AA24": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "test-lambda-sagemakerendpoint/test-lambda-sagemaker/ReplaceModelDefaultSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "Vpc8378EB38",
                "CidrBlock"
              ]
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "Vpc8378EB38",
                      "CidrBlock"
                    ]
                  },
                  ":443"
                ]
              ]
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W5",
              "reason": "Egress of 0.0.0.0/0 is default and generally considered OK"
            },
            {
              "id": "W40",
              "reason": "Egress IPProtocol of -1 is default and generally considered OK"
            }
          ]
        }
      }
    },
    "testlambdasagemakerSageMakerModel27C04CC7": {
      "Type": "AWS::SageMaker::Model",
      "Properties": {
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "SagemakerRole5FDB64E1",
            "Arn"
          ]
        },
        "PrimaryContainer": {
          "Image": "<AccountId>.dkr.ecr.<region>.amazonaws.com/linear-learner:latest",
          "ModelDataUrl": "s3://<bucket-name>/<prefix>/model.tar.gz"
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "testlambdasagemakerReplaceModelDefaultSecurityGroup7284AA24",
                "GroupId"
              ]
            }
          ],
          "Subnets": [
            {
              "Ref": "VpcIsolatedSubnet1SubnetE48C5737"
            },
            {
              "Ref": "VpcIsolatedSubnet2Subnet16364B91"
            },
            {
              "Ref": "VpcIsolatedSubnet3Subnet6840A2D4"
            }
          ]
        }
      },
      "DependsOn": [
        "SagemakerRoleDefaultPolicy9DD21C3C",
        "SagemakerRole5FDB64E1"
      ]
    },
    "testlambdasagemakerEncryptionKey2AACF9E0": {
      "Type": "AWS::KMS::Key",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey",
                "kms:TagResource",
                "kms:UntagResource"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "EnableKeyRotation": true
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "testlambdasagemakerSageMakerEndpointConfig56A24ED7": {
      "Type": "AWS::SageMaker::EndpointConfig",
      "Properties": {
        "ProductionVariants": [
          {
            "InitialInstanceCount": 1,
            "InitialVariantWeight": 1,
            "InstanceType": "ml.m4.xlarge",
            "ModelName": {
              "Fn::GetAtt": [
                "testlambdasagemakerSageMakerModel27C04CC7",
                "ModelName"
              ]
            },
            "VariantName": "AllTraffic"
          }
        ],
        "KmsKeyId": {
          "Ref": "testlambdasagemakerEncryptionKey2AACF9E0"
        }
      },
      "DependsOn": [
        "testlambdasagemakerSageMakerModel27C04CC7"
      ]
    },
    "testlambdasagemakerSageMakerEndpoint34AA4AB2": {
      "Type": "AWS::SageMaker::Endpoint",
      "Properties": {
        "EndpointConfigName": {
          "Fn::GetAtt": [
            "testlambdasagemakerSageMakerEndpointConfig56A24ED7",
            "EndpointConfigName"
          ]
        }
      },
      "DependsOn": [
        "testlambdasagemakerSageMakerEndpointConfig56A24ED7"
      ]
    },
    "testlambdasagemakerLambdaFunctionServiceRole4BA038CB": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      }
    },
    "testlambdasagemakerLambdaFunctionServiceRoleDefaultPolicy208C2512": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:CreateNetworkInterface",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DeleteNetworkInterface",
                "ec2:AssignPrivateIpAddresses",
                "ec2:UnassignPrivateIpAddresses"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "sagemaker:InvokeEndpoint",
              "Effect": "Allow",
              "Resource": {
                "Ref": "testlambdasagemakerSageMakerEndpoint34AA4AB2"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "testlambdasagemakerLambdaFunctionServiceRoleDefaultPolicy208C2512",
        "Roles": [
          {
            "Ref": "testlambdasagemakerLambdaFunctionServiceRole4BA038CB"
          }
        ]
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "testlambdasagemakerReplaceDefaultSecurityGroup8B1F22EE": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "test-lambda-sagemakerendpoint/test-lambda-sagemaker/ReplaceDefaultSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W5",
              "reason": "Egress of 0.0.0.0/0 is default and generally considered OK"
            },
            {
              "id": "W40",
              "reason": "Egress IPProtocol of -1 is default and generally considered OK"
            }
          ]
        }
      }
    },
    "testlambdasagemakerLambdaFunction661E043F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters5427a7d8ba889cae10b5bd870f298fec8d1c16371fd0f7f898e9c4fe35ed6715S3Bucket396E7F33"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters5427a7d8ba889cae10b5bd870f298fec8d1c16371fd0f7f898e9c4fe35ed6715S3VersionKey5284C9B6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters5427a7d8ba889cae10b5bd870f298fec8d1c16371fd0f7f898e9c4fe35ed6715S3VersionKey5284C9B6"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "testlambdasagemakerLambdaFunctionServiceRole4BA038CB",
            "Arn"
          ]
        },
        "Runtime": "python3.8",
        "Environment": {
          "Variables": {
            "ENDPOINT_NAME": {
              "Fn::GetAtt": [
                "testlambdasagemakerSageMakerEndpoint34AA4AB2",
                "EndpointName"
              ]
            }
          }
        },
        "MemorySize": 128,
        "Timeout": 300,
        "TracingConfig": {
          "Mode": "Active"
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "testlambdasagemakerReplaceDefaultSecurityGroup8B1F22EE",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Ref": "VpcIsolatedSubnet1SubnetE48C5737"
            },
            {
              "Ref": "VpcIsolatedSubnet2Subnet16364B91"
            },
            {
              "Ref": "VpcIsolatedSubnet3Subnet6840A2D4"
            }
          ]
        }
      },
      "DependsOn": [
        "testlambdasagemakerLambdaFunctionServiceRoleDefaultPolicy208C2512",
        "testlambdasagemakerLambdaFunctionServiceRole4BA038CB"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions."
            }
          ]
        }
      }
    },
    "Vpc8378EB38": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test-lambda-sagemakerendpoint/Vpc"
          }
        ]
      }
    },
    "VpcIsolatedSubnet1SubnetE48C5737": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "test-region-1a",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "test-lambda-sagemakerendpoint/Vpc/IsolatedSubnet1"
          }
        ]
      }
    },
    "VpcIsolatedSubnet1RouteTable4771E3E5": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test-lambda-sagemakerendpoint/Vpc/IsolatedSubnet1"
          }
        ]
      }
    },
    "VpcIsolatedSubnet1RouteTableAssociationD300FCBB": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcIsolatedSubnet1RouteTable4771E3E5"
        },
        "SubnetId": {
          "Ref": "VpcIsolatedSubnet1SubnetE48C5737"
        }
      }
    },
    "VpcIsolatedSubnet2Subnet16364B91": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "test-region-1b",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "test-lambda-sagemakerendpoint/Vpc/IsolatedSubnet2"
          }
        ]
      }
    },
    "VpcIsolatedSubnet2RouteTable1D30AF7D": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test-lambda-sagemakerendpoint/Vpc/IsolatedSubnet2"
          }
        ]
      }
    },
    "VpcIsolatedSubnet2RouteTableAssociationF7B18CCA": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcIsolatedSubnet2RouteTable1D30AF7D"
        },
        "SubnetId": {
          "Ref": "VpcIsolatedSubnet2Subnet16364B91"
        }
      }
    },
    "VpcIsolatedSubnet3Subnet6840A2D4": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "test-region-1c",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "test-lambda-sagemakerendpoint/Vpc/IsolatedSubnet3"
          }
        ]
      }
    },
    "VpcIsolatedSubnet3RouteTableA34D73CB": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test-lambda-sagemakerendpoint/Vpc/IsolatedSubnet3"
          }
        ]
      }
    },
    "VpcIsolatedSubnet3RouteTableAssociation04776B7F": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcIsolatedSubnet3RouteTableA34D73CB"
        },
        "SubnetId": {
          "Ref": "VpcIsolatedSubnet3Subnet6840A2D4"
        }
      }
    },
    "VpcFlowLogIAMRole6A475D41": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "vpc-flow-logs.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test-lambda-sagemakerendpoint/Vpc"
          }
        ]
      }
    },
    "VpcFlowLogIAMRoleDefaultPolicy406FB995": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "VpcFlowLogLogGroup7B5C56B9",
                  "Arn"
                ]
              }
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "VpcFlowLogIAMRole6A475D41",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "VpcFlowLogIAMRoleDefaultPolicy406FB995",
        "Roles": [
          {
            "Ref": "VpcFlowLogIAMRole6A475D41"
          }
        ]
      }
    },
    "VpcFlowLogLogGroup7B5C56B9": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 731
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "VpcFlowLog8FF33A73": {
      "Type": "AWS::EC2::FlowLog",
      "Properties": {
        "ResourceId": {
          "Ref": "Vpc8378EB38"
        },
        "ResourceType": "VPC",
        "TrafficType": "ALL",
        "DeliverLogsPermissionArn": {
          "Fn::GetAtt": [
            "VpcFlowLogIAMRole6A475D41",
            "Arn"
          ]
        },
        "LogDestinationType": "cloud-watch-logs",
        "LogGroupName": {
          "Ref": "VpcFlowLogLogGroup7B5C56B9"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test-lambda-sagemakerendpoint/Vpc"
          }
        ]
      }
    },
    "VpcS3A5408339": {
      "Type": "AWS::EC2::VPCEndpoint",
      "Properties": {
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region"
              },
              ".s3"
            ]
          ]
        },
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "RouteTableIds": [
          {
            "Ref": "VpcIsolatedSubnet1RouteTable4771E3E5"
          },
          {
            "Ref": "VpcIsolatedSubnet2RouteTable1D30AF7D"
          },
          {
            "Ref": "VpcIsolatedSubnet3RouteTableA34D73CB"
          }
        ],
        "VpcEndpointType": "Gateway"
      }
    },
    "VpcSAGEMAKERRUNTIME337E125A": {
      "Type": "AWS::EC2::VPCEndpoint",
      "Properties": {
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region"
              },
              ".sagemaker.runtime"
            ]
          ]
        },
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "ReplaceEndpointDefaultSecurityGroupCF0CCAF1",
              "GroupId"
            ]
          }
        ],
        "SubnetIds": [
          {
            "Ref": "VpcIsolatedSubnet1SubnetE48C5737"
          },
          {
            "Ref": "VpcIsolatedSubnet2Subnet16364B91"
          },
          {
            "Ref": "VpcIsolatedSubnet3Subnet6840A2D4"
          }
        ],
        "VpcEndpointType": "Interface"
      }
    },
    "ReplaceEndpointDefaultSecurityGroupCF0CCAF1": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "test-lambda-sagemakerendpoint/ReplaceEndpointDefaultSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "Vpc8378EB38",
                "CidrBlock"
              ]
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "Vpc8378EB38",
                      "CidrBlock"
                    ]
                  },
                  ":443"
                ]
              ]
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W5",
              "reason": "Egress of 0.0.0.0/0 is default and generally considered OK"
            },
            {
              "id": "W40",
              "reason": "Egress IPProtocol of -1 is default and generally considered OK"
            }
          ]
        }
      }
    }
  },
  "Parameters": {
    "AssetParameters5427a7d8ba889cae10b5bd870f298fec8d1c16371fd0f7f898e9c4fe35ed6715S3Bucket396E7F33": {
      "Type": "String",
      "Description": "S3 bucket for asset \"5427a7d8ba889cae10b5bd870f298fec8d1c16371fd0f7f898e9c4fe35ed6715\""
    },
    "AssetParameters5427a7d8ba889cae10b5bd870f298fec8d1c16371fd0f7f898e9c4fe35ed6715S3VersionKey5284C9B6": {
      "Type": "String",
      "Description": "S3 key for asset version \"5427a7d8ba889cae10b5bd870f298fec8d1c16371fd0f7f898e9c4fe35ed6715\""
    },
    "AssetParameters5427a7d8ba889cae10b5bd870f298fec8d1c16371fd0f7f898e9c4fe35ed6715ArtifactHash2EB86EAE": {
      "Type": "String",
      "Description": "Artifact hash for asset \"5427a7d8ba889cae10b5bd870f298fec8d1c16371fd0f7f898e9c4fe35ed6715\""
    }
  }
}