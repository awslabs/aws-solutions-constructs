{
  "Description": "Integration test for aws-cloudfront-mediastore with default properties",
  "Resources": {
    "testcloudfrontmediastoreCloudFrontOriginAccessIdentity966405A0": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": {
            "Fn::Join": [
              "",
              [
                "access-identity-",
                {
                  "Ref": "AWS::Region"
                },
                "-",
                {
                  "Ref": "AWS::StackName"
                }
              ]
            ]
          }
        }
      }
    },
    "testcloudfrontmediastoreMediaStoreContainerF60A96BB": {
      "Type": "AWS::MediaStore::Container",
      "Properties": {
        "ContainerName": {
          "Ref": "AWS::StackName"
        },
        "AccessLoggingEnabled": true,
        "CorsPolicy": [
          {
            "AllowedHeaders": [
              "*"
            ],
            "AllowedMethods": [
              "GET"
            ],
            "AllowedOrigins": [
              "*"
            ],
            "ExposeHeaders": [
              "*"
            ],
            "MaxAgeSeconds": 3000
          }
        ],
        "LifecyclePolicy": "{\"rules\":[{\"definition\":{\"path\":[{\"wildcard\":\"*\"}],\"days_since_create\":[{\"numeric\":[\">\",30]}]},\"action\":\"EXPIRE\"}]}",
        "MetricPolicy": {
          "ContainerLevelMetrics": "ENABLED"
        },
        "Policy": {
          "Fn::Join": [
            "",
            [
              "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MediaStoreDefaultPolicy\",\"Effect\":\"Allow\",\"Principal\":\"*\",\"Action\":[\"mediastore:GetObject\",\"mediastore:DescribeObject\"],\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":mediastore:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":container/",
              {
                "Ref": "AWS::StackName"
              },
              "/*\",\"Condition\":{\"StringEquals\":{\"aws:UserAgent\":\"",
              {
                "Ref": "testcloudfrontmediastoreCloudFrontOriginAccessIdentity966405A0"
              },
              "\"},\"Bool\":{\"aws:SecureTransport\":\"true\"}}}]}"
            ]
          ]
        }
      },
      "DeletionPolicy": "Retain"
    },
    "testcloudfrontmediastoreCloudfrontLoggingBucketA3A51E6A": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W35",
              "reason": "This S3 bucket is used as the access logging bucket for CloudFront Distribution"
            }
          ]
        }
      }
    },
    "testcloudfrontmediastoreCloudfrontLoggingBucketPolicyF3B44DFD": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "testcloudfrontmediastoreCloudfrontLoggingBucketA3A51E6A"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "testcloudfrontmediastoreCloudfrontLoggingBucketA3A51E6A",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "testcloudfrontmediastoreCloudfrontLoggingBucketA3A51E6A",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "testcloudfrontmediastoreCloudfrontOriginRequestPolicyA1D988D3": {
      "Type": "AWS::CloudFront::OriginRequestPolicy",
      "Properties": {
        "OriginRequestPolicyConfig": {
          "Comment": "Policy for Constructs CloudFrontDistributionForMediaStore",
          "CookiesConfig": {
            "CookieBehavior": "none"
          },
          "HeadersConfig": {
            "HeaderBehavior": "whitelist",
            "Headers": [
              "Access-Control-Allow-Origin",
              "Access-Control-Request-Method",
              "Access-Control-Request-Header",
              "Origin"
            ]
          },
          "Name": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "AWS::StackName"
                },
                "-",
                {
                  "Ref": "AWS::Region"
                },
                "-CloudFrontDistributionForMediaStore"
              ]
            ]
          },
          "QueryStringsConfig": {
            "QueryStringBehavior": "all"
          }
        }
      }
    },
    "testcloudfrontmediastoreResponseHeadersPolicyE359AC46": {
      "Type": "AWS::CloudFront::ResponseHeadersPolicy",
      "Properties": {
        "ResponseHeadersPolicyConfig": {
          "Name": "withSecurityHeaderBehaviortestcloudfrontmediastoreResponseHeadersPolicyA685DA47",
          "SecurityHeadersConfig": {
            "ContentSecurityPolicy": {
              "ContentSecurityPolicy": "upgrade-insecure-requests; default-src 'none';",
              "Override": true
            },
            "StrictTransportSecurity": {
              "AccessControlMaxAgeSec": 63072,
              "IncludeSubdomains": true,
              "Override": true,
              "Preload": true
            }
          }
        }
      }
    },
    "testcloudfrontmediastoreCloudFrontDistributionED9265B1": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD",
              "OPTIONS"
            ],
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "CachedMethods": [
              "GET",
              "HEAD",
              "OPTIONS"
            ],
            "Compress": true,
            "OriginRequestPolicyId": {
              "Ref": "testcloudfrontmediastoreCloudfrontOriginRequestPolicyA1D988D3"
            },
            "ResponseHeadersPolicyId": {
              "Ref": "testcloudfrontmediastoreResponseHeadersPolicyE359AC46"
            },
            "TargetOriginId": "withSecurityHeaderBehaviortestcloudfrontmediastoreCloudFrontDistributionOrigin1F2E772A7",
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Logging": {
            "Bucket": {
              "Fn::GetAtt": [
                "testcloudfrontmediastoreCloudfrontLoggingBucketA3A51E6A",
                "RegionalDomainName"
              ]
            }
          },
          "Origins": [
            {
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "https-only",
                "OriginSSLProtocols": [
                  "TLSv1.2"
                ]
              },
              "DomainName": {
                "Fn::Select": [
                  0,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "://",
                              {
                                "Fn::GetAtt": [
                                  "testcloudfrontmediastoreMediaStoreContainerF60A96BB",
                                  "Endpoint"
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "Id": "withSecurityHeaderBehaviortestcloudfrontmediastoreCloudFrontDistributionOrigin1F2E772A7",
              "OriginCustomHeaders": [
                {
                  "HeaderName": "User-Agent",
                  "HeaderValue": {
                    "Ref": "testcloudfrontmediastoreCloudFrontOriginAccessIdentity966405A0"
                  }
                }
              ]
            }
          ]
        }
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W70",
              "reason": "Since the distribution uses the CloudFront domain name, CloudFront automatically sets the security policy to TLSv1 regardless of the value of MinimumProtocolVersion"
            }
          ]
        }
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}