{
  "Description": "Integration test for aws-cloudfront-mediastore override properties",
  "Resources": {
    "testcloudfrontmediastoreMediaStoreContainerF60A96BB": {
      "Type": "AWS::MediaStore::Container",
      "Properties": {
        "ContainerName": "MyOwnMediaStoreContainer",
        "AccessLoggingEnabled": true,
        "CorsPolicy": [
          {
            "AllowedHeaders": [
              "*"
            ],
            "AllowedMethods": [
              "GET"
            ],
            "AllowedOrigins": [
              "*"
            ],
            "ExposeHeaders": [
              "*"
            ],
            "MaxAgeSeconds": 3000
          }
        ],
        "LifecyclePolicy": "{\"rules\":[{\"definition\":{\"path\":[{\"wildcard\":\"*\"}],\"days_since_create\":[{\"numeric\":[\">\",30]}]},\"action\":\"EXPIRE\"}]}",
        "MetricPolicy": {
          "ContainerLevelMetrics": "ENABLED"
        },
        "Policy": {
          "Fn::Join": [
            "",
            [
              "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"OverridePolicy\",\"Effect\":\"Allow\",\"Principal\":\"*\",\"Action\":\"mediastore:*\",\"Resource\":\"arn:aws:mediastore:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":container/MyOwnMediaStoreContainer/*\",\"Condition\":{\"Bool\":{\"aws:SecureTransport\":\"true\"}}}]}"
            ]
          ]
        }
      },
      "DeletionPolicy": "Retain"
    },
    "testcloudfrontmediastoreCloudfrontLoggingBucketA3A51E6A": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W35",
              "reason": "This S3 bucket is used as the access logging bucket for CloudFront Distribution"
            }
          ]
        }
      }
    },
    "testcloudfrontmediastoreCloudfrontLoggingBucketPolicyF3B44DFD": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "testcloudfrontmediastoreCloudfrontLoggingBucketA3A51E6A"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "testcloudfrontmediastoreCloudfrontLoggingBucketA3A51E6A",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "testcloudfrontmediastoreCloudfrontLoggingBucketA3A51E6A",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "testcloudfrontmediastoreCloudfrontOriginRequestPolicyA1D988D3": {
      "Type": "AWS::CloudFront::OriginRequestPolicy",
      "Properties": {
        "OriginRequestPolicyConfig": {
          "Comment": "Policy for Constructs CloudFrontDistributionForMediaStore",
          "CookiesConfig": {
            "CookieBehavior": "none"
          },
          "HeadersConfig": {
            "HeaderBehavior": "whitelist",
            "Headers": [
              "Access-Control-Allow-Origin",
              "Access-Control-Request-Method",
              "Access-Control-Request-Header",
              "Origin"
            ]
          },
          "Name": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "AWS::StackName"
                },
                "-",
                {
                  "Ref": "AWS::Region"
                },
                "-CloudFrontDistributionForMediaStore"
              ]
            ]
          },
          "QueryStringsConfig": {
            "QueryStringBehavior": "all"
          }
        }
      }
    },
    "testcloudfrontmediastoreSetHttpSecurityHeaders9995A63D": {
      "Type": "AWS::CloudFront::Function",
      "Properties": {
        "Name": "SetHttpSecurityHeadersc8f338626119f90653fe964a54eb18cb4a8d6406ce",
        "AutoPublish": true,
        "FunctionCode": "function handler(event) { var response = event.response;       var headers = response.headers;       headers['strict-transport-security'] = { value: 'max-age=63072000; includeSubdomains; preload'};       headers['content-security-policy'] = { value: \"default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self'; object-src 'none'\"};       headers['x-content-type-options'] = { value: 'nosniff'};       headers['x-frame-options'] = {value: 'DENY'};       headers['x-xss-protection'] = {value: '1; mode=block'};       return response;     }",
        "FunctionConfig": {
          "Comment": "SetHttpSecurityHeadersc8f338626119f90653fe964a54eb18cb4a8d6406ce",
          "Runtime": "cloudfront-js-1.0"
        }
      }
    },
    "testcloudfrontmediastoreCloudFrontDistributionED9265B1": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD",
              "OPTIONS",
              "PUT",
              "PATCH",
              "POST",
              "DELETE"
            ],
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "CachedMethods": [
              "GET",
              "HEAD"
            ],
            "Compress": true,
            "FunctionAssociations": [
              {
                "EventType": "viewer-response",
                "FunctionARN": {
                  "Fn::GetAtt": [
                    "testcloudfrontmediastoreSetHttpSecurityHeaders9995A63D",
                    "FunctionARN"
                  ]
                }
              }
            ],
            "OriginRequestPolicyId": {
              "Ref": "testcloudfrontmediastoreCloudfrontOriginRequestPolicyA1D988D3"
            },
            "TargetOriginId": "overridePropertiestestcloudfrontmediastoreCloudFrontDistributionOrigin1120F47FC",
            "ViewerProtocolPolicy": "https-only"
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Logging": {
            "Bucket": {
              "Fn::GetAtt": [
                "testcloudfrontmediastoreCloudfrontLoggingBucketA3A51E6A",
                "RegionalDomainName"
              ]
            }
          },
          "Origins": [
            {
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "https-only",
                "OriginSSLProtocols": [
                  "TLSv1.2"
                ]
              },
              "DomainName": {
                "Fn::Select": [
                  0,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "://",
                              {
                                "Fn::GetAtt": [
                                  "testcloudfrontmediastoreMediaStoreContainerF60A96BB",
                                  "Endpoint"
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "Id": "overridePropertiestestcloudfrontmediastoreCloudFrontDistributionOrigin1120F47FC"
            }
          ]
        }
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W70",
              "reason": "Since the distribution uses the CloudFront domain name, CloudFront automatically sets the security policy to TLSv1 regardless of the value of MinimumProtocolVersion"
            }
          ]
        }
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}