// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test deployment w/ DLQ 1`] = `
Object {
  "Outputs": Object {
    "apigatewaysqsRestApiEndpointD55C9F0A": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "apigatewaysqsRestApi03BFD711",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "apigatewaysqsRestApiDeploymentStageprodAA3C7DD5",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Resources": Object {
    "apigatewaysqsApiAccessLogGroup4D14D1D7": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "apigatewaysqsLambdaRestApiAccount8FA59342": Object {
      "DependsOn": Array [
        "apigatewaysqsRestApi03BFD711",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "apigatewaysqsLambdaRestApiCloudWatchRoleB51EDA01",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "apigatewaysqsLambdaRestApiCloudWatchRoleB51EDA01": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "apigatewaysqsRestApi03BFD711": Object {
      "Properties": Object {
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "Name": "RestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "apigatewaysqsRestApiDeployment823C310Bb3eb8381f81a14298ee8e133d94084e4": Object {
      "DependsOn": Array [
        "apigatewaysqsRestApiGET13C64342",
        "apigatewaysqsRestApimessageDELETE46195B92",
        "apigatewaysqsRestApimessageC2D606D3",
        "apigatewaysqsRestApiPOST3638C367",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "apigatewaysqsRestApi03BFD711",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "apigatewaysqsRestApiDeploymentStageprodAA3C7DD5": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "apigatewaysqsApiAccessLogGroup4D14D1D7",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"user\\":\\"$context.identity.user\\",\\"caller\\":\\"$context.identity.caller\\",\\"requestTime\\":\\"$context.requestTime\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}",
        },
        "DeploymentId": Object {
          "Ref": "apigatewaysqsRestApiDeployment823C310Bb3eb8381f81a14298ee8e133d94084e4",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "apigatewaysqsRestApi03BFD711",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "apigatewaysqsRestApiGET13C64342": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewaysqsapigatewayrole2BA120D3",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "text/html": "Error",
              },
              "SelectionPattern": "500",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/x-www-form-urlencoded'",
          },
          "RequestTemplates": Object {
            "application/json": "Action=ReceiveMessage",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":sqs:path/",
                Object {
                  "Ref": "AWS::AccountId",
                },
                "/",
                Object {
                  "Fn::GetAtt": Array [
                    "apigatewaysqsqueueE186B895",
                    "QueueName",
                  ],
                },
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "500",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "apigatewaysqsRestApi03BFD711",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "apigatewaysqsRestApi03BFD711",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "apigatewaysqsRestApiPOST3638C367": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewaysqsapigatewayrole2BA120D3",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "text/html": "Error",
              },
              "SelectionPattern": "500",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/x-www-form-urlencoded'",
          },
          "RequestTemplates": Object {
            "application/json": "Action=SendMessage&MessageBody=$util.urlEncode(\\"$input.body\\")",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":sqs:path/",
                Object {
                  "Ref": "AWS::AccountId",
                },
                "/",
                Object {
                  "Fn::GetAtt": Array [
                    "apigatewaysqsqueueE186B895",
                    "QueueName",
                  ],
                },
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "500",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "apigatewaysqsRestApi03BFD711",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "apigatewaysqsRestApi03BFD711",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "apigatewaysqsRestApiUsagePlan744FD0EB": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "apigatewaysqsRestApi03BFD711",
            },
            "Stage": Object {
              "Ref": "apigatewaysqsRestApiDeploymentStageprodAA3C7DD5",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "apigatewaysqsRestApimessageC2D606D3": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "apigatewaysqsRestApi03BFD711",
            "RootResourceId",
          ],
        },
        "PathPart": "message",
        "RestApiId": Object {
          "Ref": "apigatewaysqsRestApi03BFD711",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "apigatewaysqsRestApimessageDELETE46195B92": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "DELETE",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewaysqsapigatewayrole2BA120D3",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "text/html": "Error",
              },
              "SelectionPattern": "500",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/x-www-form-urlencoded'",
          },
          "RequestTemplates": Object {
            "application/json": "Action=DeleteMessage&ReceiptHandle=$util.urlEncode($input.params('receiptHandle'))",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":sqs:path/",
                Object {
                  "Ref": "AWS::AccountId",
                },
                "/",
                Object {
                  "Fn::GetAtt": Array [
                    "apigatewaysqsqueueE186B895",
                    "QueueName",
                  ],
                },
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "500",
          },
        ],
        "ResourceId": Object {
          "Ref": "apigatewaysqsRestApimessageC2D606D3",
        },
        "RestApiId": Object {
          "Ref": "apigatewaysqsRestApi03BFD711",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "apigatewaysqsapigatewayrole2BA120D3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "apigatewaysqsapigatewayroleDefaultPolicyD83F1724": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "apigatewaysqsqueueE186B895",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sqs:ReceiveMessage",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "apigatewaysqsqueueE186B895",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sqs:DeleteMessage",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "apigatewaysqsqueueE186B895",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "apigatewaysqsapigatewayroleDefaultPolicyD83F1724",
        "Roles": Array [
          Object {
            "Ref": "apigatewaysqsapigatewayrole2BA120D3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "apigatewaysqsdeadLetterQueue25B510FA": Object {
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
    },
    "apigatewaysqsdeadLetterQueuePolicy55247071": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "apigatewaysqsdeadLetterQueue25B510FA",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "apigatewaysqsdeadLetterQueue25B510FA",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "apigatewaysqsdeadLetterQueue25B510FA",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "apigatewaysqsqueueE186B895": Object {
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
        "RedrivePolicy": Object {
          "deadLetterTargetArn": Object {
            "Fn::GetAtt": Array [
              "apigatewaysqsdeadLetterQueue25B510FA",
              "Arn",
            ],
          },
          "maxReceiveCount": 3,
        },
      },
      "Type": "AWS::SQS::Queue",
    },
    "apigatewaysqsqueuePolicy2A16DE42": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "apigatewaysqsqueueE186B895",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "apigatewaysqsqueueE186B895",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "apigatewaysqsqueueE186B895",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
  },
}
`;

exports[`Test deployment w/o DLQ 1`] = `
Object {
  "Outputs": Object {
    "apigatewaysqsRestApiEndpointD55C9F0A": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "apigatewaysqsRestApi03BFD711",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "apigatewaysqsRestApiDeploymentStageprodAA3C7DD5",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Resources": Object {
    "apigatewaysqsApiAccessLogGroup4D14D1D7": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "apigatewaysqsLambdaRestApiAccount8FA59342": Object {
      "DependsOn": Array [
        "apigatewaysqsRestApi03BFD711",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "apigatewaysqsLambdaRestApiCloudWatchRoleB51EDA01",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "apigatewaysqsLambdaRestApiCloudWatchRoleB51EDA01": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "apigatewaysqsRestApi03BFD711": Object {
      "Properties": Object {
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "Name": "RestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "apigatewaysqsRestApiDeployment823C310Bb3eb8381f81a14298ee8e133d94084e4": Object {
      "DependsOn": Array [
        "apigatewaysqsRestApiGET13C64342",
        "apigatewaysqsRestApimessageDELETE46195B92",
        "apigatewaysqsRestApimessageC2D606D3",
        "apigatewaysqsRestApiPOST3638C367",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "apigatewaysqsRestApi03BFD711",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "apigatewaysqsRestApiDeploymentStageprodAA3C7DD5": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "apigatewaysqsApiAccessLogGroup4D14D1D7",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"user\\":\\"$context.identity.user\\",\\"caller\\":\\"$context.identity.caller\\",\\"requestTime\\":\\"$context.requestTime\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}",
        },
        "DeploymentId": Object {
          "Ref": "apigatewaysqsRestApiDeployment823C310Bb3eb8381f81a14298ee8e133d94084e4",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "apigatewaysqsRestApi03BFD711",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "apigatewaysqsRestApiGET13C64342": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewaysqsapigatewayrole2BA120D3",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "text/html": "Error",
              },
              "SelectionPattern": "500",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/x-www-form-urlencoded'",
          },
          "RequestTemplates": Object {
            "application/json": "Action=ReceiveMessage",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":sqs:path/",
                Object {
                  "Ref": "AWS::AccountId",
                },
                "/",
                Object {
                  "Fn::GetAtt": Array [
                    "apigatewaysqsqueueE186B895",
                    "QueueName",
                  ],
                },
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "500",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "apigatewaysqsRestApi03BFD711",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "apigatewaysqsRestApi03BFD711",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "apigatewaysqsRestApiPOST3638C367": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewaysqsapigatewayrole2BA120D3",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "text/html": "Error",
              },
              "SelectionPattern": "500",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/x-www-form-urlencoded'",
          },
          "RequestTemplates": Object {
            "application/json": "Action=SendMessage&MessageBody=$util.urlEncode(\\"$input.body\\")",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":sqs:path/",
                Object {
                  "Ref": "AWS::AccountId",
                },
                "/",
                Object {
                  "Fn::GetAtt": Array [
                    "apigatewaysqsqueueE186B895",
                    "QueueName",
                  ],
                },
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "500",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "apigatewaysqsRestApi03BFD711",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "apigatewaysqsRestApi03BFD711",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "apigatewaysqsRestApiUsagePlan744FD0EB": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "apigatewaysqsRestApi03BFD711",
            },
            "Stage": Object {
              "Ref": "apigatewaysqsRestApiDeploymentStageprodAA3C7DD5",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "apigatewaysqsRestApimessageC2D606D3": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "apigatewaysqsRestApi03BFD711",
            "RootResourceId",
          ],
        },
        "PathPart": "message",
        "RestApiId": Object {
          "Ref": "apigatewaysqsRestApi03BFD711",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "apigatewaysqsRestApimessageDELETE46195B92": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "DELETE",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewaysqsapigatewayrole2BA120D3",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "text/html": "Error",
              },
              "SelectionPattern": "500",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/x-www-form-urlencoded'",
          },
          "RequestTemplates": Object {
            "application/json": "Action=DeleteMessage&ReceiptHandle=$util.urlEncode($input.params('receiptHandle'))",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":sqs:path/",
                Object {
                  "Ref": "AWS::AccountId",
                },
                "/",
                Object {
                  "Fn::GetAtt": Array [
                    "apigatewaysqsqueueE186B895",
                    "QueueName",
                  ],
                },
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "500",
          },
        ],
        "ResourceId": Object {
          "Ref": "apigatewaysqsRestApimessageC2D606D3",
        },
        "RestApiId": Object {
          "Ref": "apigatewaysqsRestApi03BFD711",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "apigatewaysqsapigatewayrole2BA120D3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "apigatewaysqsapigatewayroleDefaultPolicyD83F1724": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "apigatewaysqsqueueE186B895",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sqs:ReceiveMessage",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "apigatewaysqsqueueE186B895",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sqs:DeleteMessage",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "apigatewaysqsqueueE186B895",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "apigatewaysqsapigatewayroleDefaultPolicyD83F1724",
        "Roles": Array [
          Object {
            "Ref": "apigatewaysqsapigatewayrole2BA120D3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "apigatewaysqsdeadLetterQueue25B510FA": Object {
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
    },
    "apigatewaysqsdeadLetterQueuePolicy55247071": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "apigatewaysqsdeadLetterQueue25B510FA",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "apigatewaysqsdeadLetterQueue25B510FA",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "apigatewaysqsdeadLetterQueue25B510FA",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "apigatewaysqsqueueE186B895": Object {
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
        "RedrivePolicy": Object {
          "deadLetterTargetArn": Object {
            "Fn::GetAtt": Array [
              "apigatewaysqsdeadLetterQueue25B510FA",
              "Arn",
            ],
          },
          "maxReceiveCount": 3,
        },
      },
      "Type": "AWS::SQS::Queue",
    },
    "apigatewaysqsqueuePolicy2A16DE42": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "apigatewaysqsqueueE186B895",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "apigatewaysqsqueueE186B895",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "apigatewaysqsqueueE186B895",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
  },
}
`;

exports[`Test minimal deployment 1`] = `
Object {
  "Outputs": Object {
    "apigatewaysqsRestApiEndpointD55C9F0A": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "apigatewaysqsRestApi03BFD711",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "apigatewaysqsRestApiDeploymentStageprodAA3C7DD5",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Resources": Object {
    "apigatewaysqsApiAccessLogGroup4D14D1D7": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "apigatewaysqsLambdaRestApiAccount8FA59342": Object {
      "DependsOn": Array [
        "apigatewaysqsRestApi03BFD711",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "apigatewaysqsLambdaRestApiCloudWatchRoleB51EDA01",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "apigatewaysqsLambdaRestApiCloudWatchRoleB51EDA01": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "apigatewaysqsRestApi03BFD711": Object {
      "Properties": Object {
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "Name": "RestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "apigatewaysqsRestApiDeployment823C310B81c8c99dceff06c656282a644dc22b99": Object {
      "DependsOn": Array [
        "apigatewaysqsRestApiGET13C64342",
        "apigatewaysqsRestApimessageC2D606D3",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "apigatewaysqsRestApi03BFD711",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "apigatewaysqsRestApiDeploymentStageprodAA3C7DD5": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "apigatewaysqsApiAccessLogGroup4D14D1D7",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"user\\":\\"$context.identity.user\\",\\"caller\\":\\"$context.identity.caller\\",\\"requestTime\\":\\"$context.requestTime\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}",
        },
        "DeploymentId": Object {
          "Ref": "apigatewaysqsRestApiDeployment823C310B81c8c99dceff06c656282a644dc22b99",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "apigatewaysqsRestApi03BFD711",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "apigatewaysqsRestApiGET13C64342": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "apigatewaysqsapigatewayrole2BA120D3",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "text/html": "Error",
              },
              "SelectionPattern": "500",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": Object {
            "integration.request.header.Content-Type": "'application/x-www-form-urlencoded'",
          },
          "RequestTemplates": Object {
            "application/json": "Action=ReceiveMessage",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":sqs:path/",
                Object {
                  "Ref": "AWS::AccountId",
                },
                "/",
                Object {
                  "Fn::GetAtt": Array [
                    "apigatewaysqsqueueE186B895",
                    "QueueName",
                  ],
                },
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseParameters": Object {
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "500",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "apigatewaysqsRestApi03BFD711",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "apigatewaysqsRestApi03BFD711",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "apigatewaysqsRestApiUsagePlan744FD0EB": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "apigatewaysqsRestApi03BFD711",
            },
            "Stage": Object {
              "Ref": "apigatewaysqsRestApiDeploymentStageprodAA3C7DD5",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "apigatewaysqsRestApimessageC2D606D3": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "apigatewaysqsRestApi03BFD711",
            "RootResourceId",
          ],
        },
        "PathPart": "message",
        "RestApiId": Object {
          "Ref": "apigatewaysqsRestApi03BFD711",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "apigatewaysqsapigatewayrole2BA120D3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "apigatewaysqsapigatewayroleDefaultPolicyD83F1724": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sqs:ReceiveMessage",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "apigatewaysqsqueueE186B895",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "apigatewaysqsapigatewayroleDefaultPolicyD83F1724",
        "Roles": Array [
          Object {
            "Ref": "apigatewaysqsapigatewayrole2BA120D3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "apigatewaysqsdeadLetterQueue25B510FA": Object {
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
    },
    "apigatewaysqsdeadLetterQueuePolicy55247071": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "apigatewaysqsdeadLetterQueue25B510FA",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "apigatewaysqsdeadLetterQueue25B510FA",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "apigatewaysqsdeadLetterQueue25B510FA",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "apigatewaysqsqueueE186B895": Object {
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
        "RedrivePolicy": Object {
          "deadLetterTargetArn": Object {
            "Fn::GetAtt": Array [
              "apigatewaysqsdeadLetterQueue25B510FA",
              "Arn",
            ],
          },
          "maxReceiveCount": 3,
        },
      },
      "Type": "AWS::SQS::Queue",
    },
    "apigatewaysqsqueuePolicy2A16DE42": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "apigatewaysqsqueueE186B895",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "apigatewaysqsqueueE186B895",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "apigatewaysqsqueueE186B895",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
  },
}
`;
