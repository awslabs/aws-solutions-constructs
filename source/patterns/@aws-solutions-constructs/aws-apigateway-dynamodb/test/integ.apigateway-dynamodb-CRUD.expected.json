{
  "Description": "Integration Test for aws-apigateway-dynamodb",
  "Resources": {
    "testapigatewaydynamodbDynamoTableEEE3F463": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "SSESpecification": {
          "SSEEnabled": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "testapigatewaydynamodbApiAccessLogGroup3F457756": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "testapigatewaydynamodbRestApi80489300": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Name": "RestApi"
      }
    },
    "testapigatewaydynamodbRestApiDeployment1898674Bf06c85f4d2c4a0739d5158ea0dd6288a": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "testapigatewaydynamodbRestApi80489300"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "testapigatewaydynamodbRestApiidDELETE6FC8A9F3",
        "testapigatewaydynamodbRestApiidGET6196F638",
        "testapigatewaydynamodbRestApiidPUT1F965B23",
        "testapigatewaydynamodbRestApiid78018D34",
        "testapigatewaydynamodbRestApiPOSTE99BD0BD"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource"
            }
          ]
        }
      }
    },
    "testapigatewaydynamodbRestApiDeploymentStageprod2855C2C3": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "testapigatewaydynamodbRestApi80489300"
        },
        "AccessLogSetting": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "testapigatewaydynamodbApiAccessLogGroup3F457756",
              "Arn"
            ]
          },
          "Format": "{\"requestId\":\"$context.requestId\",\"ip\":\"$context.identity.sourceIp\",\"user\":\"$context.identity.user\",\"caller\":\"$context.identity.caller\",\"requestTime\":\"$context.requestTime\",\"httpMethod\":\"$context.httpMethod\",\"resourcePath\":\"$context.resourcePath\",\"status\":\"$context.status\",\"protocol\":\"$context.protocol\",\"responseLength\":\"$context.responseLength\"}"
        },
        "DeploymentId": {
          "Ref": "testapigatewaydynamodbRestApiDeployment1898674Bf06c85f4d2c4a0739d5158ea0dd6288a"
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*"
          }
        ],
        "StageName": "prod",
        "TracingEnabled": true
      }
    },
    "testapigatewaydynamodbRestApiid78018D34": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "testapigatewaydynamodbRestApi80489300",
            "RootResourceId"
          ]
        },
        "PathPart": "{id}",
        "RestApiId": {
          "Ref": "testapigatewaydynamodbRestApi80489300"
        }
      }
    },
    "testapigatewaydynamodbRestApiidGET6196F638": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "testapigatewaydynamodbRestApiid78018D34"
        },
        "RestApiId": {
          "Ref": "testapigatewaydynamodbRestApi80489300"
        },
        "AuthorizationType": "AWS_IAM",
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "testapigatewaydynamodbapigatewayrole961B19C4",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200"
            },
            {
              "ResponseTemplates": {
                "text/html": "Error"
              },
              "SelectionPattern": "500",
              "StatusCode": "500"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": {
            "integration.request.header.Content-Type": "'application/json'"
          },
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "{\r\n\"TableName\": \"",
                  {
                    "Ref": "testapigatewaydynamodbDynamoTableEEE3F463"
                  },
                  "\",\r\n \"KeyConditionExpression\": \"id = :v1\",\r\n    \"ExpressionAttributeValues\": {\r\n        \":v1\": {\r\n            \"S\": \"$input.params('id')\"\r\n        }\r\n    }\r\n}"
                ]
              ]
            }
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":dynamodb:action/Query"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Content-Type": true
            },
            "StatusCode": "200"
          },
          {
            "ResponseParameters": {
              "method.response.header.Content-Type": true
            },
            "StatusCode": "500"
          }
        ]
      }
    },
    "testapigatewaydynamodbRestApiidPUT1F965B23": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "ResourceId": {
          "Ref": "testapigatewaydynamodbRestApiid78018D34"
        },
        "RestApiId": {
          "Ref": "testapigatewaydynamodbRestApi80489300"
        },
        "AuthorizationType": "AWS_IAM",
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "testapigatewaydynamodbapigatewayrole961B19C4",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200"
            },
            {
              "ResponseTemplates": {
                "text/html": "Error"
              },
              "SelectionPattern": "500",
              "StatusCode": "500"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": {
            "integration.request.header.Content-Type": "'application/json'"
          },
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "{\r\n  \"TableName\": \"",
                  {
                    "Ref": "testapigatewaydynamodbDynamoTableEEE3F463"
                  },
                  "\",\r\n  \"Key\": {\r\n    \"id\": {\r\n      \"S\": \"$input.path('$.id')\"\r\n    }\r\n  },\r\n  \"ExpressionAttributeValues\": {\r\n    \":event_count\": {\r\n      \"N\": \"$input.path('$.EventCount')\"\r\n    },\r\n    \":message\": {\r\n      \"S\": \"$input.path('$.Message')\"\r\n    }\r\n  },\r\n  \"UpdateExpression\": \"ADD EventCount :event_count SET Message = :message\",\r\n  \"ReturnValues\": \"ALL_NEW\"\r\n}"
                ]
              ]
            }
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":dynamodb:action/UpdateItem"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Content-Type": true
            },
            "StatusCode": "200"
          },
          {
            "ResponseParameters": {
              "method.response.header.Content-Type": true
            },
            "StatusCode": "500"
          }
        ]
      }
    },
    "testapigatewaydynamodbRestApiidDELETE6FC8A9F3": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "ResourceId": {
          "Ref": "testapigatewaydynamodbRestApiid78018D34"
        },
        "RestApiId": {
          "Ref": "testapigatewaydynamodbRestApi80489300"
        },
        "AuthorizationType": "AWS_IAM",
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "testapigatewaydynamodbapigatewayrole961B19C4",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200"
            },
            {
              "ResponseTemplates": {
                "text/html": "Error"
              },
              "SelectionPattern": "500",
              "StatusCode": "500"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": {
            "integration.request.header.Content-Type": "'application/json'"
          },
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "{\r\n  \"TableName\": \"",
                  {
                    "Ref": "testapigatewaydynamodbDynamoTableEEE3F463"
                  },
                  "\",\r\n  \"Key\": {\r\n    \"id\": {\r\n      \"S\": \"$input.params('id')\"\r\n    }\r\n  },\r\n  \"ConditionExpression\": \"attribute_not_exists(Replies)\",\r\n  \"ReturnValues\": \"ALL_OLD\"\r\n}"
                ]
              ]
            }
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":dynamodb:action/DeleteItem"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Content-Type": true
            },
            "StatusCode": "200"
          },
          {
            "ResponseParameters": {
              "method.response.header.Content-Type": true
            },
            "StatusCode": "500"
          }
        ]
      }
    },
    "testapigatewaydynamodbRestApiPOSTE99BD0BD": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Fn::GetAtt": [
            "testapigatewaydynamodbRestApi80489300",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "testapigatewaydynamodbRestApi80489300"
        },
        "AuthorizationType": "AWS_IAM",
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "testapigatewaydynamodbapigatewayrole961B19C4",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200"
            },
            {
              "ResponseTemplates": {
                "text/html": "Error"
              },
              "SelectionPattern": "500",
              "StatusCode": "500"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": {
            "integration.request.header.Content-Type": "'application/json'"
          },
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "{\r\n  \"TableName\": \"",
                  {
                    "Ref": "testapigatewaydynamodbDynamoTableEEE3F463"
                  },
                  "\",\r\n  \"Item\": {\r\n    \"id\": {\r\n      \"S\": \"$input.path('$.id')\"\r\n    },\r\n    \"EventCount\": {\r\n      \"N\": \"$input.path('$.EventCount')\"\r\n    },\r\n    \"Message\": {\r\n      \"S\": \"$input.path('$.Message')\"\r\n    }\r\n  }\r\n}"
                ]
              ]
            }
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":dynamodb:action/PutItem"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Content-Type": true
            },
            "StatusCode": "200"
          },
          {
            "ResponseParameters": {
              "method.response.header.Content-Type": true
            },
            "StatusCode": "500"
          }
        ]
      }
    },
    "testapigatewaydynamodbRestApiUsagePlan244F06C8": {
      "Type": "AWS::ApiGateway::UsagePlan",
      "Properties": {
        "ApiStages": [
          {
            "ApiId": {
              "Ref": "testapigatewaydynamodbRestApi80489300"
            },
            "Stage": {
              "Ref": "testapigatewaydynamodbRestApiDeploymentStageprod2855C2C3"
            },
            "Throttle": {}
          }
        ]
      }
    },
    "testapigatewaydynamodbLambdaRestApiCloudWatchRoleD176CA9E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy"
          }
        ]
      }
    },
    "testapigatewaydynamodbLambdaRestApiAccount3608999D": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "testapigatewaydynamodbLambdaRestApiCloudWatchRoleD176CA9E",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "testapigatewaydynamodbRestApi80489300"
      ]
    },
    "testapigatewaydynamodbapigatewayrole961B19C4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "testapigatewaydynamodbapigatewayroleDefaultPolicy43AC565D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "testapigatewaydynamodbDynamoTableEEE3F463",
                  "Arn"
                ]
              }
            },
            {
              "Action": "dynamodb:Query",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "testapigatewaydynamodbDynamoTableEEE3F463",
                  "Arn"
                ]
              }
            },
            {
              "Action": "dynamodb:UpdateItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "testapigatewaydynamodbDynamoTableEEE3F463",
                  "Arn"
                ]
              }
            },
            {
              "Action": "dynamodb:DeleteItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "testapigatewaydynamodbDynamoTableEEE3F463",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "testapigatewaydynamodbapigatewayroleDefaultPolicy43AC565D",
        "Roles": [
          {
            "Ref": "testapigatewaydynamodbapigatewayrole961B19C4"
          }
        ]
      }
    }
  },
  "Outputs": {
    "testapigatewaydynamodbRestApiEndpoint18D89CA6": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "testapigatewaydynamodbRestApi80489300"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "testapigatewaydynamodbRestApiDeploymentStageprod2855C2C3"
            },
            "/"
          ]
        ]
      }
    }
  }
}