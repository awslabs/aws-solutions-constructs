{
  "Resources": {
    "testlambdaelasticsearchkibanaLambdaFunctionServiceRole3AFFEAA2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      }
    },
    "testlambdaelasticsearchkibanaLambdaFunction601D26D3": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters67a9971e29baab2bde3043bb70ce5b53318b95429a1ce9b189cf65223e8682dbS3BucketBAF5BF3A"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters67a9971e29baab2bde3043bb70ce5b53318b95429a1ce9b189cf65223e8682dbS3VersionKeyADB3CCA3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters67a9971e29baab2bde3043bb70ce5b53318b95429a1ce9b189cf65223e8682dbS3VersionKeyADB3CCA3"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "testlambdaelasticsearchkibanaLambdaFunctionServiceRole3AFFEAA2",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DOMAIN_ENDPOINT": {
              "Fn::GetAtt": [
                "testlambdaelasticsearchkibanaElasticsearchDomain50D5F86E",
                "DomainEndpoint"
              ]
            }
          }
        }
      },
      "DependsOn": [
        "testlambdaelasticsearchkibanaLambdaFunctionServiceRole3AFFEAA2"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions."
            }
          ]
        }
      }
    },
    "testlambdaelasticsearchkibanaCognitoUserPool9537802B": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_phone_number",
              "Priority": 1
            },
            {
              "Name": "verified_email",
              "Priority": 2
            }
          ]
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": true
        },
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UserPoolAddOns": {
          "AdvancedSecurityMode": "ENFORCED"
        },
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}"
        }
      }
    },
    "testlambdaelasticsearchkibanaCognitoUserPoolClient8F70A2AA": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "UserPoolId": {
          "Ref": "testlambdaelasticsearchkibanaCognitoUserPool9537802B"
        },
        "AllowedOAuthFlows": [
          "implicit",
          "code"
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin"
        ],
        "CallbackURLs": [
          "https://example.com"
        ],
        "SupportedIdentityProviders": [
          "COGNITO"
        ]
      }
    },
    "testlambdaelasticsearchkibanaCognitoIdentityPoolC48068F0": {
      "Type": "AWS::Cognito::IdentityPool",
      "Properties": {
        "AllowUnauthenticatedIdentities": false,
        "CognitoIdentityProviders": [
          {
            "ClientId": {
              "Ref": "testlambdaelasticsearchkibanaCognitoUserPoolClient8F70A2AA"
            },
            "ProviderName": {
              "Fn::GetAtt": [
                "testlambdaelasticsearchkibanaCognitoUserPool9537802B",
                "ProviderName"
              ]
            },
            "ServerSideTokenCheck": true
          }
        ]
      }
    },
    "testlambdaelasticsearchkibanaUserPoolDomainB9BDF063": {
      "Type": "AWS::Cognito::UserPoolDomain",
      "Properties": {
        "Domain": "myconstructsdomain",
        "UserPoolId": {
          "Ref": "testlambdaelasticsearchkibanaCognitoUserPool9537802B"
        }
      },
      "DependsOn": [
        "testlambdaelasticsearchkibanaCognitoUserPool9537802B"
      ]
    },
    "testlambdaelasticsearchkibanaCognitoAuthorizedRole88FAFCFA": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "testlambdaelasticsearchkibanaCognitoIdentityPoolC48068F0"
                  }
                },
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "authenticated"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "es:ESHttp*",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:es:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":domain/myconstructsdomain/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "CognitoAccessPolicy"
          }
        ]
      }
    },
    "testlambdaelasticsearchkibanaIdentityPoolRoleMappingBD0A239B": {
      "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
      "Properties": {
        "IdentityPoolId": {
          "Ref": "testlambdaelasticsearchkibanaCognitoIdentityPoolC48068F0"
        },
        "Roles": {
          "authenticated": {
            "Fn::GetAtt": [
              "testlambdaelasticsearchkibanaCognitoAuthorizedRole88FAFCFA",
              "Arn"
            ]
          }
        }
      }
    },
    "testlambdaelasticsearchkibanaCognitoKibanaConfigureRole8F40C1A1": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "es.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "testlambdaelasticsearchkibanaCognitoKibanaConfigureRolePolicyB7090E91": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "cognito-idp:DescribeUserPool",
                "cognito-idp:CreateUserPoolClient",
                "cognito-idp:DeleteUserPoolClient",
                "cognito-idp:DescribeUserPoolClient",
                "cognito-idp:AdminInitiateAuth",
                "cognito-idp:AdminUserGlobalSignOut",
                "cognito-idp:ListUserPoolClients",
                "cognito-identity:DescribeIdentityPool",
                "cognito-identity:UpdateIdentityPool",
                "cognito-identity:SetIdentityPoolRoles",
                "cognito-identity:GetIdentityPoolRoles",
                "es:UpdateElasticsearchDomainConfig"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "testlambdaelasticsearchkibanaCognitoUserPool9537802B",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:cognito-identity:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":identitypool/",
                      {
                        "Ref": "testlambdaelasticsearchkibanaCognitoIdentityPoolC48068F0"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:es:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":domain/myconstructsdomain"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "iam:PassRole",
              "Condition": {
                "StringLike": {
                  "iam:PassedToService": "cognito-identity.amazonaws.com"
                }
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "testlambdaelasticsearchkibanaCognitoKibanaConfigureRole8F40C1A1",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "testlambdaelasticsearchkibanaCognitoKibanaConfigureRolePolicyB7090E91",
        "Roles": [
          {
            "Ref": "testlambdaelasticsearchkibanaCognitoKibanaConfigureRole8F40C1A1"
          }
        ]
      }
    },
    "testlambdaelasticsearchkibanaElasticsearchDomain50D5F86E": {
      "Type": "AWS::Elasticsearch::Domain",
      "Properties": {
        "AccessPolicies": {
          "Statement": [
            {
              "Action": "es:ESHttp*",
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  {
                    "Fn::GetAtt": [
                      "testlambdaelasticsearchkibanaCognitoAuthorizedRole88FAFCFA",
                      "Arn"
                    ]
                  },
                  {
                    "Fn::GetAtt": [
                      "testlambdaelasticsearchkibanaLambdaFunctionServiceRole3AFFEAA2",
                      "Arn"
                    ]
                  }
                ]
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:es:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":domain/myconstructsdomain/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "CognitoOptions": {
          "Enabled": true,
          "IdentityPoolId": {
            "Ref": "testlambdaelasticsearchkibanaCognitoIdentityPoolC48068F0"
          },
          "RoleArn": {
            "Fn::GetAtt": [
              "testlambdaelasticsearchkibanaCognitoKibanaConfigureRole8F40C1A1",
              "Arn"
            ]
          },
          "UserPoolId": {
            "Ref": "testlambdaelasticsearchkibanaCognitoUserPool9537802B"
          }
        },
        "DomainName": "myconstructsdomain",
        "EBSOptions": {
          "EBSEnabled": true,
          "VolumeSize": 10
        },
        "ElasticsearchClusterConfig": {
          "DedicatedMasterCount": 3,
          "DedicatedMasterEnabled": true,
          "InstanceCount": 3,
          "ZoneAwarenessConfig": {
            "AvailabilityZoneCount": 3
          },
          "ZoneAwarenessEnabled": true
        },
        "ElasticsearchVersion": "6.3",
        "EncryptionAtRestOptions": {
          "Enabled": true
        },
        "NodeToNodeEncryptionOptions": {
          "Enabled": true
        },
        "SnapshotOptions": {
          "AutomatedSnapshotStartHour": 1
        }
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W28",
              "reason": "The ES Domain is passed dynamically as as parameter and explicitly specified to ensure that IAM policies are configured to lockdown access to this specific ES instance only"
            }
          ]
        }
      }
    },
    "testlambdaelasticsearchkibanaStatusRedAlarmCFCDB629": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "AlarmDescription": "At least one primary shard and its replicas are not allocated to a node. ",
        "MetricName": "ClusterStatus.red",
        "Namespace": "AWS/ES",
        "Period": 60,
        "Statistic": "Maximum",
        "Threshold": 1
      }
    },
    "testlambdaelasticsearchkibanaStatusYellowAlarm24B9D1CB": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "AlarmDescription": "At least one replica shard is not allocated to a node.",
        "MetricName": "ClusterStatus.yellow",
        "Namespace": "AWS/ES",
        "Period": 60,
        "Statistic": "Maximum",
        "Threshold": 1
      }
    },
    "testlambdaelasticsearchkibanaFreeStorageSpaceTooLowAlarm0B4D4E35": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "AlarmDescription": "A node in your cluster is down to 20 GiB of free storage space.",
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/ES",
        "Period": 60,
        "Statistic": "Minimum",
        "Threshold": 2000
      }
    },
    "testlambdaelasticsearchkibanaIndexWritesBlockedTooHighAlarmB8C0E99C": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "AlarmDescription": "Your cluster is blocking write requests.",
        "MetricName": "ClusterIndexWritesBlocked",
        "Namespace": "AWS/ES",
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 1
      }
    },
    "testlambdaelasticsearchkibanaAutomatedSnapshotFailureTooHighAlarm75F2676B": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "AlarmDescription": "An automated snapshot failed. This failure is often the result of a red cluster health status.",
        "MetricName": "AutomatedSnapshotFailure",
        "Namespace": "AWS/ES",
        "Period": 60,
        "Statistic": "Maximum",
        "Threshold": 1
      }
    },
    "testlambdaelasticsearchkibanaCPUUtilizationTooHighAlarmF16BA5D9": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 3,
        "AlarmDescription": "100% CPU utilization is not uncommon, but sustained high usage is problematic. Consider using larger instance types or adding instances.",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/ES",
        "Period": 900,
        "Statistic": "Average",
        "Threshold": 80
      }
    },
    "testlambdaelasticsearchkibanaJVMMemoryPressureTooHighAlarm18224533": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "AlarmDescription": "Average JVM memory pressure over last 15 minutes too high. Consider scaling vertically.",
        "MetricName": "JVMMemoryPressure",
        "Namespace": "AWS/ES",
        "Period": 900,
        "Statistic": "Average",
        "Threshold": 80
      }
    },
    "testlambdaelasticsearchkibanaMasterCPUUtilizationTooHighAlarmE5E5999F": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 3,
        "AlarmDescription": "Average CPU utilization over last 45 minutes too high. Consider using larger instance types for your dedicated master nodes.",
        "MetricName": "MasterCPUUtilization",
        "Namespace": "AWS/ES",
        "Period": 900,
        "Statistic": "Average",
        "Threshold": 50
      }
    },
    "testlambdaelasticsearchkibanaMasterJVMMemoryPressureTooHighAlarm297FF1BE": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "AlarmDescription": "Average JVM memory pressure over last 15 minutes too high. Consider scaling vertically.",
        "MetricName": "MasterJVMMemoryPressure",
        "Namespace": "AWS/ES",
        "Period": 900,
        "Statistic": "Average",
        "Threshold": 50
      }
    }
  },
  "Parameters": {
    "AssetParameters67a9971e29baab2bde3043bb70ce5b53318b95429a1ce9b189cf65223e8682dbS3BucketBAF5BF3A": {
      "Type": "String",
      "Description": "S3 bucket for asset \"67a9971e29baab2bde3043bb70ce5b53318b95429a1ce9b189cf65223e8682db\""
    },
    "AssetParameters67a9971e29baab2bde3043bb70ce5b53318b95429a1ce9b189cf65223e8682dbS3VersionKeyADB3CCA3": {
      "Type": "String",
      "Description": "S3 key for asset version \"67a9971e29baab2bde3043bb70ce5b53318b95429a1ce9b189cf65223e8682db\""
    },
    "AssetParameters67a9971e29baab2bde3043bb70ce5b53318b95429a1ce9b189cf65223e8682dbArtifactHash322F5E2F": {
      "Type": "String",
      "Description": "Artifact hash for asset \"67a9971e29baab2bde3043bb70ce5b53318b95429a1ce9b189cf65223e8682db\""
    }
  }
}