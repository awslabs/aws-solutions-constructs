// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot test default params 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters67a9971e29baab2bde3043bb70ce5b53318b95429a1ce9b189cf65223e8682dbArtifactHash322F5E2F": Object {
      "Description": "Artifact hash for asset \\"67a9971e29baab2bde3043bb70ce5b53318b95429a1ce9b189cf65223e8682db\\"",
      "Type": "String",
    },
    "AssetParameters67a9971e29baab2bde3043bb70ce5b53318b95429a1ce9b189cf65223e8682dbS3BucketBAF5BF3A": Object {
      "Description": "S3 bucket for asset \\"67a9971e29baab2bde3043bb70ce5b53318b95429a1ce9b189cf65223e8682db\\"",
      "Type": "String",
    },
    "AssetParameters67a9971e29baab2bde3043bb70ce5b53318b95429a1ce9b189cf65223e8682dbS3VersionKeyADB3CCA3": Object {
      "Description": "S3 key for asset version \\"67a9971e29baab2bde3043bb70ce5b53318b95429a1ce9b189cf65223e8682db\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "testlambdaelasticsearchstackAutomatedSnapshotFailureTooHighAlarmE1525DBA": Object {
      "Properties": Object {
        "AlarmDescription": "An automated snapshot failed. This failure is often the result of a red cluster health status.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "AutomatedSnapshotFailure",
        "Namespace": "AWS/ES",
        "Period": 60,
        "Statistic": "Maximum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testlambdaelasticsearchstackCPUUtilizationTooHighAlarm25C597E5": Object {
      "Properties": Object {
        "AlarmDescription": "100% CPU utilization is not uncommon, but sustained high usage is problematic. Consider using larger instance types or adding instances.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 3,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/ES",
        "Period": 900,
        "Statistic": "Average",
        "Threshold": 80,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testlambdaelasticsearchstackCognitoAuthorizedRole48A260E1": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "ForAnyValue:StringLike": Object {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": Object {
                  "cognito-identity.amazonaws.com:aud": Object {
                    "Ref": "testlambdaelasticsearchstackCognitoIdentityPool7A260383",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "es:ESHttp*",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":es:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":domain/test-domain/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "CognitoAccessPolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testlambdaelasticsearchstackCognitoIdentityPool7A260383": Object {
      "Properties": Object {
        "AllowUnauthenticatedIdentities": false,
        "CognitoIdentityProviders": Array [
          Object {
            "ClientId": Object {
              "Ref": "testlambdaelasticsearchstackCognitoUserPoolClient6610371B",
            },
            "ProviderName": Object {
              "Fn::GetAtt": Array [
                "testlambdaelasticsearchstackCognitoUserPool05D1387E",
                "ProviderName",
              ],
            },
            "ServerSideTokenCheck": true,
          },
        ],
      },
      "Type": "AWS::Cognito::IdentityPool",
    },
    "testlambdaelasticsearchstackCognitoKibanaConfigureRole72380E63": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "es.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testlambdaelasticsearchstackCognitoKibanaConfigureRolePolicyE3A46E8D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "cognito-idp:DescribeUserPool",
                "cognito-idp:CreateUserPoolClient",
                "cognito-idp:DeleteUserPoolClient",
                "cognito-idp:DescribeUserPoolClient",
                "cognito-idp:AdminInitiateAuth",
                "cognito-idp:AdminUserGlobalSignOut",
                "cognito-idp:ListUserPoolClients",
                "cognito-identity:DescribeIdentityPool",
                "cognito-identity:UpdateIdentityPool",
                "cognito-identity:SetIdentityPoolRoles",
                "cognito-identity:GetIdentityPoolRoles",
                "es:UpdateElasticsearchDomainConfig",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "testlambdaelasticsearchstackCognitoUserPool05D1387E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:aws:cognito-identity:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":identitypool/",
                      Object {
                        "Ref": "testlambdaelasticsearchstackCognitoIdentityPool7A260383",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:aws:es:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":domain/test-domain",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "iam:PassRole",
              "Condition": Object {
                "StringLike": Object {
                  "iam:PassedToService": "cognito-identity.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testlambdaelasticsearchstackCognitoKibanaConfigureRole72380E63",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testlambdaelasticsearchstackCognitoKibanaConfigureRolePolicyE3A46E8D",
        "Roles": Array [
          Object {
            "Ref": "testlambdaelasticsearchstackCognitoKibanaConfigureRole72380E63",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testlambdaelasticsearchstackCognitoUserPool05D1387E": Object {
      "Properties": Object {
        "AccountRecoverySetting": Object {
          "RecoveryMechanisms": Array [
            Object {
              "Name": "verified_phone_number",
              "Priority": 1,
            },
            Object {
              "Name": "verified_email",
              "Priority": 2,
            },
          ],
        },
        "AdminCreateUserConfig": Object {
          "AllowAdminCreateUserOnly": true,
        },
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UserPoolAddOns": Object {
          "AdvancedSecurityMode": "ENFORCED",
        },
        "VerificationMessageTemplate": Object {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
    },
    "testlambdaelasticsearchstackCognitoUserPoolClient6610371B": Object {
      "Properties": Object {
        "AllowedOAuthFlows": Array [
          "implicit",
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": Array [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin",
        ],
        "CallbackURLs": Array [
          "https://example.com",
        ],
        "SupportedIdentityProviders": Array [
          "COGNITO",
        ],
        "UserPoolId": Object {
          "Ref": "testlambdaelasticsearchstackCognitoUserPool05D1387E",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "testlambdaelasticsearchstackElasticsearchDomain2DE7011B": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W28",
              "reason": "The ES Domain is passed dynamically as as parameter and explicitly specified to ensure that IAM policies are configured to lockdown access to this specific ES instance only",
            },
          ],
        },
      },
      "Properties": Object {
        "AccessPolicies": Object {
          "Statement": Array [
            Object {
              "Action": "es:ESHttp*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  Object {
                    "Fn::GetAtt": Array [
                      "testlambdaelasticsearchstackCognitoAuthorizedRole48A260E1",
                      "Arn",
                    ],
                  },
                  Object {
                    "Fn::GetAtt": Array [
                      "testlambdaelasticsearchstackLambdaFunctionServiceRoleEB1E3355",
                      "Arn",
                    ],
                  },
                ],
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:es:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":domain/test-domain/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "CognitoOptions": Object {
          "Enabled": true,
          "IdentityPoolId": Object {
            "Ref": "testlambdaelasticsearchstackCognitoIdentityPool7A260383",
          },
          "RoleArn": Object {
            "Fn::GetAtt": Array [
              "testlambdaelasticsearchstackCognitoKibanaConfigureRole72380E63",
              "Arn",
            ],
          },
          "UserPoolId": Object {
            "Ref": "testlambdaelasticsearchstackCognitoUserPool05D1387E",
          },
        },
        "DomainName": "test-domain",
        "EBSOptions": Object {
          "EBSEnabled": true,
          "VolumeSize": 10,
        },
        "ElasticsearchClusterConfig": Object {
          "DedicatedMasterCount": 3,
          "DedicatedMasterEnabled": true,
          "InstanceCount": 3,
          "ZoneAwarenessConfig": Object {
            "AvailabilityZoneCount": 3,
          },
          "ZoneAwarenessEnabled": true,
        },
        "ElasticsearchVersion": "6.3",
        "EncryptionAtRestOptions": Object {
          "Enabled": true,
        },
        "NodeToNodeEncryptionOptions": Object {
          "Enabled": true,
        },
        "SnapshotOptions": Object {
          "AutomatedSnapshotStartHour": 1,
        },
      },
      "Type": "AWS::Elasticsearch::Domain",
    },
    "testlambdaelasticsearchstackFreeStorageSpaceTooLowAlarmB0688A0C": Object {
      "Properties": Object {
        "AlarmDescription": "A node in your cluster is down to 20 GiB of free storage space.",
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/ES",
        "Period": 60,
        "Statistic": "Minimum",
        "Threshold": 2000,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testlambdaelasticsearchstackIdentityPoolRoleMapping1553C88A": Object {
      "Properties": Object {
        "IdentityPoolId": Object {
          "Ref": "testlambdaelasticsearchstackCognitoIdentityPool7A260383",
        },
        "Roles": Object {
          "authenticated": Object {
            "Fn::GetAtt": Array [
              "testlambdaelasticsearchstackCognitoAuthorizedRole48A260E1",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
    },
    "testlambdaelasticsearchstackIndexWritesBlockedTooHighAlarm204AB403": Object {
      "Properties": Object {
        "AlarmDescription": "Your cluster is blocking write requests.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "ClusterIndexWritesBlocked",
        "Namespace": "AWS/ES",
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testlambdaelasticsearchstackJVMMemoryPressureTooHighAlarmFB8617D3": Object {
      "Properties": Object {
        "AlarmDescription": "Average JVM memory pressure over last 15 minutes too high. Consider scaling vertically.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "JVMMemoryPressure",
        "Namespace": "AWS/ES",
        "Period": 900,
        "Statistic": "Average",
        "Threshold": 80,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testlambdaelasticsearchstackLambdaFunction5CA5683F": Object {
      "DependsOn": Array [
        "testlambdaelasticsearchstackLambdaFunctionServiceRoleDefaultPolicy5EFA0073",
        "testlambdaelasticsearchstackLambdaFunctionServiceRoleEB1E3355",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters67a9971e29baab2bde3043bb70ce5b53318b95429a1ce9b189cf65223e8682dbS3BucketBAF5BF3A",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters67a9971e29baab2bde3043bb70ce5b53318b95429a1ce9b189cf65223e8682dbS3VersionKeyADB3CCA3",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters67a9971e29baab2bde3043bb70ce5b53318b95429a1ce9b189cf65223e8682dbS3VersionKeyADB3CCA3",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DOMAIN_ENDPOINT": Object {
              "Fn::GetAtt": Array [
                "testlambdaelasticsearchstackElasticsearchDomain2DE7011B",
                "DomainEndpoint",
              ],
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "testlambdaelasticsearchstackLambdaFunctionServiceRoleEB1E3355",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "testlambdaelasticsearchstackLambdaFunctionServiceRoleDefaultPolicy5EFA0073": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testlambdaelasticsearchstackLambdaFunctionServiceRoleDefaultPolicy5EFA0073",
        "Roles": Array [
          Object {
            "Ref": "testlambdaelasticsearchstackLambdaFunctionServiceRoleEB1E3355",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testlambdaelasticsearchstackLambdaFunctionServiceRoleEB1E3355": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testlambdaelasticsearchstackMasterCPUUtilizationTooHighAlarm9F5EF826": Object {
      "Properties": Object {
        "AlarmDescription": "Average CPU utilization over last 45 minutes too high. Consider using larger instance types for your dedicated master nodes.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 3,
        "MetricName": "MasterCPUUtilization",
        "Namespace": "AWS/ES",
        "Period": 900,
        "Statistic": "Average",
        "Threshold": 50,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testlambdaelasticsearchstackMasterJVMMemoryPressureTooHighAlarmECFF41A2": Object {
      "Properties": Object {
        "AlarmDescription": "Average JVM memory pressure over last 15 minutes too high. Consider scaling vertically.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "MasterJVMMemoryPressure",
        "Namespace": "AWS/ES",
        "Period": 900,
        "Statistic": "Average",
        "Threshold": 50,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testlambdaelasticsearchstackStatusRedAlarmD3149716": Object {
      "Properties": Object {
        "AlarmDescription": "At least one primary shard and its replicas are not allocated to a node. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "ClusterStatus.red",
        "Namespace": "AWS/ES",
        "Period": 60,
        "Statistic": "Maximum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testlambdaelasticsearchstackStatusYellowAlarm75AD016C": Object {
      "Properties": Object {
        "AlarmDescription": "At least one replica shard is not allocated to a node.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "ClusterStatus.yellow",
        "Namespace": "AWS/ES",
        "Period": 60,
        "Statistic": "Maximum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testlambdaelasticsearchstackUserPoolDomainD67735BF": Object {
      "DependsOn": Array [
        "testlambdaelasticsearchstackCognitoUserPool05D1387E",
      ],
      "Properties": Object {
        "Domain": "test-domain",
        "UserPoolId": Object {
          "Ref": "testlambdaelasticsearchstackCognitoUserPool05D1387E",
        },
      },
      "Type": "AWS::Cognito::UserPoolDomain",
    },
  },
}
`;
