// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test-kitchen-staff-stack 1`] = `
Object {
  "Outputs": Object {
    "kitchenstaffapiLambdaRestApiEndpoint79E1D2E0": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "kitchenstaffapiLambdaRestApiF3F7D4FC",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "kitchenstaffapiLambdaRestApiDeploymentStageprodB9D4F4B3",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "completeorderLambdaFunction1B59DF2A": Object {
      "DependsOn": Array [
        "completeorderLambdaFunctionServiceRoleDefaultPolicyB81B4D1C",
        "completeorderLambdaFunctionServiceRoleFDF8F85D",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            Object {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            Object {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "346587a19365916b741034524422c072ee85b4b82a0e01fb28ef8dc62bdb9737.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "DDB_TABLE_NAME": Object {
              "Fn::ImportValue": "SharedStack:ExportsOutputRefordertable80C5609084F626AD",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "completeorderLambdaFunctionServiceRoleFDF8F85D",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 15,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "completeorderLambdaFunctionServiceRoleDefaultPolicyB81B4D1C": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::ImportValue": "SharedStack:ExportsOutputFnGetAttordertable80C56090ArnFF5A50B5",
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "SharedStack:ExportsOutputFnGetAttordertable80C56090ArnFF5A50B5",
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "completeorderLambdaFunctionServiceRoleDefaultPolicyB81B4D1C",
        "Roles": Array [
          Object {
            "Ref": "completeorderLambdaFunctionServiceRoleFDF8F85D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "completeorderLambdaFunctionServiceRoleFDF8F85D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "getopenordersLambdaFunctionCAD5B34A": Object {
      "DependsOn": Array [
        "getopenordersLambdaFunctionServiceRoleDefaultPolicy2BBF8B21",
        "getopenordersLambdaFunctionServiceRoleFA20DF64",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            Object {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            Object {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "3839faae79dc98cb27aae54e5c7f0c281592853e7fb0f04238098ad02a25952c.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "DDB_TABLE_NAME": Object {
              "Fn::ImportValue": "SharedStack:ExportsOutputRefordertable80C5609084F626AD",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "getopenordersLambdaFunctionServiceRoleFA20DF64",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 15,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "getopenordersLambdaFunctionServiceRoleDefaultPolicy2BBF8B21": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::ImportValue": "SharedStack:ExportsOutputFnGetAttordertable80C56090ArnFF5A50B5",
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "SharedStack:ExportsOutputFnGetAttordertable80C56090ArnFF5A50B5",
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "getopenordersLambdaFunctionServiceRoleDefaultPolicy2BBF8B21",
        "Roles": Array [
          Object {
            "Ref": "getopenordersLambdaFunctionServiceRoleFA20DF64",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "getopenordersLambdaFunctionServiceRoleFA20DF64": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "kitchenstaffapiApiAccessLogGroup30DB1160": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            Object {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "kitchenstaffapiCognitoAuthorizerA7F33D82": Object {
      "Properties": Object {
        "IdentitySource": "method.request.header.Authorization",
        "Name": "authorizer",
        "ProviderARNs": Array [
          Object {
            "Fn::GetAtt": Array [
              "kitchenstaffapiCognitoUserPool21035423",
              "Arn",
            ],
          },
        ],
        "RestApiId": Object {
          "Ref": "kitchenstaffapiLambdaRestApiF3F7D4FC",
        },
        "Type": "COGNITO_USER_POOLS",
      },
      "Type": "AWS::ApiGateway::Authorizer",
    },
    "kitchenstaffapiCognitoUserPool21035423": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccountRecoverySetting": Object {
          "RecoveryMechanisms": Array [
            Object {
              "Name": "verified_phone_number",
              "Priority": 1,
            },
            Object {
              "Name": "verified_email",
              "Priority": 2,
            },
          ],
        },
        "AdminCreateUserConfig": Object {
          "AllowAdminCreateUserOnly": true,
        },
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UserPoolAddOns": Object {
          "AdvancedSecurityMode": "ENFORCED",
        },
        "VerificationMessageTemplate": Object {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Retain",
    },
    "kitchenstaffapiCognitoUserPoolClient064BFF69": Object {
      "Properties": Object {
        "AllowedOAuthFlows": Array [
          "implicit",
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": Array [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin",
        ],
        "CallbackURLs": Array [
          "https://example.com",
        ],
        "SupportedIdentityProviders": Array [
          "COGNITO",
        ],
        "UserPoolId": Object {
          "Ref": "kitchenstaffapiCognitoUserPool21035423",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "kitchenstaffapiLambdaRestApiAccount3F0B8F7C": Object {
      "DependsOn": Array [
        "kitchenstaffapiLambdaRestApiF3F7D4FC",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "kitchenstaffapiLambdaRestApiCloudWatchRole0A152CE6",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "kitchenstaffapiLambdaRestApiCloudWatchRole0A152CE6": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "kitchenstaffapiLambdaRestApiDeployment832EAD6B983d9ce6284ee8e6f3c6844bc18ebcc3": Object {
      "DependsOn": Array [
        "kitchenstaffapiLambdaRestApicompleteorderproxyANYAA8E4C52",
        "kitchenstaffapiLambdaRestApicompleteorderproxyF9BF19EB",
        "kitchenstaffapiLambdaRestApicompleteorder8E72FD84",
        "kitchenstaffapiLambdaRestApigetopenordersproxyANY7A3BF144",
        "kitchenstaffapiLambdaRestApigetopenordersproxyFF3E7DFD",
        "kitchenstaffapiLambdaRestApigetopenorders25EC2468",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checks for it in AWS::ApiGateway::Deployment resource",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "Demo: Kitchen staff API",
        "RestApiId": Object {
          "Ref": "kitchenstaffapiLambdaRestApiF3F7D4FC",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "kitchenstaffapiLambdaRestApiDeploymentStageprodB9D4F4B3": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "kitchenstaffapiApiAccessLogGroup30DB1160",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"user\\":\\"$context.identity.user\\",\\"caller\\":\\"$context.identity.caller\\",\\"requestTime\\":\\"$context.requestTime\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}",
        },
        "DeploymentId": Object {
          "Ref": "kitchenstaffapiLambdaRestApiDeployment832EAD6B983d9ce6284ee8e6f3c6844bc18ebcc3",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": false,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "kitchenstaffapiLambdaRestApiF3F7D4FC",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "kitchenstaffapiLambdaRestApiF3F7D4FC": Object {
      "Properties": Object {
        "Description": "Demo: Kitchen staff API",
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "Name": "LambdaRestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "kitchenstaffapiLambdaRestApiUsagePlan1249F8F9": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "kitchenstaffapiLambdaRestApiF3F7D4FC",
            },
            "Stage": Object {
              "Ref": "kitchenstaffapiLambdaRestApiDeploymentStageprodB9D4F4B3",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "kitchenstaffapiLambdaRestApicompleteorder8E72FD84": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "kitchenstaffapiLambdaRestApiF3F7D4FC",
            "RootResourceId",
          ],
        },
        "PathPart": "complete-order",
        "RestApiId": Object {
          "Ref": "kitchenstaffapiLambdaRestApiF3F7D4FC",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "kitchenstaffapiLambdaRestApicompleteorderproxyANYAA8E4C52": Object {
      "Properties": Object {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": Object {
          "Ref": "kitchenstaffapiCognitoAuthorizerA7F33D82",
        },
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "completeorderLambdaFunction1B59DF2A",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "kitchenstaffapiLambdaRestApicompleteorderproxyF9BF19EB",
        },
        "RestApiId": Object {
          "Ref": "kitchenstaffapiLambdaRestApiF3F7D4FC",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "kitchenstaffapiLambdaRestApicompleteorderproxyANYApiPermissionKitchenStaffStackkitchenstaffapiLambdaRestApi652BB0C4ANYcompleteorderproxyD7DDAD90": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "completeorderLambdaFunction1B59DF2A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "kitchenstaffapiLambdaRestApiF3F7D4FC",
              },
              "/",
              Object {
                "Ref": "kitchenstaffapiLambdaRestApiDeploymentStageprodB9D4F4B3",
              },
              "/*/complete-order/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "kitchenstaffapiLambdaRestApicompleteorderproxyANYApiPermissionTestKitchenStaffStackkitchenstaffapiLambdaRestApi652BB0C4ANYcompleteorderproxy3F69EF93": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "completeorderLambdaFunction1B59DF2A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "kitchenstaffapiLambdaRestApiF3F7D4FC",
              },
              "/test-invoke-stage/*/complete-order/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "kitchenstaffapiLambdaRestApicompleteorderproxyF9BF19EB": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "kitchenstaffapiLambdaRestApicompleteorder8E72FD84",
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "kitchenstaffapiLambdaRestApiF3F7D4FC",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "kitchenstaffapiLambdaRestApigetopenorders25EC2468": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "kitchenstaffapiLambdaRestApiF3F7D4FC",
            "RootResourceId",
          ],
        },
        "PathPart": "get-open-orders",
        "RestApiId": Object {
          "Ref": "kitchenstaffapiLambdaRestApiF3F7D4FC",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "kitchenstaffapiLambdaRestApigetopenordersproxyANY7A3BF144": Object {
      "Properties": Object {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": Object {
          "Ref": "kitchenstaffapiCognitoAuthorizerA7F33D82",
        },
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "getopenordersLambdaFunctionCAD5B34A",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "kitchenstaffapiLambdaRestApigetopenordersproxyFF3E7DFD",
        },
        "RestApiId": Object {
          "Ref": "kitchenstaffapiLambdaRestApiF3F7D4FC",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "kitchenstaffapiLambdaRestApigetopenordersproxyANYApiPermissionKitchenStaffStackkitchenstaffapiLambdaRestApi652BB0C4ANYgetopenordersproxy897FB53F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "getopenordersLambdaFunctionCAD5B34A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "kitchenstaffapiLambdaRestApiF3F7D4FC",
              },
              "/",
              Object {
                "Ref": "kitchenstaffapiLambdaRestApiDeploymentStageprodB9D4F4B3",
              },
              "/*/get-open-orders/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "kitchenstaffapiLambdaRestApigetopenordersproxyANYApiPermissionTestKitchenStaffStackkitchenstaffapiLambdaRestApi652BB0C4ANYgetopenordersproxy966B02A6": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "getopenordersLambdaFunctionCAD5B34A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "kitchenstaffapiLambdaRestApiF3F7D4FC",
              },
              "/test-invoke-stage/*/get-open-orders/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "kitchenstaffapiLambdaRestApigetopenordersproxyFF3E7DFD": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "kitchenstaffapiLambdaRestApigetopenorders25EC2468",
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "kitchenstaffapiLambdaRestApiF3F7D4FC",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
