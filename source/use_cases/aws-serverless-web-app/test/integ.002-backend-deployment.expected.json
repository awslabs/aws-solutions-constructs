{
  "Resources": {
    "CognitoToApiGatewayToLambdaLambdaFunctionServiceRole921AB2D6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      }
    },
    "CognitoToApiGatewayToLambdaLambdaFunctionServiceRoleDefaultPolicyCC3D84AE": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "LambdaToDynamoDBDynamoTable53C1442D",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CognitoToApiGatewayToLambdaLambdaFunctionServiceRoleDefaultPolicyCC3D84AE",
        "Roles": [
          {
            "Ref": "CognitoToApiGatewayToLambdaLambdaFunctionServiceRole921AB2D6"
          }
        ]
      }
    },
    "CognitoToApiGatewayToLambdaLambdaFunction555D0B9C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters9a9c398189879e9ca9700ba0658086063d8ee7ccd068043c722c28478c6c4360S3Bucket20EEB389"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters9a9c398189879e9ca9700ba0658086063d8ee7ccd068043c722c28478c6c4360S3VersionKeyC46EC577"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters9a9c398189879e9ca9700ba0658086063d8ee7ccd068043c722c28478c6c4360S3VersionKeyC46EC577"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "CognitoToApiGatewayToLambdaLambdaFunctionServiceRole921AB2D6",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.x",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DDB_TABLE_NAME": {
              "Ref": "LambdaToDynamoDBDynamoTable53C1442D"
            }
          }
        }
      },
      "DependsOn": [
        "CognitoToApiGatewayToLambdaLambdaFunctionServiceRoleDefaultPolicyCC3D84AE",
        "CognitoToApiGatewayToLambdaLambdaFunctionServiceRole921AB2D6"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            }
          ]
        }
      }
    },
    "CognitoToApiGatewayToLambdaApiAccessLogGroup43A4A269": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "CognitoToApiGatewayToLambdaLambdaRestApi31103AF0": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Name": "LambdaRestApi"
      }
    },
    "CognitoToApiGatewayToLambdaLambdaRestApiDeployment1E6D5E6682fe19d2bcf96aadbe65fec49213c15c": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "CognitoToApiGatewayToLambdaLambdaRestApi31103AF0"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "CognitoToApiGatewayToLambdaLambdaRestApiproxyANY2839789B",
        "CognitoToApiGatewayToLambdaLambdaRestApiproxyOPTIONS63FED6E8",
        "CognitoToApiGatewayToLambdaLambdaRestApiproxy008E09BA",
        "CognitoToApiGatewayToLambdaLambdaRestApiANY53FD6161",
        "CognitoToApiGatewayToLambdaLambdaRestApiOPTIONS84242119"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource"
            }
          ]
        }
      }
    },
    "CognitoToApiGatewayToLambdaLambdaRestApiDeploymentStageprod743A20E1": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "CognitoToApiGatewayToLambdaLambdaRestApi31103AF0"
        },
        "AccessLogSetting": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "CognitoToApiGatewayToLambdaApiAccessLogGroup43A4A269",
              "Arn"
            ]
          },
          "Format": "{\"requestId\":\"$context.requestId\",\"ip\":\"$context.identity.sourceIp\",\"user\":\"$context.identity.user\",\"caller\":\"$context.identity.caller\",\"requestTime\":\"$context.requestTime\",\"httpMethod\":\"$context.httpMethod\",\"resourcePath\":\"$context.resourcePath\",\"status\":\"$context.status\",\"protocol\":\"$context.protocol\",\"responseLength\":\"$context.responseLength\"}"
        },
        "DeploymentId": {
          "Ref": "CognitoToApiGatewayToLambdaLambdaRestApiDeployment1E6D5E6682fe19d2bcf96aadbe65fec49213c15c"
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*"
          }
        ],
        "StageName": "prod"
      }
    },
    "CognitoToApiGatewayToLambdaLambdaRestApiOPTIONS84242119": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Fn::GetAtt": [
            "CognitoToApiGatewayToLambdaLambdaRestApi31103AF0",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "CognitoToApiGatewayToLambdaLambdaRestApi31103AF0"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ]
      }
    },
    "CognitoToApiGatewayToLambdaLambdaRestApiproxy008E09BA": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "CognitoToApiGatewayToLambdaLambdaRestApi31103AF0",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "CognitoToApiGatewayToLambdaLambdaRestApi31103AF0"
        }
      }
    },
    "CognitoToApiGatewayToLambdaLambdaRestApiproxyOPTIONS63FED6E8": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "CognitoToApiGatewayToLambdaLambdaRestApiproxy008E09BA"
        },
        "RestApiId": {
          "Ref": "CognitoToApiGatewayToLambdaLambdaRestApi31103AF0"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ]
      }
    },
    "CognitoToApiGatewayToLambdaLambdaRestApiproxyANYApiPermissionServerlessBackendStackCognitoToApiGatewayToLambdaLambdaRestApi6BF82CD7ANYproxy694ECA33": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CognitoToApiGatewayToLambdaLambdaFunction555D0B9C",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "CognitoToApiGatewayToLambdaLambdaRestApi31103AF0"
              },
              "/",
              {
                "Ref": "CognitoToApiGatewayToLambdaLambdaRestApiDeploymentStageprod743A20E1"
              },
              "/*/{proxy+}"
            ]
          ]
        }
      }
    },
    "CognitoToApiGatewayToLambdaLambdaRestApiproxyANYApiPermissionTestServerlessBackendStackCognitoToApiGatewayToLambdaLambdaRestApi6BF82CD7ANYproxy29080D5A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CognitoToApiGatewayToLambdaLambdaFunction555D0B9C",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "CognitoToApiGatewayToLambdaLambdaRestApi31103AF0"
              },
              "/test-invoke-stage/*/{proxy+}"
            ]
          ]
        }
      }
    },
    "CognitoToApiGatewayToLambdaLambdaRestApiproxyANY2839789B": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Ref": "CognitoToApiGatewayToLambdaLambdaRestApiproxy008E09BA"
        },
        "RestApiId": {
          "Ref": "CognitoToApiGatewayToLambdaLambdaRestApi31103AF0"
        },
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "CognitoToApiGatewayToLambdaCognitoAuthorizerAF023B99"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CognitoToApiGatewayToLambdaLambdaFunction555D0B9C",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      }
    },
    "CognitoToApiGatewayToLambdaLambdaRestApiANYApiPermissionServerlessBackendStackCognitoToApiGatewayToLambdaLambdaRestApi6BF82CD7ANYAD0464C2": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CognitoToApiGatewayToLambdaLambdaFunction555D0B9C",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "CognitoToApiGatewayToLambdaLambdaRestApi31103AF0"
              },
              "/",
              {
                "Ref": "CognitoToApiGatewayToLambdaLambdaRestApiDeploymentStageprod743A20E1"
              },
              "/*/"
            ]
          ]
        }
      }
    },
    "CognitoToApiGatewayToLambdaLambdaRestApiANYApiPermissionTestServerlessBackendStackCognitoToApiGatewayToLambdaLambdaRestApi6BF82CD7ANYC531DE60": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CognitoToApiGatewayToLambdaLambdaFunction555D0B9C",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "CognitoToApiGatewayToLambdaLambdaRestApi31103AF0"
              },
              "/test-invoke-stage/*/"
            ]
          ]
        }
      }
    },
    "CognitoToApiGatewayToLambdaLambdaRestApiANY53FD6161": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Fn::GetAtt": [
            "CognitoToApiGatewayToLambdaLambdaRestApi31103AF0",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "CognitoToApiGatewayToLambdaLambdaRestApi31103AF0"
        },
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "CognitoToApiGatewayToLambdaCognitoAuthorizerAF023B99"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CognitoToApiGatewayToLambdaLambdaFunction555D0B9C",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      }
    },
    "CognitoToApiGatewayToLambdaLambdaRestApiUsagePlanBC5A9D9D": {
      "Type": "AWS::ApiGateway::UsagePlan",
      "Properties": {
        "ApiStages": [
          {
            "ApiId": {
              "Ref": "CognitoToApiGatewayToLambdaLambdaRestApi31103AF0"
            },
            "Stage": {
              "Ref": "CognitoToApiGatewayToLambdaLambdaRestApiDeploymentStageprod743A20E1"
            },
            "Throttle": {}
          }
        ]
      }
    },
    "CognitoToApiGatewayToLambdaLambdaRestApiCloudWatchRoleD7E52FBB": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy"
          }
        ]
      }
    },
    "CognitoToApiGatewayToLambdaLambdaRestApiAccountD1F8AA14": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "CognitoToApiGatewayToLambdaLambdaRestApiCloudWatchRoleD7E52FBB",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CognitoToApiGatewayToLambdaLambdaRestApi31103AF0"
      ]
    },
    "CognitoToApiGatewayToLambdaCognitoUserPoolsmsRole62C22F60": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "ServerlessBackendStackCognitoToApiGatewayToLambdaCognitoUserPool0C465C62"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "cognito-idp.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "sns:Publish",
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "sns-publish"
          }
        ]
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W11",
              "reason": "Allowing * resource on permissions policy since its used by Cognito to send SMS messages via sns:Publish"
            }
          ]
        }
      }
    },
    "CognitoToApiGatewayToLambdaCognitoUserPool6EE989F1": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": true
        },
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "SmsConfiguration": {
          "ExternalId": "ServerlessBackendStackCognitoToApiGatewayToLambdaCognitoUserPool0C465C62",
          "SnsCallerArn": {
            "Fn::GetAtt": [
              "CognitoToApiGatewayToLambdaCognitoUserPoolsmsRole62C22F60",
              "Arn"
            ]
          }
        },
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UserPoolAddOns": {
          "AdvancedSecurityMode": "ENFORCED"
        },
        "UserPoolName": "WileRydes",
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}"
        }
      }
    },
    "CognitoToApiGatewayToLambdaCognitoUserPoolClientC6919938": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "UserPoolId": {
          "Ref": "CognitoToApiGatewayToLambdaCognitoUserPool6EE989F1"
        }
      }
    },
    "CognitoToApiGatewayToLambdaCognitoAuthorizerAF023B99": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "RestApiId": {
          "Ref": "CognitoToApiGatewayToLambdaLambdaRestApi31103AF0"
        },
        "Type": "COGNITO_USER_POOLS",
        "IdentitySource": "method.request.header.Authorization",
        "Name": "authorizer",
        "ProviderARNs": [
          {
            "Fn::GetAtt": [
              "CognitoToApiGatewayToLambdaCognitoUserPool6EE989F1",
              "Arn"
            ]
          }
        ]
      }
    },
    "updateConfigHandlerServiceRole3B176B96": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "updateConfigHandlerServiceRoleDefaultPolicy157F28C3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject",
                "s3:PutObjectAcl",
                "s3:PutObjectVersionAcl"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Fn::ImportValue": "websiteBucket"
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "updateConfigHandlerServiceRoleDefaultPolicy157F28C3",
        "Roles": [
          {
            "Ref": "updateConfigHandlerServiceRole3B176B96"
          }
        ]
      }
    },
    "updateConfigHandler59840941": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters3aa519f176d0d52023f4992f8ada07849f844467dcb0d4dfb94bb3b350a1d791S3Bucket928903EC"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters3aa519f176d0d52023f4992f8ada07849f844467dcb0d4dfb94bb3b350a1d791S3VersionKey3C7BB3DD"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters3aa519f176d0d52023f4992f8ada07849f844467dcb0d4dfb94bb3b350a1d791S3VersionKey3C7BB3DD"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "update_s3_object.on_event",
        "Role": {
          "Fn::GetAtt": [
            "updateConfigHandlerServiceRole3B176B96",
            "Arn"
          ]
        },
        "Runtime": "python3.8",
        "Timeout": 300
      },
      "DependsOn": [
        "updateConfigHandlerServiceRoleDefaultPolicy157F28C3",
        "updateConfigHandlerServiceRole3B176B96"
      ]
    },
    "CustomResourceProviderframeworkonEventServiceRole7EBC5835": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "CustomResourceProviderframeworkonEventServiceRoleDefaultPolicy93CD1647": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "updateConfigHandler59840941",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CustomResourceProviderframeworkonEventServiceRoleDefaultPolicy93CD1647",
        "Roles": [
          {
            "Ref": "CustomResourceProviderframeworkonEventServiceRole7EBC5835"
          }
        ]
      }
    },
    "CustomResourceProviderframeworkonEvent0AA4376C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061S3Bucket0A1029B1"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061S3VersionKeyFB75FDAC"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061S3VersionKeyFB75FDAC"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "CustomResourceProviderframeworkonEventServiceRole7EBC5835",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.x",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "updateConfigHandler59840941",
                "Arn"
              ]
            }
          }
        },
        "Timeout": 900
      },
      "DependsOn": [
        "CustomResourceProviderframeworkonEventServiceRoleDefaultPolicy93CD1647",
        "CustomResourceProviderframeworkonEventServiceRole7EBC5835"
      ]
    },
    "CustomResource": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomResourceProviderframeworkonEvent0AA4376C",
            "Arn"
          ]
        },
        "UserPool": {
          "Ref": "CognitoToApiGatewayToLambdaCognitoUserPool6EE989F1"
        },
        "Client": {
          "Ref": "CognitoToApiGatewayToLambdaCognitoUserPoolClientC6919938"
        },
        "Region": {
          "Ref": "AWS::Region"
        },
        "Bucket": {
          "Fn::ImportValue": "websiteBucket"
        },
        "RestApi": {
          "Fn::Join": [
            "",
            [
              "https://",
              {
                "Ref": "CognitoToApiGatewayToLambdaLambdaRestApi31103AF0"
              },
              ".execute-api.",
              {
                "Ref": "AWS::Region"
              },
              ".",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              {
                "Ref": "CognitoToApiGatewayToLambdaLambdaRestApiDeploymentStageprod743A20E1"
              },
              "/"
            ]
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "LambdaToDynamoDBDynamoTable53C1442D": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "RideId",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "RideId",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "SSESpecification": {
          "SSEEnabled": true
        },
        "TableName": "Rides"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    }
  },
  "Outputs": {
    "CognitoToApiGatewayToLambdaLambdaRestApiEndpoint02EBBDD6": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "CognitoToApiGatewayToLambdaLambdaRestApi31103AF0"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "CognitoToApiGatewayToLambdaLambdaRestApiDeploymentStageprod743A20E1"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Parameters": {
    "AssetParameters9a9c398189879e9ca9700ba0658086063d8ee7ccd068043c722c28478c6c4360S3Bucket20EEB389": {
      "Type": "String",
      "Description": "S3 bucket for asset \"9a9c398189879e9ca9700ba0658086063d8ee7ccd068043c722c28478c6c4360\""
    },
    "AssetParameters9a9c398189879e9ca9700ba0658086063d8ee7ccd068043c722c28478c6c4360S3VersionKeyC46EC577": {
      "Type": "String",
      "Description": "S3 key for asset version \"9a9c398189879e9ca9700ba0658086063d8ee7ccd068043c722c28478c6c4360\""
    },
    "AssetParameters9a9c398189879e9ca9700ba0658086063d8ee7ccd068043c722c28478c6c4360ArtifactHash5ED5576F": {
      "Type": "String",
      "Description": "Artifact hash for asset \"9a9c398189879e9ca9700ba0658086063d8ee7ccd068043c722c28478c6c4360\""
    },
    "AssetParameters3aa519f176d0d52023f4992f8ada07849f844467dcb0d4dfb94bb3b350a1d791S3Bucket928903EC": {
      "Type": "String",
      "Description": "S3 bucket for asset \"3aa519f176d0d52023f4992f8ada07849f844467dcb0d4dfb94bb3b350a1d791\""
    },
    "AssetParameters3aa519f176d0d52023f4992f8ada07849f844467dcb0d4dfb94bb3b350a1d791S3VersionKey3C7BB3DD": {
      "Type": "String",
      "Description": "S3 key for asset version \"3aa519f176d0d52023f4992f8ada07849f844467dcb0d4dfb94bb3b350a1d791\""
    },
    "AssetParameters3aa519f176d0d52023f4992f8ada07849f844467dcb0d4dfb94bb3b350a1d791ArtifactHashF30FBC00": {
      "Type": "String",
      "Description": "Artifact hash for asset \"3aa519f176d0d52023f4992f8ada07849f844467dcb0d4dfb94bb3b350a1d791\""
    },
    "AssetParameters4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061S3Bucket0A1029B1": {
      "Type": "String",
      "Description": "S3 bucket for asset \"4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061\""
    },
    "AssetParameters4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061S3VersionKeyFB75FDAC": {
      "Type": "String",
      "Description": "S3 key for asset version \"4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061\""
    },
    "AssetParameters4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061ArtifactHash40CCFA64": {
      "Type": "String",
      "Description": "Artifact hash for asset \"4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061\""
    }
  }
}